// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXAggregateTarget section */
		1155F10B4C175C4FA7F28190 /* memcheck */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 63F0289AB74C4A1583167239 /* Build configuration list for PBXAggregateTarget "memcheck" */;
			buildPhases = (
				AE13C821CD1F5963E9AF51CB /* Generate CMakeFiles/memcheck */,
			);
			dependencies = (
				E6F289EA4878425EB7DEB375 /* PBXTargetDependency */,
			);
			name = memcheck;
			productName = memcheck;
		};
		42312B05A9769174701FD09E /* covtest */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 06A673F188FC49D48CA874CA /* Build configuration list for PBXAggregateTarget "covtest" */;
			buildPhases = (
				A8FC303B31014D13E92E94AA /* Generate CMakeFiles/covtest */,
			);
			dependencies = (
				F6F562B61697433BA6B9D400 /* PBXTargetDependency */,
			);
			name = covtest;
			productName = covtest;
		};
		60222090283F134E7F4292E5 /* RUN_TESTS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 7A6C70B9B0F74C4896D878C2 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */;
			buildPhases = (
				003C8D08B0008F35F218E126 /* CMake PostBuild Rules */,
			);
			dependencies = (
			);
			name = RUN_TESTS;
			productName = RUN_TESTS;
		};
		6F6DA67F34C070F08125A803 /* ALL_BUILD */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 4DA0FE8D9411464AAC887717 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
			buildPhases = (
				D9328AD99FD2F4963EFCA6A4 /* Generate CMakeFiles/ALL_BUILD */,
			);
			dependencies = (
				EDD84FC8B668445B9013392D /* PBXTargetDependency */,
				EE2F2DB148464D738531F7D4 /* PBXTargetDependency */,
				75545857E9914BB48BA47C1E /* PBXTargetDependency */,
				B11854A706C744FE9F899AEE /* PBXTargetDependency */,
				D1B75DC5D4EE48FAA360E10D /* PBXTargetDependency */,
				FA8263C85BA34913A0F2A6BD /* PBXTargetDependency */,
				259AC3F801C0468FA33652A0 /* PBXTargetDependency */,
				EB8C075B66D4450CB7F49E95 /* PBXTargetDependency */,
				8C9A9DA674F74F878D426AB9 /* PBXTargetDependency */,
				811B43F1D66442DB9C3D1D78 /* PBXTargetDependency */,
				36C18C8257014F8882279A55 /* PBXTargetDependency */,
				5D182E0A3860426199C98AAB /* PBXTargetDependency */,
				525338D9AC144B2F8A90E2B0 /* PBXTargetDependency */,
				9704DF4BF626415B83F8E02E /* PBXTargetDependency */,
				31973C4B44F0492B9EE34C4F /* PBXTargetDependency */,
				4E21D91EB89A4644A9409B9D /* PBXTargetDependency */,
				3655A78D215B412F9CEC660E /* PBXTargetDependency */,
				8210909D3C264C15A9CEEA76 /* PBXTargetDependency */,
				B415733296BC40539F20FCB9 /* PBXTargetDependency */,
				0081AB4D30A44BC3BBB90199 /* PBXTargetDependency */,
				DD6D446AA15B484B99A5B6D6 /* PBXTargetDependency */,
				6941862C60484BD99A3C9195 /* PBXTargetDependency */,
				A0A5E602E73F45729CD17F70 /* PBXTargetDependency */,
				6146CD95158D47F69D75606E /* PBXTargetDependency */,
				E2FE3B7CFBD44214A8395DE7 /* PBXTargetDependency */,
				9F88A4562A8E47228A9FDC55 /* PBXTargetDependency */,
				1C225138B90A47C6AC74EBFB /* PBXTargetDependency */,
				4340D65359B44CDFB825EE82 /* PBXTargetDependency */,
				DCFB9453CCC349F3812ADC63 /* PBXTargetDependency */,
				FF4E7474FB8544538F410960 /* PBXTargetDependency */,
				787D37AEABA94507B199D458 /* PBXTargetDependency */,
				FDFFE021C208407B98025CC7 /* PBXTargetDependency */,
				6519154AE34F4F379C7A6AB6 /* PBXTargetDependency */,
				EF48098740854C3DA6914D5D /* PBXTargetDependency */,
				D62526C746BB4195AACF3D33 /* PBXTargetDependency */,
				F2775037481D4E6FAD5E108C /* PBXTargetDependency */,
				47DBD58BC02645DCAB98AD54 /* PBXTargetDependency */,
				B87D018C93CD48BBA27F19DA /* PBXTargetDependency */,
				51AF83E222E640FA915B6842 /* PBXTargetDependency */,
				3DA383242AD84ADBA921CC59 /* PBXTargetDependency */,
				7E1818E922E348EEB66E99AC /* PBXTargetDependency */,
				30E596F21AC049018C5D45D2 /* PBXTargetDependency */,
				3030DACC9F424665A362B80B /* PBXTargetDependency */,
				00B0DC97503F4F62A1316549 /* PBXTargetDependency */,
				7B64668A8486405A93FE1F8F /* PBXTargetDependency */,
				22DFB99F321346B8BEBD97DD /* PBXTargetDependency */,
				A89AE662304C420EACD6C8E6 /* PBXTargetDependency */,
				1CD91E3DDA8B4C959202EECA /* PBXTargetDependency */,
				C64BB7BC0A59479F8F784DEA /* PBXTargetDependency */,
				87B60B037F844E94B66FD5D2 /* PBXTargetDependency */,
				839316592C2B4B8C99780950 /* PBXTargetDependency */,
				F3483E42BF33418791AC27CA /* PBXTargetDependency */,
				985267E004A14DE9B1BD9B92 /* PBXTargetDependency */,
				CDD429522E6E495F8A33EC4D /* PBXTargetDependency */,
				3926426B68A8497795ECD5A4 /* PBXTargetDependency */,
				8A2CA5B2422647639DF2D544 /* PBXTargetDependency */,
				B68207C7D92F4C609FDB86E6 /* PBXTargetDependency */,
				F5632A95B7E44ED39FD33E77 /* PBXTargetDependency */,
				E613A44EB8884586932CBD5E /* PBXTargetDependency */,
				9AB6565DEA054F099732FF87 /* PBXTargetDependency */,
				03D97274A094460EA97BB9A9 /* PBXTargetDependency */,
				05A05E3E232048CD81EBE76B /* PBXTargetDependency */,
				63FD2C92ADB440969E17EC93 /* PBXTargetDependency */,
				2E3FF9B6BD464187B54562B1 /* PBXTargetDependency */,
				ED6B394A90B44D1581FFF448 /* PBXTargetDependency */,
				8C34FD05B5A149DF98726032 /* PBXTargetDependency */,
				AA01336206D94C7A854C39C9 /* PBXTargetDependency */,
				33425B1D22E3460D88B2DB77 /* PBXTargetDependency */,
				CBB71111D1C94B6B97ED0D11 /* PBXTargetDependency */,
				6BC1F599FF4D493DB99AC0D6 /* PBXTargetDependency */,
				FA5BEC15EE824695AB44726C /* PBXTargetDependency */,
				8716BD9D1F1642C383B3262B /* PBXTargetDependency */,
				780B7FC2205442A0BE4CA5E8 /* PBXTargetDependency */,
				FF581451916441AFACA1F1D0 /* PBXTargetDependency */,
				3AED2AD19E3C4135B5D6F6EF /* PBXTargetDependency */,
				85F9283988BC4A149CEF24D6 /* PBXTargetDependency */,
				B615B49119D9482FA9B78E52 /* PBXTargetDependency */,
				2E3D379838DE48CEAE863E62 /* PBXTargetDependency */,
				E7623110970B4F119D870E7E /* PBXTargetDependency */,
				F3AAF6ECFB4E48ED97E65E35 /* PBXTargetDependency */,
				118C58A3DF50496E86B15497 /* PBXTargetDependency */,
				BADEB17F55964E0282A476A1 /* PBXTargetDependency */,
				8F7CAE4492CC4D64AF6493B2 /* PBXTargetDependency */,
				1CE34CDEFD2644B784123136 /* PBXTargetDependency */,
				A109D3EB7CB74F4C858F9B59 /* PBXTargetDependency */,
				E3A9F9ED2F724831B3960804 /* PBXTargetDependency */,
				395E3F72B0F2462895C4C18F /* PBXTargetDependency */,
				80B4E1B16ADE4F6DA815C19D /* PBXTargetDependency */,
				41B69E83DD9B4120A2E54152 /* PBXTargetDependency */,
				81DE36376C5B4915B115C87B /* PBXTargetDependency */,
				9AB3CCEAE6E44A76924B00A6 /* PBXTargetDependency */,
				927461B2D7554E7A97298A20 /* PBXTargetDependency */,
				D3A2697491284D03802E3E04 /* PBXTargetDependency */,
				2AD7470ABCE4441FA87D74BA /* PBXTargetDependency */,
				8C2A8505AA3147B8AC17B976 /* PBXTargetDependency */,
				89D5A4DC0E834C19A7CACCFA /* PBXTargetDependency */,
				E12C4984F0C54A08A5F42BEA /* PBXTargetDependency */,
				E4501A740A4F4FA59E6E8A2C /* PBXTargetDependency */,
				693B3544D59547C9A59E018B /* PBXTargetDependency */,
				44C999BCD1E445A088B1D15C /* PBXTargetDependency */,
				1D4FD084DDBC484CB908DC51 /* PBXTargetDependency */,
				8FA5DCBFB64A47269A95D856 /* PBXTargetDependency */,
				4E8178D9A6904DBFB2BE802B /* PBXTargetDependency */,
				E180734200D94AD49CC407D5 /* PBXTargetDependency */,
				F565ADEA149644E0A7899187 /* PBXTargetDependency */,
				A635F62428EC42EEBB7DB2C5 /* PBXTargetDependency */,
				89CAE4E54775498484412A6F /* PBXTargetDependency */,
				DF49751F196B4CA4A09347D5 /* PBXTargetDependency */,
				09F8A3EFF00640278280B57C /* PBXTargetDependency */,
				975BE5FEE06049BC989874D0 /* PBXTargetDependency */,
				F01C8E4C6BCA4381B238A928 /* PBXTargetDependency */,
				CF2F51AE1EC243BF8AEF1B00 /* PBXTargetDependency */,
			);
			name = ALL_BUILD;
			productName = ALL_BUILD;
		};
		7759261DA31821E0140A5015 /* ZERO_CHECK */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 676F918F558C4472B0C8E2D3 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
			buildPhases = (
				549724ACF6176521CD8576FA /* Generate CMakeFiles/ZERO_CHECK */,
			);
			dependencies = (
			);
			name = ZERO_CHECK;
			productName = ZERO_CHECK;
		};
		B10EA1B56A3E4F318BACE8BE /* apidoc */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = DD8EDB4389B64098816847DE /* Build configuration list for PBXAggregateTarget "apidoc" */;
			buildPhases = (
				917886938E3AB1660E3E4760 /* Generate CMakeFiles/apidoc */,
			);
			dependencies = (
				0350E340FC454B579000DD18 /* PBXTargetDependency */,
			);
			name = apidoc;
			productName = apidoc;
		};
		BDF91746C131D23CEB70927E /* lcov */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C6FEFD252D15401F8692A15F /* Build configuration list for PBXAggregateTarget "lcov" */;
			buildPhases = (
				01323177FD2E5C580F4D38DE /* Generate CMakeFiles/lcov */,
			);
			dependencies = (
				648FD5BD95F744738FA71990 /* PBXTargetDependency */,
			);
			name = lcov;
			productName = lcov;
		};
		F1CE8A4F146284118E02CDC0 /* lib */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 2FE7E4657B704FDAA07F3C02 /* Build configuration list for PBXAggregateTarget "lib" */;
			buildPhases = (
				D5D83D609150F868752E4569 /* Generate library/CMakeFiles/lib */,
			);
			dependencies = (
				5E80A1CD051E4B58B45CDE1D /* PBXTargetDependency */,
				3EE748532371454BA2A8B8AB /* PBXTargetDependency */,
				3206F91B2E214387998BF947 /* PBXTargetDependency */,
				7722BB48A15E48CA9ADD708F /* PBXTargetDependency */,
			);
			name = lib;
			productName = lib;
		};
		F5B05637593BBB92D286044E /* install */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 9052BEB1A69C49E0BB4B26DE /* Build configuration list for PBXAggregateTarget "install" */;
			buildPhases = (
				93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */,
			);
			dependencies = (
				EBD33AAC8340402AAB867FE0 /* PBXTargetDependency */,
			);
			name = install;
			productName = install;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		00D5DFC1E2EC46BC9404BE5C /* md2.c in Sources */ = {isa = PBXBuildFile; fileRef = B13542D3C8094DECBBBB0562 /* md2.c */; };
		051BE8B896EE4DABB29861F4 /* x509_csr.c in Sources */ = {isa = PBXBuildFile; fileRef = 032D0BE931B84C6294020D72 /* x509_csr.c */; };
		0531F55AB57448B4B598F2CF /* dtls_server.c in Sources */ = {isa = PBXBuildFile; fileRef = E010FAACB7F74ABBB853C9DB /* dtls_server.c */; };
		0619110045194730B44E0AC4 /* test_suite_x509parse.c in Sources */ = {isa = PBXBuildFile; fileRef = A6BD27825F7343CABCE687E6 /* test_suite_x509parse.c */; };
		064F5B3A9A4A43A184CA9A44 /* ssl_mail_client.c in Sources */ = {isa = PBXBuildFile; fileRef = 5C510F9E04814B2F9FA24D39 /* ssl_mail_client.c */; };
		06A3CA28725A4CBD9C51579A /* ssl_client1.c in Sources */ = {isa = PBXBuildFile; fileRef = F9F14DEBB98C4FC18BFD481E /* ssl_client1.c */; };
		0712189E5608468BB6B1A3CE /* test_suite_arc4.c in Sources */ = {isa = PBXBuildFile; fileRef = BB4C1FAA578748CB8EBE57AD /* test_suite_arc4.c */; };
		07F86E60472F4D0398CAD7EA /* test_suite_gcm.aes128_en.c in Sources */ = {isa = PBXBuildFile; fileRef = 2FB528091B8F4572AB3BA684 /* test_suite_gcm.aes128_en.c */; };
		094FA90B3AA44B0D919D3108 /* test_suite_cipher.null.c in Sources */ = {isa = PBXBuildFile; fileRef = A759B47F93BD4F2595FD3AB4 /* test_suite_cipher.null.c */; };
		0C278EF9320C476686124E0E /* version_features.c in Sources */ = {isa = PBXBuildFile; fileRef = 11E93400C71D4E80B39EBDF6 /* version_features.c */; };
		0EACD412FFD54094A3C01431 /* key_app.c in Sources */ = {isa = PBXBuildFile; fileRef = 14235E06DBB84CCC9416E073 /* key_app.c */; };
		0EE6EE693565403E99140838 /* test_suite_blowfish.c in Sources */ = {isa = PBXBuildFile; fileRef = D46D2426938E4978BF9B30AA /* test_suite_blowfish.c */; };
		0F683E14A4E14FAA9021182C /* test_suite_x509write.c in Sources */ = {isa = PBXBuildFile; fileRef = 8CA3AB11033845F991805631 /* test_suite_x509write.c */; };
		0FB048B1C27D4D3AA2F9AB6D /* test_suite_cmac.c in Sources */ = {isa = PBXBuildFile; fileRef = 74977C1423AB48AFAA77A6A5 /* test_suite_cmac.c */; };
		136E6AE715E74E56B4562F6C /* test_suite_aes.cbc.c in Sources */ = {isa = PBXBuildFile; fileRef = 693C86663D294627A85BE9C9 /* test_suite_aes.cbc.c */; };
		13AA674258C34B1DBCD81947 /* hello.c in Sources */ = {isa = PBXBuildFile; fileRef = E08561AE268B4AC6B967F01B /* hello.c */; };
		148C8DFF28FC4F70BFE3FEE8 /* test_suite_timing.c in Sources */ = {isa = PBXBuildFile; fileRef = 72EC203136EF43C9A58B12D0 /* test_suite_timing.c */; };
		150FDFCC3B314C37949CD120 /* ecp_curves.c in Sources */ = {isa = PBXBuildFile; fileRef = 7C7D511A198E476382302A95 /* ecp_curves.c */; };
		17521D201A43430AA87B60E8 /* test_suite_memory_buffer_alloc.c in Sources */ = {isa = PBXBuildFile; fileRef = 3B9589614CA84E028AF00E99 /* test_suite_memory_buffer_alloc.c */; };
		18E28F216D77400888850BEE /* sha256.c in Sources */ = {isa = PBXBuildFile; fileRef = 0036270E28AF404E99A113AE /* sha256.c */; };
		1948C54D3373410C999AACF4 /* pk_sign.c in Sources */ = {isa = PBXBuildFile; fileRef = DDC70146D6334AD39279A9E9 /* pk_sign.c */; };
		1A51539CC50649B9BD96E869 /* md5.c in Sources */ = {isa = PBXBuildFile; fileRef = 1519A846100A4D57B3B62A49 /* md5.c */; };
		1BC9390F4A194B83B6A8D5BD /* test_suite_ctr_drbg.c in Sources */ = {isa = PBXBuildFile; fileRef = 6BB8D955F31C43288FED1941 /* test_suite_ctr_drbg.c */; };
		1D8E08B1BA9E45CE9B486C7D /* gen_random_havege.c in Sources */ = {isa = PBXBuildFile; fileRef = A745B535514B4F39AB64F5FC /* gen_random_havege.c */; };
		1DB241F320224C4996D752B4 /* test_suite_pk.c in Sources */ = {isa = PBXBuildFile; fileRef = EA45AF5B328F425D8D9D3440 /* test_suite_pk.c */; };
		20170FA7DAC046DA968E3E7A /* ssl_fork_server.c in Sources */ = {isa = PBXBuildFile; fileRef = 33962C71008248968D1A6ADF /* ssl_fork_server.c */; };
		2061A8286CE04F72B201773C /* rsa_genkey.c in Sources */ = {isa = PBXBuildFile; fileRef = C9718DEFE1F143E48561B017 /* rsa_genkey.c */; };
		20DA8C99F39B442E801CF9EF /* pkparse.c in Sources */ = {isa = PBXBuildFile; fileRef = 2B24D65D28DB47C9BEB8A820 /* pkparse.c */; };
		225742C992814DA68119BA7F /* udp_proxy.c in Sources */ = {isa = PBXBuildFile; fileRef = 25B1F31AC23F4B41BCD85187 /* udp_proxy.c */; };
		25471790EB954FE19D33BB5D /* havege.c in Sources */ = {isa = PBXBuildFile; fileRef = DACFB279BB0B4882826D09B8 /* havege.c */; };
		2576806039AB43CD98DCE7E6 /* timing.c in Sources */ = {isa = PBXBuildFile; fileRef = F3674A80649F40CE8E4E4FBC /* timing.c */; };
		25F970C09112477D8943280B /* aes.c in Sources */ = {isa = PBXBuildFile; fileRef = FE883A843A2E4E9CBF723D8C /* aes.c */; };
		29F363FFD45B4D3F91331967 /* test_suite_mpi.c in Sources */ = {isa = PBXBuildFile; fileRef = 709EE4943773465689B68D80 /* test_suite_mpi.c */; };
		2B82AB0A08724E23B50D64AE /* test_suite_gcm.camellia.c in Sources */ = {isa = PBXBuildFile; fileRef = E6C7B5F63E1748FD89902A25 /* test_suite_gcm.camellia.c */; };
		2BFF792A6D5544E8BA2B7467 /* des.c in Sources */ = {isa = PBXBuildFile; fileRef = 8FE7325E2CC5464E9D9A74A4 /* des.c */; };
		2E1AED14997D45A89066A952 /* test_suite_cipher.gcm.c in Sources */ = {isa = PBXBuildFile; fileRef = 89C1974729534813B40863C8 /* test_suite_cipher.gcm.c */; };
		2E63A642631E45AFB159293F /* test_suite_cipher.camellia.c in Sources */ = {isa = PBXBuildFile; fileRef = 0A1A05318572496A91C96F22 /* test_suite_cipher.camellia.c */; };
		3075A2A7269142278D88339D /* mini_client.c in Sources */ = {isa = PBXBuildFile; fileRef = 2A7B10EA903045E4BB3C61FC /* mini_client.c */; };
		314CB4E9189F4478A4AA47E2 /* test_suite_pkcs1_v15.c in Sources */ = {isa = PBXBuildFile; fileRef = F7F9F080C7E7403383450439 /* test_suite_pkcs1_v15.c */; };
		317198616D3647E59DFA243C /* crl_app.c in Sources */ = {isa = PBXBuildFile; fileRef = 78883992930D4B1394127E47 /* crl_app.c */; };
		34601E7C062C4B3984C4E255 /* cert_app.c in Sources */ = {isa = PBXBuildFile; fileRef = CBA3408ABC6B45ADAFF6DCA7 /* cert_app.c */; };
		34E738E97C7742EF91E11A93 /* generic_sum.c in Sources */ = {isa = PBXBuildFile; fileRef = 06B0DD40F01C4A76A51B47E2 /* generic_sum.c */; };
		35347BCC7B71406D8BE8619A /* test_suite_ecp.c in Sources */ = {isa = PBXBuildFile; fileRef = B8299D6AD1C04901A46D391A /* test_suite_ecp.c */; };
		35F51C5F2D9147639675F144 /* ssl_cookie.c in Sources */ = {isa = PBXBuildFile; fileRef = 7262D148B3404BE9925ED667 /* ssl_cookie.c */; };
		361C8692D4BD462AABF967A0 /* entropy.c in Sources */ = {isa = PBXBuildFile; fileRef = 46C514389FB2475CA62FDB75 /* entropy.c */; };
		3702808DC1404E6FAEF1216E /* ecjpake.c in Sources */ = {isa = PBXBuildFile; fileRef = 3040196CB44E4D5DBC7121BB /* ecjpake.c */; };
		37AA903BD7AF48F99AA87418 /* test_suite_gcm.aes128_de.c in Sources */ = {isa = PBXBuildFile; fileRef = 276443A652BE48948B582FAB /* test_suite_gcm.aes128_de.c */; };
		37C5272E831646AC9C0458ED /* test_suite_pem.c in Sources */ = {isa = PBXBuildFile; fileRef = 1CFB73963A694580AD131A81 /* test_suite_pem.c */; };
		3822C68FE01F4781969630B7 /* md4.c in Sources */ = {isa = PBXBuildFile; fileRef = 29B0198D36C44600AFDB2009 /* md4.c */; };
		38CAC40D8C1B482D8C9613B5 /* test_suite_mdx.c in Sources */ = {isa = PBXBuildFile; fileRef = F33B4AF854564CA898D38500 /* test_suite_mdx.c */; };
		3AA94AABF2DC47E69654C83A /* cert_req.c in Sources */ = {isa = PBXBuildFile; fileRef = DEE5A130E1FF4067AEABBDC5 /* cert_req.c */; };
		3DAC1EBA2D284A198AD0A891 /* test_suite_cipher.ccm.c in Sources */ = {isa = PBXBuildFile; fileRef = 7D83886E3F2044FFB32AD5C6 /* test_suite_cipher.ccm.c */; };
		3E0A8CFFF6CD40779AA3C726 /* test_suite_rsa.c in Sources */ = {isa = PBXBuildFile; fileRef = 7CEC9829759245D59AE446C1 /* test_suite_rsa.c */; };
		3E26061B9AEB48E4BD631F42 /* ssl_server2.c in Sources */ = {isa = PBXBuildFile; fileRef = D4A2D44DF6504B49B71C8C9A /* ssl_server2.c */; };
		41C592D8C4194BCF9BC9AB71 /* ssl_srv.c in Sources */ = {isa = PBXBuildFile; fileRef = EB94DAA1A32E40DB9FB140AC /* ssl_srv.c */; };
		42AAC765B9EC4594877DE1C5 /* x509write_crt.c in Sources */ = {isa = PBXBuildFile; fileRef = 3EB6756F225D415C9C2615E3 /* x509write_crt.c */; };
		435EB2F6AB7E4C56A1561020 /* cipher_wrap.c in Sources */ = {isa = PBXBuildFile; fileRef = 8BD743B89BC74FD29FA8D1A9 /* cipher_wrap.c */; };
		45D258EBFFE54FA2A4966AF6 /* cmac.c in Sources */ = {isa = PBXBuildFile; fileRef = 6A9ADCA880064F2CA07D9D29 /* cmac.c */; };
		488B5CBA9AF441179C22D53B /* test_suite_version.c in Sources */ = {isa = PBXBuildFile; fileRef = 000F4BC0EE2A4B9987AAEA84 /* test_suite_version.c */; };
		499E429B1A3A47E48ADFD71D /* test_suite_gcm.aes256_de.c in Sources */ = {isa = PBXBuildFile; fileRef = 96C99F95A526495AB35CBC76 /* test_suite_gcm.aes256_de.c */; };
		49E4363B4E6B4FF2B5AB62F2 /* pk_decrypt.c in Sources */ = {isa = PBXBuildFile; fileRef = 92C2E905D63840E59025F998 /* pk_decrypt.c */; };
		4A3063715BFB40C4B1877E0E /* rsa_verify_pss.c in Sources */ = {isa = PBXBuildFile; fileRef = E77F0B840CC34639A00394D0 /* rsa_verify_pss.c */; };
		4C660C4CB4E94B738258B362 /* ssl_ticket.c in Sources */ = {isa = PBXBuildFile; fileRef = 1987C29C499D4F5BBC05E86B /* ssl_ticket.c */; };
		4EF36FE9B620418E91146983 /* crypt_and_hash.c in Sources */ = {isa = PBXBuildFile; fileRef = E7B7FC4568EA4B67AD32FFAD /* crypt_and_hash.c */; };
		530720B545534AEE8A7BDF41 /* ecp.c in Sources */ = {isa = PBXBuildFile; fileRef = 1BED17EFE8F94B12A79E87AF /* ecp.c */; };
		558F8B859A8A48D8AE974843 /* test_suite_hmac_drbg.no_reseed.c in Sources */ = {isa = PBXBuildFile; fileRef = 0015A61896EB43D5B5B41409 /* test_suite_hmac_drbg.no_reseed.c */; };
		598ED5DE5BB5403FADE2DBA3 /* asn1write.c in Sources */ = {isa = PBXBuildFile; fileRef = 4F6219E7FC8E45D284E67150 /* asn1write.c */; };
		59B128FCEFBC4A328D04D984 /* test_suite_md.c in Sources */ = {isa = PBXBuildFile; fileRef = 11E08772093147C3AC1BF8C2 /* test_suite_md.c */; };
		59C3895BC3744399AE2B130F /* base64.c in Sources */ = {isa = PBXBuildFile; fileRef = 6A489047F5F447E38562A49E /* base64.c */; };
		5BD4B2C230E341F6913371BC /* ssl_cert_test.c in Sources */ = {isa = PBXBuildFile; fileRef = 70ECA227B0C94D3FA182D375 /* ssl_cert_test.c */; };
		5DE4790A04B3492E8E5B1536 /* test_suite_pkcs5.c in Sources */ = {isa = PBXBuildFile; fileRef = 0B2B66389EAF4397950515D4 /* test_suite_pkcs5.c */; };
		5E69F112A8B94A2CACC6EE39 /* test_suite_aes.cfb.c in Sources */ = {isa = PBXBuildFile; fileRef = 2F4635F12E754D1B96F73091 /* test_suite_aes.cfb.c */; };
		5F4986AF8C6C49B689D60DE0 /* test_suite_pkwrite.c in Sources */ = {isa = PBXBuildFile; fileRef = C230E5B68BED49FB8216E229 /* test_suite_pkwrite.c */; };
		6089F535D20144C08519BBF6 /* pkcs12.c in Sources */ = {isa = PBXBuildFile; fileRef = 40224EE1444F4C65BDC0F7DE /* pkcs12.c */; };
		655174430D3A43F8B29FE53D /* key_app_writer.c in Sources */ = {isa = PBXBuildFile; fileRef = BA9861C3154B4CDD93165A99 /* key_app_writer.c */; };
		655484AAC52046A09D47A563 /* gen_random_ctr_drbg.c in Sources */ = {isa = PBXBuildFile; fileRef = B3A15B591ADC4B5292EC14CF /* gen_random_ctr_drbg.c */; };
		656EB8545BC549DA8F0B8110 /* x509_crl.c in Sources */ = {isa = PBXBuildFile; fileRef = FD05B156EE1B46568C811AB3 /* x509_crl.c */; };
		6575FA0EC92F47F58CFC070D /* ssl_pthread_server.c in Sources */ = {isa = PBXBuildFile; fileRef = 5E141D1EF7AF4BC79A2954A4 /* ssl_pthread_server.c */; };
		6771A6F049A7434C9E82FB15 /* test_suite_pkparse.c in Sources */ = {isa = PBXBuildFile; fileRef = 7C5374538DA44F6893B3A69E /* test_suite_pkparse.c */; };
		67B6BB05D58D425A9543F94D /* ccm.c in Sources */ = {isa = PBXBuildFile; fileRef = 5DFA91290BBE44FB8D2708D3 /* ccm.c */; };
		69C0BA8999DF4C9CBFF2EB02 /* test_suite_dhm.c in Sources */ = {isa = PBXBuildFile; fileRef = 47BCEC12B3FB4670813EC0A0 /* test_suite_dhm.c */; };
		69F49AC5D56849E8BC7C42D4 /* threading.c in Sources */ = {isa = PBXBuildFile; fileRef = F2AFA1A52E784E708EE54679 /* threading.c */; };
		6E19438B816D46D1B0719257 /* pkwrite.c in Sources */ = {isa = PBXBuildFile; fileRef = E2787AA2141047ADAB8CEC86 /* pkwrite.c */; };
		6E7018569861418F8630FD30 /* test_suite_ecdsa.c in Sources */ = {isa = PBXBuildFile; fileRef = C839FD9BE6CD4ADCBE5921BB /* test_suite_ecdsa.c */; };
		6F86D5585338479FA83D27B3 /* sha512.c in Sources */ = {isa = PBXBuildFile; fileRef = 467261E192744483A9532072 /* sha512.c */; };
		6F9DD955B930409898E64676 /* test_suite_shax.c in Sources */ = {isa = PBXBuildFile; fileRef = 3372CCCDD2314B1C946C75E7 /* test_suite_shax.c */; };
		6FD7AD35C9644BF6B0296DAA /* test_suite_cipher.des.c in Sources */ = {isa = PBXBuildFile; fileRef = 61C07E23CA21459BA535D7A9 /* test_suite_cipher.des.c */; };
		70EB58CF62B542AB9061193A /* error.c in Sources */ = {isa = PBXBuildFile; fileRef = 800BC1B412B1407F83787363 /* error.c */; };
		71CE1EADAE8540D58F2AD588 /* ecdsa.c in Sources */ = {isa = PBXBuildFile; fileRef = BE231EF54C354ECAB32BE27C /* ecdsa.c */; };
		72AEE55D565042AAB81C9607 /* test_suite_cipher.aes.c in Sources */ = {isa = PBXBuildFile; fileRef = B264D6C654F2463B823D02CB /* test_suite_cipher.aes.c */; };
		75B3A1168E0446CBAA34CF79 /* rsa_sign_pss.c in Sources */ = {isa = PBXBuildFile; fileRef = 719BFADB2BBA4F9D8728821B /* rsa_sign_pss.c */; };
		7646482FD1624186AF47F982 /* pk_verify.c in Sources */ = {isa = PBXBuildFile; fileRef = B121D9AFEB964C6EBD35FB31 /* pk_verify.c */; };
		77EA5C970FFF448A9E17F8CE /* gen_entropy.c in Sources */ = {isa = PBXBuildFile; fileRef = E1D87D32F3984DDBBA13EA3C /* gen_entropy.c */; };
		781D56D62D07491E8BFD0406 /* test_suite_entropy.c in Sources */ = {isa = PBXBuildFile; fileRef = F5E2E15B9BA64F57BC8AC25B /* test_suite_entropy.c */; };
		7B863CDCAA4649BB9E41FA82 /* aescrypt2.c in Sources */ = {isa = PBXBuildFile; fileRef = B489F47D3E8D48E18654B91E /* aescrypt2.c */; };
		7BCFC9FBEDEC483293241D62 /* rsa_verify.c in Sources */ = {isa = PBXBuildFile; fileRef = 4B148F57F0A244C78C616A0D /* rsa_verify.c */; };
		7E4F6D43395B417E8FA0D145 /* cert_write.c in Sources */ = {isa = PBXBuildFile; fileRef = B96FC8A398884DB2906E1BA2 /* cert_write.c */; };
		7F143E217D954DF18FB58DD2 /* rsa.c in Sources */ = {isa = PBXBuildFile; fileRef = D09683AA22094191992BC7B5 /* rsa.c */; };
		832B750A74AD4EE798351EF1 /* gen_key.c in Sources */ = {isa = PBXBuildFile; fileRef = 69796EE957834EF79A2CBDE0 /* gen_key.c */; };
		8370DEAC57AF432A88A949CF /* test_suite_hmac_drbg.misc.c in Sources */ = {isa = PBXBuildFile; fileRef = D153E5E466D74EA19222BD6A /* test_suite_hmac_drbg.misc.c */; };
		86E8B093B99148E48329BE0A /* pk.c in Sources */ = {isa = PBXBuildFile; fileRef = 6FA842143E5642FD84CABA71 /* pk.c */; };
		8B18330EB88D4ACE8A62BFBD /* sha1.c in Sources */ = {isa = PBXBuildFile; fileRef = BFC277AE6B524CCFB4BB8B3D /* sha1.c */; };
		8D465A3E8951487FABD9810B /* x509write_csr.c in Sources */ = {isa = PBXBuildFile; fileRef = DAC57457DE0C4D38AD8A319C /* x509write_csr.c */; };
		8E5ADC93486646B28BF98393 /* pem.c in Sources */ = {isa = PBXBuildFile; fileRef = 4EC4BCF29EB04AD7AC380C4F /* pem.c */; };
		8E6072C79F2243BCA385E430 /* x509.c in Sources */ = {isa = PBXBuildFile; fileRef = 6F1332BB3CFB42CDAD07A928 /* x509.c */; };
		8F15E76231EE40E492C607D6 /* test_suite_camellia.c in Sources */ = {isa = PBXBuildFile; fileRef = 34DD01E748B14292A69079F7 /* test_suite_camellia.c */; };
		912E6E0E0BFB497F942E8971 /* ctr_drbg.c in Sources */ = {isa = PBXBuildFile; fileRef = DDF78BC7997C4C8EAD0B07C2 /* ctr_drbg.c */; };
		919CFC7D16734D2A9D46D415 /* xtea.c in Sources */ = {isa = PBXBuildFile; fileRef = 7874A25397A0461098EE062A /* xtea.c */; };
		925EB13A30664BD899BE70AF /* test_suite_pkcs1_v21.c in Sources */ = {isa = PBXBuildFile; fileRef = 92278562817641DBA8DD8440 /* test_suite_pkcs1_v21.c */; };
		92608A5B5D854B7CA9CEABB9 /* ssl_cache.c in Sources */ = {isa = PBXBuildFile; fileRef = 29C7F13D067A4AA0BA9B1A08 /* ssl_cache.c */; };
		93D7E56DC66C430AAA520340 /* padlock.c in Sources */ = {isa = PBXBuildFile; fileRef = 6699C32B339446CAB1218714 /* padlock.c */; };
		94889A6DD1EF46FC9A76D7D0 /* rsa_sign.c in Sources */ = {isa = PBXBuildFile; fileRef = D2E19F32242B4BABA4CDE56B /* rsa_sign.c */; };
		969FC14FDD9D4696B1467E5E /* pkcs5.c in Sources */ = {isa = PBXBuildFile; fileRef = 75AA5D7F3A6C4408AA4C3A33 /* pkcs5.c */; };
		96C9DAA17B2A458EA7AAFE12 /* debug.c in Sources */ = {isa = PBXBuildFile; fileRef = 49E8732FB5D147BCA6096FDF /* debug.c */; };
		9940C064343E45899CDE4DE3 /* platform.c in Sources */ = {isa = PBXBuildFile; fileRef = 399AAD35FEF14826B8A1B53E /* platform.c */; };
		99C5F67CF9CB451E8630C1AA /* bignum.c in Sources */ = {isa = PBXBuildFile; fileRef = C8EED22F4815436BB526BADE /* bignum.c */; };
		9A256BD351164908894E1EA8 /* test_suite_asn1write.c in Sources */ = {isa = PBXBuildFile; fileRef = D67E6AE9C1B84DC5943D8816 /* test_suite_asn1write.c */; };
		9A355A62BA7A43CC88360C8B /* selftest.c in Sources */ = {isa = PBXBuildFile; fileRef = 71F3757BD1EC43BCAC6C3B6C /* selftest.c */; };
		9AF5DAF1E4CC445AA2371B05 /* version.c in Sources */ = {isa = PBXBuildFile; fileRef = 89BD3B8C64974D8A8489B166 /* version.c */; };
		9D192A2026C749DA82B49AAE /* test_suite_gcm.aes192_de.c in Sources */ = {isa = PBXBuildFile; fileRef = F73A9A6200E140AE8D032B89 /* test_suite_gcm.aes192_de.c */; };
		9E02AC25B8DD410AB36B7A9B /* pem2der.c in Sources */ = {isa = PBXBuildFile; fileRef = 8E9F038A1C344A72BC876521 /* pem2der.c */; };
		9EA65099637F47709804CCA8 /* hmac_drbg.c in Sources */ = {isa = PBXBuildFile; fileRef = EDF614D2A6BC460BB78FF7A4 /* hmac_drbg.c */; };
		A0ED02CD790F4D0DB84AB888 /* test_suite_xtea.c in Sources */ = {isa = PBXBuildFile; fileRef = FF769728FEF24E7F9E831C7F /* test_suite_xtea.c */; };
		A4A849884CDD42B5B92A5D00 /* test_suite_aes.rest.c in Sources */ = {isa = PBXBuildFile; fileRef = 49615F679ECD44D2A2B22729 /* test_suite_aes.rest.c */; };
		A52EC4FFB1BC4559806ED5CD /* test_suite_aes.ecb.c in Sources */ = {isa = PBXBuildFile; fileRef = 26D21478227F4473B74E23C9 /* test_suite_aes.ecb.c */; };
		A958C8941E294503822382FA /* test_suite_hmac_drbg.nopr.c in Sources */ = {isa = PBXBuildFile; fileRef = F1D61712C1A84958A3FF587C /* test_suite_hmac_drbg.nopr.c */; };
		A973A86C81F24B14BC7A9B32 /* ecdh_curve25519.c in Sources */ = {isa = PBXBuildFile; fileRef = A63D1234E807413ABF486397 /* ecdh_curve25519.c */; };
		A98A5E44A9D745DC906B6E0E /* md_wrap.c in Sources */ = {isa = PBXBuildFile; fileRef = 04D0F39162644F06A7F61DA9 /* md_wrap.c */; };
		AAC488C3FA274922AB358242 /* pk_encrypt.c in Sources */ = {isa = PBXBuildFile; fileRef = E25586197DB841F196952F75 /* pk_encrypt.c */; };
		ABE25EC2B80A4837AB65E5AC /* test_suite_gcm.aes192_en.c in Sources */ = {isa = PBXBuildFile; fileRef = CE8BAB2F35CB4232A46D894C /* test_suite_gcm.aes192_en.c */; };
		AE6951FEB58845FDA4A35066 /* test_suite_gcm.aes256_en.c in Sources */ = {isa = PBXBuildFile; fileRef = 57B6610E60AC4C9E8759FB9B /* test_suite_gcm.aes256_en.c */; };
		AFC76EB9D4C9444A82355BA9 /* dh_client.c in Sources */ = {isa = PBXBuildFile; fileRef = 62E70722E84344D3A59F3A0B /* dh_client.c */; };
		AFF2AB2DDE8F4BC68A0F83B6 /* rsa_decrypt.c in Sources */ = {isa = PBXBuildFile; fileRef = BABA168978CD490187ECA1DD /* rsa_decrypt.c */; };
		B0A9CE33830942FD958F1E31 /* pkcs11.c in Sources */ = {isa = PBXBuildFile; fileRef = A962B7CD01794957BA56F43E /* pkcs11.c */; };
		B2887316E029428BB39DD9F5 /* benchmark.c in Sources */ = {isa = PBXBuildFile; fileRef = 44AD553207AB4411AEC8A177 /* benchmark.c */; };
		B62598C21B524D0DA4524898 /* test_suite_cipher.arc4.c in Sources */ = {isa = PBXBuildFile; fileRef = 36B949913B1747F6ADB62732 /* test_suite_cipher.arc4.c */; };
		B7005638B1844B1EA6500A78 /* dtls_client.c in Sources */ = {isa = PBXBuildFile; fileRef = 2A90F600B1AE4496934782C9 /* dtls_client.c */; };
		B8F90E3624CE450083B6F108 /* ecdsa.c in Sources */ = {isa = PBXBuildFile; fileRef = CF09B348D8CC425390BE4060 /* ecdsa.c */; };
		BA2CE02822904B3DA0A105A1 /* entropy_poll.c in Sources */ = {isa = PBXBuildFile; fileRef = 0AD187B0E44F4B6F9C64095F /* entropy_poll.c */; };
		BAAD874A41D646A691D3AE7F /* net_sockets.c in Sources */ = {isa = PBXBuildFile; fileRef = 50169B5CFD2647DE8021B41B /* net_sockets.c */; };
		BB55D7C2F70B48BDB125F09E /* ssl_client2.c in Sources */ = {isa = PBXBuildFile; fileRef = D4733F79E9294E2487D0D955 /* ssl_client2.c */; };
		BF1FF761656E452A89F2BB24 /* ssl_server.c in Sources */ = {isa = PBXBuildFile; fileRef = FBCF8B9CB7F04150A0113F69 /* ssl_server.c */; };
		BFE5B3E2947F4B8AA170E91B /* cipher.c in Sources */ = {isa = PBXBuildFile; fileRef = FE160F16976A4F81B4AC3F55 /* cipher.c */; };
		C3A75C6EAA44400391B6909C /* strerror.c in Sources */ = {isa = PBXBuildFile; fileRef = 591F91A0C1594BBAA3B65C5E /* strerror.c */; };
		C64F751ED4C3469F9EC6587A /* gcm.c in Sources */ = {isa = PBXBuildFile; fileRef = 81CCE6F54F5049A5A968BBEA /* gcm.c */; };
		C7EA8859D62445859B52411E /* blowfish.c in Sources */ = {isa = PBXBuildFile; fileRef = DAE2FC131FC14FE8B6EEEA7F /* blowfish.c */; };
		C7FB4E2A2A924EF5A01C5C32 /* asn1parse.c in Sources */ = {isa = PBXBuildFile; fileRef = 3CAA9F23BF9841C69D610720 /* asn1parse.c */; };
		C8091A4AE69143F092D16ADE /* test_suite_ecjpake.c in Sources */ = {isa = PBXBuildFile; fileRef = 715D513A1DB6416696CCE5B3 /* test_suite_ecjpake.c */; };
		C9FD298B5C694B74A626C31A /* x509_create.c in Sources */ = {isa = PBXBuildFile; fileRef = 3B11F7ABA7384413B4C3C15B /* x509_create.c */; };
		CE81A544D17B4E9D98CC6C12 /* camellia.c in Sources */ = {isa = PBXBuildFile; fileRef = 9173F95824784A3D9B3BAACC /* camellia.c */; };
		CF0F2A552B57441897E1F992 /* test_suite_hmac_drbg.pr.c in Sources */ = {isa = PBXBuildFile; fileRef = 90CFA0F800E840DD897ABF77 /* test_suite_hmac_drbg.pr.c */; };
		D2483247EF274C8CA5304761 /* test_suite_error.c in Sources */ = {isa = PBXBuildFile; fileRef = 046708CAF99D431C8490EB6F /* test_suite_error.c */; };
		D3050FF7B0394BD1A5AA0312 /* test_suite_ccm.c in Sources */ = {isa = PBXBuildFile; fileRef = 153C4EEC335D487FB315614C /* test_suite_ccm.c */; };
		D49291F85AE847AAA9FF2530 /* oid.c in Sources */ = {isa = PBXBuildFile; fileRef = 77E56418762C4A52866A1FD3 /* oid.c */; };
		D55C1C9CB6AC421380DBE1D9 /* memory_buffer_alloc.c in Sources */ = {isa = PBXBuildFile; fileRef = 4E421CAA582C46ACAF8A7775 /* memory_buffer_alloc.c */; };
		D56B102856474738821B1A7D /* req_app.c in Sources */ = {isa = PBXBuildFile; fileRef = 11EDE0ACC87046C385CAD4DF /* req_app.c */; };
		D76121DF199149A3996C676B /* test_suite_cipher.blowfish.c in Sources */ = {isa = PBXBuildFile; fileRef = E5B9FDB369814CE7BBDB3BAE /* test_suite_cipher.blowfish.c */; };
		DB1A0D60A5234CA68D9FEAFF /* dh_genprime.c in Sources */ = {isa = PBXBuildFile; fileRef = 036CD3ACA7624BCCBDDC8B6D /* dh_genprime.c */; };
		DCDB52D5AEEA43118F99B6AB /* md.c in Sources */ = {isa = PBXBuildFile; fileRef = 22204A434F554101BC96FCA4 /* md.c */; };
		DDFC895DF9414E3FB98E1D6D /* ssl_tls.c in Sources */ = {isa = PBXBuildFile; fileRef = 4E68B5BEDD2B46B38DDE81CF /* ssl_tls.c */; };
		E2B638307812408FACBE493D /* x509_crt.c in Sources */ = {isa = PBXBuildFile; fileRef = FD96FE1A408D4426A3210750 /* x509_crt.c */; };
		E2C3417FFF3F4FA0A63F39DF /* ripemd160.c in Sources */ = {isa = PBXBuildFile; fileRef = 6BA32511607847B8AA6853F8 /* ripemd160.c */; };
		E335AD6C1FF040CBA01C6CB3 /* aesni.c in Sources */ = {isa = PBXBuildFile; fileRef = 242A5D0678ED457388ECC505 /* aesni.c */; };
		E4543C44BC184F2397865D08 /* mpi_demo.c in Sources */ = {isa = PBXBuildFile; fileRef = D99B8609C718414299CE5B8D /* mpi_demo.c */; };
		E63BDD7B2DFA4940B6F82DEE /* test_suite_des.c in Sources */ = {isa = PBXBuildFile; fileRef = BFB53343ED584C83911BD995 /* test_suite_des.c */; };
		E7986CEE84FD4D72B70AFBEC /* certs.c in Sources */ = {isa = PBXBuildFile; fileRef = 0994F9D5B6DD46E5BDEB9F97 /* certs.c */; };
		EAD0389979D049F688429395 /* test_suite_base64.c in Sources */ = {isa = PBXBuildFile; fileRef = E615503AECEE412AA9B32C08 /* test_suite_base64.c */; };
		ED976DE2725E417C83CC30CE /* rsa_encrypt.c in Sources */ = {isa = PBXBuildFile; fileRef = E975809893BA4D39BA6852DA /* rsa_encrypt.c */; };
		EEDBA41A99B94429B88D68BF /* ssl_ciphersuites.c in Sources */ = {isa = PBXBuildFile; fileRef = 56507561643E4669B536E414 /* ssl_ciphersuites.c */; };
		EF638EB6D1CE459F83323AFA /* ssl_cli.c in Sources */ = {isa = PBXBuildFile; fileRef = F332B0B1BD5C4CE4BBEDFAC2 /* ssl_cli.c */; };
		F29E4DB4F81E4B6090B2C38A /* test_suite_debug.c in Sources */ = {isa = PBXBuildFile; fileRef = BE8300EA8FF34BF6A8F5EED0 /* test_suite_debug.c */; };
		F64AFC1EE18A467F9D47F6C0 /* test_suite_ssl.c in Sources */ = {isa = PBXBuildFile; fileRef = 99C743D81F2E444AB5CA94BB /* test_suite_ssl.c */; };
		F6CA22DA98674E6FAC5390A3 /* test_suite_cipher.padding.c in Sources */ = {isa = PBXBuildFile; fileRef = 621206137AD74CB4BA77EC10 /* test_suite_cipher.padding.c */; };
		F712F84E73374C3299ED0CAE /* pk_wrap.c in Sources */ = {isa = PBXBuildFile; fileRef = 6C5CB8079C384BF6B883995B /* pk_wrap.c */; };
		F78A55AF29DF4C2BBEA54C4B /* dh_server.c in Sources */ = {isa = PBXBuildFile; fileRef = D33561BA01D14518B93FDA4E /* dh_server.c */; };
		FA126D5CF62D420EB75B22EA /* ecdh.c in Sources */ = {isa = PBXBuildFile; fileRef = CF02209F242B4844BD6742FA /* ecdh.c */; };
		FA46E54FA1AF4E5FBAF41CF8 /* arc4.c in Sources */ = {isa = PBXBuildFile; fileRef = 298F5252B11442058BB83881 /* arc4.c */; };
		FB13292839044095AA8C0786 /* dhm.c in Sources */ = {isa = PBXBuildFile; fileRef = 08181C96F1A2438FBF08F2A9 /* dhm.c */; };
		FD6F0C7062EB44998C0777A5 /* test_suite_ecdh.c in Sources */ = {isa = PBXBuildFile; fileRef = 4CDA3ACD2007484AA09A1859 /* test_suite_ecdh.c */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		008D3278A55C463EB8A81DA5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		00DD0A0216234F4F84065058 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		00F3AC59895E4CFCB668A895 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		013FE57F6C0F4797A160E9E1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B7A9DDC810729B5A599C494B;
			remoteInfo = test_suite_gcm.aes192_de;
		};
		01A882A74C6C4846B68EC547 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0371931424AB4FCFB13F9E52 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		03A8D57A9FB5455980C66342 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		03EEC18C2DDE4B25ABDD54B9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		0474A075FD4E4BB8B107273D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0508AE6AF3CA4EBDA8E1B674 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		064DF0DB3E254292BE38068C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		06AA2A2F05374198BF477323 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		06C3248BF43F4B14820F72A7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		06F73ABD86DF45FEACE7BBF4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		0702BD346ED2420F99E683D0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		072585E4D9C848D190DA305E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		075AF5D745CC41BB8D99BF97 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		0760A6917F194826AE0907B9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		07B14DF93CEA4DF09334ED99 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		085480125F004D41924C4FB6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		088C99D80CF345D88F2B66E0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		08C413A6D2024FDDAC44B058 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		091BD574AF0C464EAF45B411 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0A135A760C1E48E8B9711DD2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0A5C3CB56F00412E95DA8757 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0A89E722DBAC4969B5EBB9C9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		0AE3496513CE414CA716C5D2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		0B6F387EE3C448D8B92D043A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3809E3A3FE5BF094EEABDA55;
			remoteInfo = test_suite_arc4;
		};
		0D056917267F4501AE974D72 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		0D15D89C44004FA0858305A0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0DBCC7F50E7B41A3B80F5765 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		0E341325B3AE43AEA6138193 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		0E7DE15D59FD4BC1940081E7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		0F45435251CE467B85F4F79C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		0F7725EE099C4979A9028998 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		0F81145C34A44E6287F16721 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1CBC5D71370311E6C7800DF3;
			remoteInfo = test_suite_ecjpake;
		};
		107077B383F640D299391D40 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		1077783015E640329360A4B3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		10DF6914E1944575998619FA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D604253125427149818B6FAE;
			remoteInfo = test_suite_hmac_drbg.misc;
		};
		11A7E633DC0A49D0945D09EE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8E9A07A641F7D1A660DC9E51;
			remoteInfo = test_suite_cipher.blowfish;
		};
		12131213F50C420CB3BFF894 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		1219B3B844AC48EFBB631FF5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		1255DE88B0F04D4C9EF62328 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		13BCF47955054CA1ADC1D38F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		155D4E4808344FB88E5D8887 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3066306EE06D0EB955CC8466;
			remoteInfo = test_suite_x509parse;
		};
		1585B01FFC904716B0B86B70 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5F7D115795CD45C428F4F4DB;
			remoteInfo = gen_entropy;
		};
		1596995B79E744C9A7FC1212 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A40B70678473DC9140F25711;
			remoteInfo = strerror;
		};
		163D96AB54664D0396B32B6F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		16672267CF3D40248D05F005 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		167AD28B42BB46829BF5C195 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		168AC87E1A0F4114B1376751 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		175CBDAED63F4CB98E333F47 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		17F0FCA5FFC741F68A7DD021 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		183608E446DB4E8FB636EC0A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		183FE6F7ADC64C3FB21BE31A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		1881B46607D540EFA45C3A31 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		18A7DC3CF3D5432FB7060A0F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		18DBC42768A14C93978A2789 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		18EAF3FE4DA54E8DAFB11FFB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		196A78EA4F0C489E8EDFEEA3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		19C5C2D91E504D79A58780A6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		1A0C9B85FE0540128B4ECE3E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		1A696E61AD324D7997844A15 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		1AAA85E98BE7487DA2F5FD1A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		1ACCDBFA4D954E689428898F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		1C378F5352A64B828B4A15C3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		1C580736E01D4E9FB58E6D35 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		1C9789855A83425B94AE6DFD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		1D2189B8A8FE4DED809FF239 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		1D8D4D605C8345BC8C9ECE08 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		1DD43A147153434A83D2A990 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 21072FB096193A28C3836D0E;
			remoteInfo = test_suite_cipher.padding;
		};
		1EBD62FD88234C189E4F1BDF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		1F3C3420C27A40ADB02F893A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		1F4B90067F8F44BC952B2FC9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BFE762409D8FDA3EED808F63;
			remoteInfo = test_suite_debug;
		};
		1F614BC3D2DE44F9A6157526 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		1F6ADFD31A104E1B80562C65 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		1FFF650B21164B779BD37DF4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A3B27EF55CEDB0FDCEF93E5B;
			remoteInfo = crypt_and_hash;
		};
		20D8F906841B4EEEA4DECE43 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 291F11BC75D230E75C5C0176;
			remoteInfo = test_suite_cmac;
		};
		215E8AD63CF14580B18AF018 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		21BAB247DC774825B69587EE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		224D1A10D78D41A796BDA66A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		245635E3BF014F3BB79A6AFC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		24AC9A9449154B9DBF635C97 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		24BEDA7D9D6542858C0F5BA1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		2543D6A8869A4EC0915CF935 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		25FF28B01CA348A584337157 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		26014936BC124C30B576AA85 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		26080C0C08A64744B7DCA545 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		262EA55F6C6E476585EE8B8C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		2659298031BA456697C8B9CA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 542D9811FC63CEB162FEE1CE;
			remoteInfo = ssl_client2;
		};
		269B651F559841C8A51904DB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6087DEC08F506B746E586B71;
			remoteInfo = rsa_sign;
		};
		27FEB26FCAA5486DAD4A1FFD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		281DADFDB61345E38857054D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		28BC004376374549BD5AFC01 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		28C023CF84AF4920866ECF67 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		28D2B493866F4765B1D360CF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		292AE2AC9E484B088936FD50 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		29568A743BE943A9B6153F2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5020FC08C3A1B85FCB44C3CA;
			remoteInfo = ssl_server;
		};
		29CE24D5EED5494EB87FB640 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		2A726A0A69334A3CAB6871C2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		2AB7A2F136554C6090125C8E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		2BABC9724511492D9F81A301 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		2C6ED3F3D6D74BD38C6D3854 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		2CDB845FFD984C41ADC5A4CE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FDF3AAC86D61F1ECA3FA3A2C;
			remoteInfo = ssl_client1;
		};
		2DD28995ED6946AB8462E94E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C46A77CB84E3F02E0C7B8C05;
			remoteInfo = test_suite_xtea;
		};
		2E4C25EC84A74152AD996546 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		2E7FF9B99F3B4190ACB6E4CE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		2E830413DDB04767A158A82F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D3A4B154E07F5FC0044866BB;
			remoteInfo = pk_verify;
		};
		2EB3A4B3FBA74E6AABDADF15 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		300FFAEA45FE4F7CB65841B8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5C2941308E1B2503F15EC675;
			remoteInfo = test_suite_cipher.null;
		};
		30C69D113BF84116847812E0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		315E6487BE8045AB86604971 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		32132EE3B730495E998D9803 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		340920F0C2E24C9285E1C553 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4F12C44F3F8D4428F96BD424;
			remoteInfo = test_suite_camellia;
		};
		341809BE1A444F6F8F9BF28E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6B6F9FBAACCEFE4150670DE9;
			remoteInfo = dh_genprime;
		};
		34BE6DC98DC24E0C8C04A462 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 82BB205E9D823CBE782D635B;
			remoteInfo = ssl_pthread_server;
		};
		34E34FFABCCD4DA6825A53D6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		35F3463F90624206B55A1F86 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		35F682F8083D4A7596596005 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		364E9702585F458883DDCD46 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		36E12DBA14DC435387292981 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		36F7DF81F4F94BF2AEE7B56A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		37B995F5025B4CF88E6BB69F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 14A4C602FAE16D0524B04982;
			remoteInfo = ssl_cert_test;
		};
		382969DE00C64B908C51F269 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		3861EC43BBE64AE78FB2826B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		38D5521828164E709CFF10C5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		39340EB0AC48421EAF5FB75F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		3A2B07E247464EF5B51CAEF8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3B54BA9EB9E44FCE87B04FF9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		3B80DFC360E345618FF6BC43 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		3BD99991DDEB410E9B253711 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3C0BB99816CC4933AB28C85E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3C0D674EC14D4B8B8BEC03B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		3C15AAEE4A73412C835CF294 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		3D79312BA3DB4488AB3A348F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3DD01942AD544026A51DCEF5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3DDEAC21E6D7412E8C6CBE82 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		3DE4D2AF564C4589BF4A2772 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3DFBB400E6574D83802DF7AC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		3E576BCAC60B4C5FA00F4930 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3F3BBD15624A4B3B9EE8D272 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		3F607BB3FB894D42A5D88F68 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 81477C78627B0B6AF7DD8803;
			remoteInfo = test_suite_pkcs1_v21;
		};
		3FCC128C1F7C449AB3CA61BE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 78653924CA02A9609D323F5D;
			remoteInfo = rsa_sign_pss;
		};
		3FD6C4FE59DF421983080DAB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		3FED316A43E449BEAD109641 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		40E900FA45D34465ACB54620 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		40FCCA3B67E8498EBE65C6D6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		4101A46EBE88448A8453A87B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8C377CE5BA566D937D6EE1A2;
			remoteInfo = benchmark;
		};
		410C61D01C8847ADB6CC65F8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		411BB3306912478FAF562FDE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		41EB55247820453E8A42A4E9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		436B901ABBF94A6CBFF6D3E9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		43E520FBC69149718B3606F1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		4485E96EE3204477AC680DC8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		44A468FE44AD493EA8B49BC9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		45120F46C87B4EB888A7ABB2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		4533D23DF13F4B9EB893BA34 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		45B5833644974263993C2045 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		46B69A42CD6D402DA65E13BA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		46B9526C855740DCB617D77B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 18E37844854DC1695D909C74;
			remoteInfo = test_suite_cipher.arc4;
		};
		4871C3C79760414583702C0E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C414B53A8A1727614D19D1E2;
			remoteInfo = test_suite_hmac_drbg.nopr;
		};
		48824D329E7A435B9E787DFF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		4933A5031A85407BA8001D16 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 94E69B4EB3FCA610727DF2B9;
			remoteInfo = test_suite_pem;
		};
		4954B7DAEFD649C29A1DFFA3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		49A31A6B3E10431CBDB60479 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		49E11E7A24264AAD90EC23E8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		4BD22FE1D2644258A2D39B59 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		4C11D2C5B33F41DB80932B0B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		4C4183633FC0434D960D3B9A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4E6344849A6B5BB6DDE9BB85;
			remoteInfo = pk_decrypt;
		};
		4CAECA4888DB4F6FBAE64303 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		4CD0734D6F80492ABED609F1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		4CF980C56836431B950EB261 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		4D2759E1FAC042D5B1771EE9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		4D2951FA8AD042708CDD3F60 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		4E89DDEBA1FF4F8CB1B1CA03 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 419A1319A6D41E062579921D;
			remoteInfo = req_app;
		};
		501DED7298524DEFBB30F6CD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6889B48630D80804EA40849D;
			remoteInfo = generic_sum;
		};
		5082AA94FC1049958D8845FD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		50E29B61E88D44B99B5B6677 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 136E46FB73D7A21210B142F3;
			remoteInfo = rsa_decrypt;
		};
		511F8E16762B489E90EA7D0B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		52164BD7F00046A2A0640498 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = F23AF31B94E6C62B4DB47481;
			remoteInfo = test_suite_pk;
		};
		525956A3086F405597D91BEB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		533D941A001B4248A525A80A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		5354EBDE8DA7478F8C936020 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 594B6126DD23767E1DFA5F65;
			remoteInfo = hello;
		};
		536B15A5ECC047EA840FB55A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		54784684C7FC4180BCC5DC48 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 32B8EA173E25FBFC6E9C01E2;
			remoteInfo = test_suite_aes.rest;
		};
		5579359A7EAE41EF957D6123 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		55D7E1295D26415EB473C311 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		5665B08D84A9452DBDDA86DA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		568D701C09C04A73A24935A6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		56A5DEEC319940B9B32A1569 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A1DD15E66ABB6EBE447C0A2F;
			remoteInfo = test_suite_cipher.des;
		};
		572480B0AF8E4C9692DEBBF9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0A017AD8134DD8776A6E53C5;
			remoteInfo = ecdsa;
		};
		5732034065014CDA82D8487C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		57C4DD34DC99412783F46DC4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CFB10AF112FA6572E3109F42;
			remoteInfo = test_suite_ssl;
		};
		58AB3C583FED428BA8E3FA7A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		599994223A03413DBD5BE6C0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		59D50CFAC4274E1CA20B795B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		59E17D20E2854EBEA79C7E26 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 67F6D13E4A82173F6F28AD20;
			remoteInfo = test_suite_gcm.aes128_de;
		};
		5A0955CD8C3744F69F2A99CB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 718C3FD6366CEF8A124A2F83;
			remoteInfo = test_suite_cipher.gcm;
		};
		5AEA60D791C5448B878E90D8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		5B7661B8DA99400D82447BAC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		5BDFB456CB934B26BD2AE3A4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C13B0399EDD813D5F9BAE270;
			remoteInfo = udp_proxy;
		};
		5C4BDD321036461E9E6C3B64 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		5C5DFB4E882C418D851FDEAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		5CAA554DBD2B4F678C930191 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 736CCC5FE48E4D390E3BB9F5;
			remoteInfo = ssl_server2;
		};
		5CAC19EA692440EF9F9698F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		5D0D53829E5F49AD897B2ADE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B59BB71A65DC6CC337C9F91C;
			remoteInfo = test_suite_gcm.aes128_en;
		};
		5E4615BA9363468287338D1B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		5E557150F43249D09401BCB0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		5ED155FB1D444A1EB100666F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		5F2BC48F9F164CB7B305F707 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E159797A3E811F9C851B9709;
			remoteInfo = test_suite_gcm.camellia;
		};
		5F93BDFCEC1541E8BBC18BB2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		5FFB1AE4A4C54C869E16F899 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		604A318615B34440A9A9F45E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		6122E46929014D3D907F819E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		617111CBD8E949049BF58F3E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		61D0788597854EF18FFDD850 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		6229E05097C34E98B3000BDE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		6281C5A4350B466D8B0D72BC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 453330CCFAE45684805B9B21;
			remoteInfo = test_suite_mdx;
		};
		63D8470C29A943A4BB645A4B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		63F182ACF1BA4C15B1CEF7BB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		64D8BA7A7219410A99BFD360 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		64F15213BD2040BC981327B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		65FA02E82BA9433EA53563AE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		664DFDA94C1348DFBAAFF16C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		66E3D86C6DD246CCADD74561 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		66F6392362BE4252BAC0919F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		673EAF182FD347ED9300A3FD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		6740349B8FD34E959543D3F1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		6773DAB892F04650959FD1A6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		67782D5776ED455BA88303CF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B028E59B3085A25389F965DA;
			remoteInfo = key_app_writer;
		};
		679592C35FCF4FBC9BCDF79C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		67E79673A788416BA23393A4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		6851B3F9FDFB47CAB9D17530 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		68F0512575B141A59CA9CF4B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		697ACAEF1B324C61BE3C46FA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = DF501219B3B23533AF8A6509;
			remoteInfo = pk_encrypt;
		};
		6A3127186FF44C8992DEF3A3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		6AC650C7F93E4813900DC89B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		6AF23AB4EA294BF5B32310AB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 5E260C1BC30341AE36184657;
			remoteInfo = test_suite_blowfish;
		};
		6AFFB9ECFD664CF9AAB024D8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		6B1632D7564F426CAF9B210B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		6BCF7CC7E0844AAB90821B8C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		6D735950C56540E0A068AE5E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		6D8DBFDE33AD451383BE1A7A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		6DBD6E33B60344D89B2B4222 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		6E35036DC95C47DCB51061DB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		6E6657649773499EBC2B5109 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		6EAA8288BA1B44F197942CBC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = AD062B77985D3CD6896FCB37;
			remoteInfo = aescrypt2;
		};
		6F2D034368144024A5052784 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		6F4DC249BA1145729DF1EBC1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		70292DE1679A42B1B498EFCC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		7081669B491B4A3CA393FF37 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		71EACE5A7D0C4522A2CFF7B9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		72874F09DFC6470DB7991B67 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		72C8FFF3096E43A59CFC9866 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		72F389206AF74A1A9100B8B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		74F3FC74CE7241A082E88546 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 008A9E384E8DA4A85DFF13C9;
			remoteInfo = test_suite_aes.cfb;
		};
		755555C067464E0492E98A81 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		755FE870E5F743B29C685B9F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1EB1C7A69382063DD1DFBAAE;
			remoteInfo = test_suite_timing;
		};
		756FEC12F8384F1AA18D4CC0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7570E49CD57247EA817E30C7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1528D30F8C106F5845A3A178;
			remoteInfo = gen_random_ctr_drbg;
		};
		75CCD56DFE2741B68C5658B7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 664BE17B18A2C4681B324AC6;
			remoteInfo = test_suite_error;
		};
		75E6EB06A8F94E4D978C3F3D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		764647897D59416AB8C87CB1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		7665AD4553CE4F6AB6A5BD47 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		76A510E6A86448FEB9B9E5F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		76F4E808EA66405FB5FD331E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		77F2037517D744599F33C2E9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		7941F085D15447A884751F02 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7987571BF5114276A4414BA6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		798BA8B30C3B40619DC5BB9B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		79DA52A7248D4A0E842C3248 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7A573A95A8D34B2BA5C09BCD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7A9B479BCD1243C98B76085A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		7ABDE75458074956A4B86F6C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8209F7D3813EC81518E87B8D;
			remoteInfo = mini_client;
		};
		7C859774127D4DF7AC6A0D27 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0FB7C2E8279DFF9ABD38E2F7;
			remoteInfo = selftest;
		};
		7CFEFCEBC30D4A6A876A9518 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7D550AB448184E189106222C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7D8E49C3000F4A4699567BD6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A7CC9C8E9C07E5F9B89D49F0;
			remoteInfo = crl_app;
		};
		7EB70E0070DD480F87F719DF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		7EBE570733214FF4850108BA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BB7F0C6FDF2ABBCA2BD18BDB;
			remoteInfo = test_suite_pkcs5;
		};
		81B94C2FBE5F41598A9F948B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		837D376FA72347B48424A156 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C4C14FA10710C27B2ED4631D;
			remoteInfo = test_suite_hmac_drbg.no_reseed;
		};
		83E651D178C14B4C852D0574 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		84104E71C28D4E3CBB19DB41 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		850BE8F4EB3E427E8E344958 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		854BF313541D45A48E0C3DF3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		85AFB276379E45978FBAB816 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8611F9E8D0134D2BA8B76955 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		86410C0314A54E17B6596C3E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B708867B26E4A59B73B534D6;
			remoteInfo = dh_client;
		};
		86F2220F28AD40429CF2D15C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		87BAE80A6F8B4AD19371146C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		8859B6B2430940D9AE58F3E2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 3EE77B0EFDD135BC246B8BC4;
			remoteInfo = gen_random_havege;
		};
		88A8369FED0A4FABAE72ABB4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		89530B785C5241AD85909F3E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		8B06B598616B463FA41DEACD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		8B143C3F17FE4DF884883840 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		8B2E5B1640B94BFFAB31458E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 677E40F0A3DC36457EFCFD30;
			remoteInfo = rsa_encrypt;
		};
		8B4E59DDEA394F94B8CDFB02 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8B56138ED5684E9587FF5967 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8BBEF74825064D2CB92E20A2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		8CBF16C9D85D40C2964C9047 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		8CE6126237A84E90A07242F4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		8D77ED3413414D64AB129DB1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		8D9BDD0C5DB14D3CA706DE2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FC4BCA4214B11E34D81ED1EC;
			remoteInfo = test_suite_shax;
		};
		8D9D2056903B46D9A2CC4CCB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		8E7A365290F847909C8FA3F5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		8E7ACABE24ED49B8A5754E59 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8E9FB077834D4036AD0DB33F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8EF744DAE15C40F193FFE851 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8F132B6016F04F0AA96BB4D0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		8FA7F83FA6854637B9AE3DBC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		8FA9E00E3B0B475BB7FF1633 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		8FB1552BC4914A71AA3B621F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A125441CCCFBDD264EB9B08B;
			remoteInfo = test_suite_dhm;
		};
		904047602E764439B56544DF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D3220840E123713147FC830A;
			remoteInfo = rsa_genkey;
		};
		90F1810B51604F8E9253F3D9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		915BF10B2D084FBAB153D8AB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		9166BAA24193438899278638 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		91AE1CB5BD404A37B5FFA3AC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		91E35FAC4F13495698D1E51D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D28BD8E78CA9E80AFF81273F;
			remoteInfo = ecdh_curve25519;
		};
		93545091D42C420EBDF81035 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		947A60F31C014EF3A564684A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		94FE227C58E54E3685C1DAEC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		9773D34B4F0743B083122DDF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		97BEA360A37A44878DD435B0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		97DFA03CE8C048F1833742AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		99C2EA3036AC4BBDAE8A4F13 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		9B24D9549C164A07BA8F8126 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		9B814B1E2CC4416B8F7C0A16 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		9BF3F8B1D787471F9B592342 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		9C68C2BBA39641BDB84D5506 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		9CDD200F3C134ADE95341CA0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		9DD643ADCF1544A3BDCC6BBE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		9DE40F6F10944558A3E39CAD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		9E6B093AA9D74465BB770AE3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		9E9A3546E0464285B3FD7E14 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		9EB0999E16194019A53D6FCE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2B25EA0FDBF429F2B1FE1CD1;
			remoteInfo = cert_app;
		};
		9EF4744B8D534319A0F670AE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		9F86D38877B747B1AAB91120 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		9FAEF9918436464E83C6CD4C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		A02090F6E86949538B19A67C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		A0ABF53846844494B9FCD5BB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		A0E8892EF0B74DF0A3BE78A6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		A187BE3216384D8487799888 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		A1DAC27BF688490AAB893FE8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		A22B880ECB0240A3818AEA2C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		A2D800E489AC4774B7C10C76 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		A31479CCBFA548958161EE92 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		A354EB4E8B244292B62DEEB5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 1330062EFA274740C37DF730;
			remoteInfo = test_suite_ccm;
		};
		A5362B342F3D47C68400C1E9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8B0B472CF5585674FACD1A0C;
			remoteInfo = test_suite_base64;
		};
		A5AFBB66BF9640DC8D46F300 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C11323151749CE256D03B25F;
			remoteInfo = test_suite_gcm.aes256_de;
		};
		A65916B9AEB44C9692D3867A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		A6A0659468E744E0B437CD00 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		A80E117C160946468B5E3AD2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		A8179D3041ED491CA631A9B5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		A822C3340B6B40D09CC539D8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		AA9D80D27FE549D0817164F7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		AAD3E082F1224A9B8699D870 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E68F3F272FEF0F293219DFFC;
			remoteInfo = test_suite_entropy;
		};
		AB0B092807594FC6B80277D8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		AB83E272857441ABAB753C5B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		AB864DCBA574438B9690ABC0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		ABE157EB029A40D8A57AAF6D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		ABF059D715394C8A87AB6D55 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		AC502CC8F7C048788F42DEDF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		AC5C9D12D0964FE3BDE50B65 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		AC6426743BF142179819DDFE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		AC6AC995E61F4297BEDF2716 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		ACD87690D9AB49BFA04D016B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		ACD98A4209B7485F91725835 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		AD0B84913C7040248F408CFE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		AD33409A606946D2AD266849 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		AD50E71C1D9244D695D21B1C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		AE758C9C8CAA488B9580C898 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		AEA653457270441FA50B9055 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		AF488F37FC534999905842AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		AF5C07F4AD1D49B3A0149E75 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		AF9557FA34404FDE983B10AB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		AFC4EE19431A4508BE466F65 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		AFFD8FB22FFD4E3B8B5FBA7B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		B0BFA915EF3948688F8403ED /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		B1E5152CA4194B96BB39C903 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		B23FB908D0C84838A9929E90 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		B286DE6DF1984FB3B2D21E51 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		B29A350395AE4DDE9731527B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6407C0786940FEC2502CFA25;
			remoteInfo = test_suite_mpi;
		};
		B458F7C38DDD4877ADFB2447 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		B4BF135DD0E74E4E958D6D42 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		B4C81879BFF3442788100D00 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		B5AE2009113548BB994ABF1D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		B63CA38EF9C74BD9B0E3767A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		B649086A727D4FF691232BFD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		B77BCBDABFAB4FC4878DBE8D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EA0FAF6A3AD69B898A442136;
			remoteInfo = test_suite_version;
		};
		B7CB47007D284BEA8ABF1B10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		B7D878DC1F4A484CA78EF1EE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		B83C3347E6C74E6B9983FB55 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		B95ECA3EF8054964A801D526 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		B9FBBCD8CC904602A02579E5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		BA5411517A154356A5D8FFEF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		BA9E1546406B410EA2B0661F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		BAE2B8D8AEAE4A2D8D174626 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = ECDAA9AF5189F6419839989B;
			remoteInfo = test_suite_ecdh;
		};
		BB0B2EA85C8B4435A775CF99 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		BB8C7D15047A4A7BAD7FD55B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		BBB0E4B7CE704AAD922EAD99 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		BBD1D2E6E8264B498A6E8A92 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8B5FBCA5D37095305232AC6E;
			remoteInfo = test_suite_pkparse;
		};
		BC94A55AAA3A466AAF349D9D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		BCC482E652214A3094CD088D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		BD15A5677FF049128C5096AB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4D2298E3D55708D846A03638;
			remoteInfo = test_suite_pkcs1_v15;
		};
		BD329E6DC9D24507A24C044C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		BDDFD0D1ECEA4C2F9205073C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		BF172CC28CF14C4B85D569FC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		BF71E267D1354E32A1D8BB0D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		BFDF018078A24FCD86D41C8C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		C012ED936511407F85FDC930 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		C03FB6524F7B42BAAD37487C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 77DE82126300AE680D449967;
			remoteInfo = test_suite_cipher.camellia;
		};
		C0876E5DC4244D5FB6347B58 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		C0B99CBDA0D84CA8867E29EA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 661DDB8594BD9ECB32DA30D7;
			remoteInfo = dtls_server;
		};
		C1C6B2487AC7489787690AE8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		C1CF8AF41FD3409EB3C0AFC4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8BC88D528D77393319B6F5B7;
			remoteInfo = test_suite_cipher.aes;
		};
		C2A037C26F194C238C4C6477 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 48C61CF1678F4F793728C80F;
			remoteInfo = cert_req;
		};
		C34E9AD6839B45DEAAA488D8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		C35157E2F0954EC586F238C6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		C46B2F3745C9414AB3E95DCB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		C46BFC73768342A4A3EC3142 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		C53C187EFDAF47A1B8DC09C2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		C557DE39DDC3446A85FDAC81 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		C560675BE72449AD9AE0FDAB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 476B1AB22BB1928A5C450AA9;
			remoteInfo = ssl_mail_client;
		};
		C58AC0857BE348E2A4A5DD04 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0A215FCBFCBE27F4EDE16C33;
			remoteInfo = rsa_verify;
		};
		C5D20961167D4C18B78CC252 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		C6BF35AD5D57476EAB386EFF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		C71F268B0DC542B2A4D833FD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		C7307A53CA4541FFA2BA87F4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		C76C93C21BD04627B3C0977A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 89AC83B8E97C5C53AF04A31A;
			remoteInfo = test_suite_aes.ecb;
		};
		C77B40E268FC462590005F81 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		C81C2DC4DFF7416FB41BF173 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		C87DA01CB783431781E2F192 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		C88784EA23F94E2BAAC82896 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		C8C94A4A09514653AFCEEF5A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		C8EC0A7ECF68497BB611A3ED /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		C9030184922C44E8A38D2409 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FA0E8E898CFED17F83F73E2;
			remoteInfo = test_suite_pkwrite;
		};
		C954B44711544F82BDD5C993 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		CA084B9D390D436DBE252803 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		CA2188740AB340DB80D042F4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		CA70678A6DB64476BC5483B7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 653CDB6ABFF889E53981B6C8;
			remoteInfo = pk_sign;
		};
		CAA9136F34664043A53ED5A7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		CAADEE516F1947BDAB21A4E9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		CAD1DBE4E4814C53861B0568 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		CBD585D91A8C4804A9076AD1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		CBE5970F446B4AC496F05300 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		CBF2642D24724FCB9AB80F98 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		CC11E58D88C94E94804C19EC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		CC7D859ABEC74B9FAE897E9B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		CCCDAB99004540CB87F92778 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		CD2C8D30CD4F40D3A0B74575 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4E2B702CA1606D2D041BAAE7;
			remoteInfo = ssl_fork_server;
		};
		CD828CEF5013434AAAD60A2F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		CDFEBD2C690947E9B71B76F6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		CF7FC1405CEA4E77BFFB9906 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		CFEB1699D4DF4184AA80A9B4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		D1720DE6EAD64BF9A1C392D8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		D292B50A93CD4EEBACF31945 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		D2C0CB1174A64310B991EFC7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		D309EF57DB5F4396B74F0A85 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		D32E02BC744141A2A5219EFC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		D35497C5018441BA9296B2CE /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		D3CE6D7CB6144D57BF782DB8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 29BA59437D681954609AE5BA;
			remoteInfo = test_suite_rsa;
		};
		D4410250AE5A4814B6ED3AA9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		D44BFFD102AD4E2AADFF5DA8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		D4DE779CBD53427C946D66A3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 6F6DA67F34C070F08125A803;
			remoteInfo = ALL_BUILD;
		};
		D5E25F124D1340718E9B251A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		D65992324584464FBD5A56BD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		D703C14A8CA34398B456B3CF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = BA6EAC531C05691C65120E7A;
			remoteInfo = test_suite_aes.cbc;
		};
		D7419668CA4745F6944395F6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		D7B6347600514706A72EB270 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		D9C0A1DD72A04741B284A2CA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7A90C5B9C87A1D86D5D93D45;
			remoteInfo = pem2der;
		};
		DA7BF2FC628C4522BBA76551 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		DA9C375EB633451C989D1B4D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = CFFE51E1BA6ECF2B52B6FF7B;
			remoteInfo = test_suite_gcm.aes256_en;
		};
		DAD85AAB85A740B5B92A35DF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		DBA4FB0B790E40F38F51D23F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		DBB40CEB8C1C47BABD2782B0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		DCDEF455DBF4446A9DDAE411 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B372663E30C8F6BFDBBE43F3;
			remoteInfo = test_suite_x509write;
		};
		DE467D2DE25F4F5BA6FC26A2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		DE54BCBAC5E3440D8122E48A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		DEB85D8824F941F488B3E3EF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		DEFEAB7A2574445A906DB4A0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = A3F38B10EB6FB926A3674B77;
			remoteInfo = test_suite_md;
		};
		DF487F274E6A4947B53C387A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		E00A3D323FAD4611BABE2076 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		E1499349A65A45DC8AB5F35F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		E1D379B4A3BA4CBB88174F80 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 32EE733876C8BA491B41ECDE;
			remoteInfo = key_app;
		};
		E1E3257D5F94412CA4A9B7AA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E76DA26A151FCAB9E0D1A119;
			remoteInfo = cert_write;
		};
		E23FD1F865514BFBA6DC0F3F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 0D70FB16A98363CE6F52832B;
			remoteInfo = dh_server;
		};
		E2C46F3EB3CC495F89453064 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		E2D2EB3968E7447E90AA947D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E2DC6223798B461FB36FED24 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FDD9F01D3BAD296EAE2FC004;
			remoteInfo = test_suite_ecp;
		};
		E301C3D3F2204AD98832DC22 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E40C0531DC0F4ACBB55BEFF5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		E49599AEE0E141E4AF86682C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		E4B9ED60B7F2444197FF108D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		E503CB5C968B46298FAF0B48 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		E52CC8BB06CA4D8381F8FCA4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E53977293DB34F01BFE79D8A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E570B7D5ED86480CB063E678 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		E59BBFF8DB244C4EAAFDE76C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E5A545844E33487D803BAD77 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		E5BAD136E79D495C99AAE1F3 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 853AC1C2F16240CB4A3EE900;
			remoteInfo = test_suite_des;
		};
		E608D72FE624430490180F2E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		E641D94624704ABA8CDFB426 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		E694DAC7A62D4312935E9312 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E79FCAB316DD4A4F9FBC393C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		E7A22462B34D4FBD835AE077 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		E9516F73E85A4BCF87B6A596 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		E979BB1589DB488A9F13D109 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		E9A4985EB7D54924AEEDF45F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		E9ECF62A7C464DF08F5648D7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		EA2C9267F1DD4E8B966227DC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		EA7320F77009448AA0B26737 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		EA922A63AD1F4BD9B21AAD12 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		EA9A423BD23C4C66BC98BB67 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		EB40BF022AD945F4A1F2C24E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		EB7F8A87971946F2A54A7561 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		EBB8AA608E574FB8A19F70BB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		EC3362B6173F41A3B03F3B23 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		ECC8A40097D24C04B3908188 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		ED494743CC364C07ABCB63BA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		EEEA7D636BF34E86B87DB1E1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		EF116A653A764C46A7651FAF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = EA2D6EFB9EDC427585DD87C4;
			remoteInfo = dtls_client;
		};
		EF3091E2DE164E39B818DCDB /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		F0462EBBFE3D4804BB801C40 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 4C8CC82D7F7DCD8D42888FDA;
			remoteInfo = test_suite_ecdsa;
		};
		F06CC8E073A2423D9DB614E2 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		F06FB5DA616D438481B65CA8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2D4919BE5807630ED568CF83;
			remoteInfo = test_suite_ctr_drbg;
		};
		F0FD16E24A6745868406030C /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D4BAC9F7BFAB881657519796;
			remoteInfo = test_suite_gcm.aes192_en;
		};
		F1115AC419754622B3F46A69 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		F1928AB6AFD5479ABD3AD37A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F1A7DA66032A43C4A8B27896 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 47E1F789F1A86F5114C29A71;
			remoteInfo = test_suite_asn1write;
		};
		F1AA7CB38CFF46688E8C83C8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F1B6FEC3C0C341B79510E673 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = FB48AF52AB945695FD505187;
			remoteInfo = test_suite_hmac_drbg.pr;
		};
		F1B855199527472FA6DB969F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		F1FF2908972F484AB73DF8EF /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		F223DE7E83C447B0893EA6B8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F25C5FBBCA024AC4A47864A9 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F288A82BCB3F4693B2D6A691 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F2E364FB2A81488AB3B3AC1F /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55C40BCD2F68C1BF2E8A271B;
			remoteInfo = mpi_demo;
		};
		F300DA896524456493AD81CC /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		F46FA3E42DD6478EB5FC77B0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		F510C5A5760748F58A065643 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		F515769D069040D2981B901B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F5BD24826E02486B8BB596F8 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		F646B58650D74673B41BB738 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		F6D2EC0C7BBD4500A4D42B61 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 60BF7F050AB2279A4DA47C0D;
			remoteInfo = gen_key;
		};
		F76C387B03B94878A394BC2B /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		F7F3E287146E46C7888917FA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F8184D827EEB47FF85BD5FD1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F826D59D928E4C85B61B3335 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		F8C3C1407C79492E9B0340B6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C7E42F3F7E824047465303C7;
			remoteInfo = rsa_verify_pss;
		};
		F92E26A2A9A74B7B9FB4BA6A /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
		F9779CECD51E4ED9941D886D /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		F99028D562B049248E698765 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 7759261DA31821E0140A5015;
			remoteInfo = ZERO_CHECK;
		};
		FB79D172AF6F4F8AA7EF7923 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = D49CC937D53FDE55DDA2DBE8;
			remoteInfo = mbedcrypto;
		};
		FBCFA4C424C54998A41579AD /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		FD7F279950CF45CCBC450587 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 55E0753594CD91FBA837EC69;
			remoteInfo = mbedx509;
		};
		FECA0C7A392F40169330EBB4 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 42BB226F579504137717614A;
			remoteInfo = test_suite_cipher.ccm;
		};
		FEF0F3D9E11E4C6585B31EA6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 9214018542B5E981EE3AB7AE;
			remoteInfo = test_suite_memory_buffer_alloc;
		};
		FF4451F088B64FE7AA3C0D16 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = DB66AD163D444739BEFC5D1F /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8FEB76854011AF773AF35D11;
			remoteInfo = mbedtls;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		000F4BC0EE2A4B9987AAEA84 /* test_suite_version.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_version.c; path = tests/test_suite_version.c; sourceTree = SOURCE_ROOT; };
		0015A61896EB43D5B5B41409 /* test_suite_hmac_drbg.no_reseed.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_hmac_drbg.no_reseed.c; path = tests/test_suite_hmac_drbg.no_reseed.c; sourceTree = SOURCE_ROOT; };
		0036270E28AF404E99A113AE /* sha256.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sha256.c; path = library/sha256.c; sourceTree = SOURCE_ROOT; };
		003900D5503A4970819E7965 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = library/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		01BC24B1C35F47F7A2A5FFE9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/hash/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		02167C6C4441441E80EC8D4C /* test_suite_pk */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pk; sourceTree = BUILT_PRODUCTS_DIR; };
		032D0BE931B84C6294020D72 /* x509_csr.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509_csr.c; path = library/x509_csr.c; sourceTree = SOURCE_ROOT; };
		036CD3ACA7624BCCBDDC8B6D /* dh_genprime.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = dh_genprime.c; path = programs/pkey/dh_genprime.c; sourceTree = SOURCE_ROOT; };
		039C3CF803BE46F7AE2F25F2 /* test_suite_gcm.aes128_en.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.aes128_en.c.rule; path = tests/test_suite_gcm.aes128_en.c.rule; sourceTree = SOURCE_ROOT; };
		046708CAF99D431C8490EB6F /* test_suite_error.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_error.c; path = tests/test_suite_error.c; sourceTree = SOURCE_ROOT; };
		04D0F39162644F06A7F61DA9 /* md_wrap.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = md_wrap.c; path = library/md_wrap.c; sourceTree = SOURCE_ROOT; };
		05458EC12FB7489DAEAEA408 /* test_suite_aes.rest */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_aes.rest; sourceTree = BUILT_PRODUCTS_DIR; };
		05B41BA11EE84C62B2F8A6FF /* test_suite_entropy */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_entropy; sourceTree = BUILT_PRODUCTS_DIR; };
		05DD32622434453B97D8591F /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		064F01329A4B4510AE9DD8F9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		06B0DD40F01C4A76A51B47E2 /* generic_sum.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = generic_sum.c; path = programs/hash/generic_sum.c; sourceTree = SOURCE_ROOT; };
		0702BD73F32842C7944C390F /* rsa_encrypt */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_encrypt; sourceTree = BUILT_PRODUCTS_DIR; };
		074D65A906744879993BF1E9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		076084816AB24480BD7AE7FA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		077DAEB8198D4853B6BCD5B9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		07BDF6E24548444E9ABDC140 /* ssl_server2 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_server2; sourceTree = BUILT_PRODUCTS_DIR; };
		07CAE57BEED94E49B1E6D4D5 /* test_suite_cipher.des.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.des.c.rule; path = tests/test_suite_cipher.des.c.rule; sourceTree = SOURCE_ROOT; };
		08181C96F1A2438FBF08F2A9 /* dhm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = dhm.c; path = library/dhm.c; sourceTree = SOURCE_ROOT; };
		0994F9D5B6DD46E5BDEB9F97 /* certs.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = certs.c; path = library/certs.c; sourceTree = SOURCE_ROOT; };
		09A924C71BF045E2979EC9DC /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		09F8A754DE8E4321A3C8C8AB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0A1A05318572496A91C96F22 /* test_suite_cipher.camellia.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.camellia.c; path = tests/test_suite_cipher.camellia.c; sourceTree = SOURCE_ROOT; };
		0AD187B0E44F4B6F9C64095F /* entropy_poll.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = entropy_poll.c; path = library/entropy_poll.c; sourceTree = SOURCE_ROOT; };
		0B2B66389EAF4397950515D4 /* test_suite_pkcs5.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pkcs5.c; path = tests/test_suite_pkcs5.c; sourceTree = SOURCE_ROOT; };
		0B56103A02DB41F4919ACD5E /* test_suite_hmac_drbg.no_reseed */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_hmac_drbg.no_reseed; sourceTree = BUILT_PRODUCTS_DIR; };
		0B65CD5B58884E17855C9C45 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		0F6D47B9B3A244CDA315EC43 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		10512EDBD98E4F19837D63AB /* test_suite_mdx.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_mdx.c.rule; path = tests/test_suite_mdx.c.rule; sourceTree = SOURCE_ROOT; };
		109A4B26445D43338973DCD0 /* test_suite_gcm.aes192_en.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.aes192_en.c.rule; path = tests/test_suite_gcm.aes192_en.c.rule; sourceTree = SOURCE_ROOT; };
		1165468592BE4A94BA336D99 /* test_suite_cmac */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cmac; sourceTree = BUILT_PRODUCTS_DIR; };
		11B83123AC6C4982A6FCE631 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		11E08772093147C3AC1BF8C2 /* test_suite_md.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_md.c; path = tests/test_suite_md.c; sourceTree = SOURCE_ROOT; };
		11E93400C71D4E80B39EBDF6 /* version_features.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = version_features.c; path = library/version_features.c; sourceTree = SOURCE_ROOT; };
		11EDE0ACC87046C385CAD4DF /* req_app.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = req_app.c; path = programs/x509/req_app.c; sourceTree = SOURCE_ROOT; };
		12EFACA7FA104117B40239F5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		14235E06DBB84CCC9416E073 /* key_app.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = key_app.c; path = programs/pkey/key_app.c; sourceTree = SOURCE_ROOT; };
		143B325AE9294E38B26E2427 /* test_suite_aes.cbc */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_aes.cbc; sourceTree = BUILT_PRODUCTS_DIR; };
		1519A846100A4D57B3B62A49 /* md5.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = md5.c; path = library/md5.c; sourceTree = SOURCE_ROOT; };
		153C4EEC335D487FB315614C /* test_suite_ccm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ccm.c; path = tests/test_suite_ccm.c; sourceTree = SOURCE_ROOT; };
		1747609B85A445909B2A56E0 /* test_suite_shax.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_shax.c.rule; path = tests/test_suite_shax.c.rule; sourceTree = SOURCE_ROOT; };
		18442E91F6F5405E8469F418 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1987C29C499D4F5BBC05E86B /* ssl_ticket.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_ticket.c; path = library/ssl_ticket.c; sourceTree = SOURCE_ROOT; };
		19E2824BBF18470EB35613B8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/random/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1A26FFC38F9F4DD0A78AB534 /* ssl_mail_client */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_mail_client; sourceTree = BUILT_PRODUCTS_DIR; };
		1A723A8DED8B4629BA8DDB36 /* test_suite_ccm.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ccm.c.rule; path = tests/test_suite_ccm.c.rule; sourceTree = SOURCE_ROOT; };
		1AB15DF1AA414C4092615563 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1AFE4477B4004841B5D36C5F /* test_suite_gcm.aes128_de.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.aes128_de.c.rule; path = tests/test_suite_gcm.aes128_de.c.rule; sourceTree = SOURCE_ROOT; };
		1B4CCEF99AD849DBA9F22689 /* gen_random_ctr_drbg */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gen_random_ctr_drbg; sourceTree = BUILT_PRODUCTS_DIR; };
		1B57125971454F01ADF99C80 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1BED17EFE8F94B12A79E87AF /* ecp.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecp.c; path = library/ecp.c; sourceTree = SOURCE_ROOT; };
		1C1341B4C7CB4CB0B184F7A7 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1CB259B66A8B4E5AAD36529C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		1CC46F04EC9C49DFA302ACFC /* ssl_pthread_server */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_pthread_server; sourceTree = BUILT_PRODUCTS_DIR; };
		1CFB73963A694580AD131A81 /* test_suite_pem.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pem.c; path = tests/test_suite_pem.c; sourceTree = SOURCE_ROOT; };
		1F5124314AAA4210B04A39A3 /* test_suite_blowfish */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_blowfish; sourceTree = BUILT_PRODUCTS_DIR; };
		217268397BF448F599D6D42A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		217DC98C3AD947A2AC7088D6 /* test_suite_gcm.aes256_de */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.aes256_de; sourceTree = BUILT_PRODUCTS_DIR; };
		21E8215920F34C3E850AE59B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		22204A434F554101BC96FCA4 /* md.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = md.c; path = library/md.c; sourceTree = SOURCE_ROOT; };
		22495A5577C947988123A7AF /* ssl_cert_test */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_cert_test; sourceTree = BUILT_PRODUCTS_DIR; };
		2264036866B14169AA9CDF3D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		230D5B9AD9C3421A83E124EA /* test_suite_ecjpake.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ecjpake.c.rule; path = tests/test_suite_ecjpake.c.rule; sourceTree = SOURCE_ROOT; };
		231C9EF8848F49C4903B9F7C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2386413D411A49EBA7D0DCE9 /* test_suite_ccm */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ccm; sourceTree = BUILT_PRODUCTS_DIR; };
		23D10C9BC4D84F0C9762F2A4 /* test_suite_dhm */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_dhm; sourceTree = BUILT_PRODUCTS_DIR; };
		242A5D0678ED457388ECC505 /* aesni.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = aesni.c; path = library/aesni.c; sourceTree = SOURCE_ROOT; };
		25B1F31AC23F4B41BCD85187 /* udp_proxy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = udp_proxy.c; path = programs/test/udp_proxy.c; sourceTree = SOURCE_ROOT; };
		260C4203EB084DD4A473CC2C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		26D21478227F4473B74E23C9 /* test_suite_aes.ecb.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_aes.ecb.c; path = tests/test_suite_aes.ecb.c; sourceTree = SOURCE_ROOT; };
		276443A652BE48948B582FAB /* test_suite_gcm.aes128_de.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.aes128_de.c; path = tests/test_suite_gcm.aes128_de.c; sourceTree = SOURCE_ROOT; };
		298F5252B11442058BB83881 /* arc4.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = arc4.c; path = library/arc4.c; sourceTree = SOURCE_ROOT; };
		29B0198D36C44600AFDB2009 /* md4.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = md4.c; path = library/md4.c; sourceTree = SOURCE_ROOT; };
		29C7F13D067A4AA0BA9B1A08 /* ssl_cache.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_cache.c; path = library/ssl_cache.c; sourceTree = SOURCE_ROOT; };
		2A7B10EA903045E4BB3C61FC /* mini_client.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = mini_client.c; path = programs/ssl/mini_client.c; sourceTree = SOURCE_ROOT; };
		2A90F600B1AE4496934782C9 /* dtls_client.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = dtls_client.c; path = programs/ssl/dtls_client.c; sourceTree = SOURCE_ROOT; };
		2B24D65D28DB47C9BEB8A820 /* pkparse.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pkparse.c; path = library/pkparse.c; sourceTree = SOURCE_ROOT; };
		2B684563732148BAB5569E47 /* rsa_verify_pss */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_verify_pss; sourceTree = BUILT_PRODUCTS_DIR; };
		2B6B8D2E2E634505ACE0F916 /* test_suite_ecp.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ecp.c.rule; path = tests/test_suite_ecp.c.rule; sourceTree = SOURCE_ROOT; };
		2C10935D0E9B47A8957E2810 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2C66C66794F84675A4FE19FE /* cert_req */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = cert_req; sourceTree = BUILT_PRODUCTS_DIR; };
		2C934C09348542418CADA280 /* ssl_server */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_server; sourceTree = BUILT_PRODUCTS_DIR; };
		2CE371D97412443083F0E79D /* test_suite_md.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_md.c.rule; path = tests/test_suite_md.c.rule; sourceTree = SOURCE_ROOT; };
		2D566DFF80974338B770751D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = library/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2F185BC97E6E49A88D7BBFA7 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = library/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2F1E937953B84DD989112558 /* test_suite_memory_buffer_alloc.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_memory_buffer_alloc.c.rule; path = tests/test_suite_memory_buffer_alloc.c.rule; sourceTree = SOURCE_ROOT; };
		2F4635F12E754D1B96F73091 /* test_suite_aes.cfb.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_aes.cfb.c; path = tests/test_suite_aes.cfb.c; sourceTree = SOURCE_ROOT; };
		2F5A529666364AB6A9731F88 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		2FB528091B8F4572AB3BA684 /* test_suite_gcm.aes128_en.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.aes128_en.c; path = tests/test_suite_gcm.aes128_en.c; sourceTree = SOURCE_ROOT; };
		2FC61EFE360246E0899E981C /* test_suite_gcm.aes192_de.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.aes192_de.c.rule; path = tests/test_suite_gcm.aes192_de.c.rule; sourceTree = SOURCE_ROOT; };
		3040196CB44E4D5DBC7121BB /* ecjpake.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecjpake.c; path = library/ecjpake.c; sourceTree = SOURCE_ROOT; };
		306EE3B6124345A5A3696F40 /* test_suite_pkcs1_v21 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pkcs1_v21; sourceTree = BUILT_PRODUCTS_DIR; };
		3128F428FE5640AA98FF16B8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3159BE57DD2C4A2ABDDF3AFA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		3372CCCDD2314B1C946C75E7 /* test_suite_shax.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_shax.c; path = tests/test_suite_shax.c; sourceTree = SOURCE_ROOT; };
		337DE5E50AEA4A6C9405D6E6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		33962C71008248968D1A6ADF /* ssl_fork_server.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_fork_server.c; path = programs/ssl/ssl_fork_server.c; sourceTree = SOURCE_ROOT; };
		345428569E1A4DEF84597349 /* test_suite_debug.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_debug.c.rule; path = tests/test_suite_debug.c.rule; sourceTree = SOURCE_ROOT; };
		34DD01E748B14292A69079F7 /* test_suite_camellia.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_camellia.c; path = tests/test_suite_camellia.c; sourceTree = SOURCE_ROOT; };
		356AD730CFB14179B88EAAD5 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		35853B533E6E4D8087FD4236 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		359072775D1B4315935F175B /* test_suite_asn1write */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_asn1write; sourceTree = BUILT_PRODUCTS_DIR; };
		3591A9AB3F0648C196FCA9F8 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		36B949913B1747F6ADB62732 /* test_suite_cipher.arc4.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.arc4.c; path = tests/test_suite_cipher.arc4.c; sourceTree = SOURCE_ROOT; };
		37BC8214ACF8433DA010A575 /* test_suite_gcm.aes128_en */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.aes128_en; sourceTree = BUILT_PRODUCTS_DIR; };
		382CF7EFEF2241D7B09C04B5 /* test_suite_timing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_timing; sourceTree = BUILT_PRODUCTS_DIR; };
		3929DE302764430884F3B3C4 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		399AAD35FEF14826B8A1B53E /* platform.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = platform.c; path = library/platform.c; sourceTree = SOURCE_ROOT; };
		399EBEE336754F53B7DEBACF /* test_suite_hmac_drbg.nopr */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_hmac_drbg.nopr; sourceTree = BUILT_PRODUCTS_DIR; };
		3B060DB4B4EE4A4DBBBFBCF2 /* test_suite_ecjpake */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ecjpake; sourceTree = BUILT_PRODUCTS_DIR; };
		3B11F7ABA7384413B4C3C15B /* x509_create.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509_create.c; path = library/x509_create.c; sourceTree = SOURCE_ROOT; };
		3B3BBAC0157F4B0B859F7034 /* test_suite_cipher.padding */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.padding; sourceTree = BUILT_PRODUCTS_DIR; };
		3B9589614CA84E028AF00E99 /* test_suite_memory_buffer_alloc.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_memory_buffer_alloc.c; path = tests/test_suite_memory_buffer_alloc.c; sourceTree = SOURCE_ROOT; };
		3C1A1242701F429DB4880E20 /* benchmark */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = benchmark; sourceTree = BUILT_PRODUCTS_DIR; };
		3CAA9F23BF9841C69D610720 /* asn1parse.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = asn1parse.c; path = library/asn1parse.c; sourceTree = SOURCE_ROOT; };
		3E70868A57C64D7398D43F3F /* test_suite_arc4 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_arc4; sourceTree = BUILT_PRODUCTS_DIR; };
		3EB6756F225D415C9C2615E3 /* x509write_crt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509write_crt.c; path = library/x509write_crt.c; sourceTree = SOURCE_ROOT; };
		40224EE1444F4C65BDC0F7DE /* pkcs12.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pkcs12.c; path = library/pkcs12.c; sourceTree = SOURCE_ROOT; };
		4229857C34B6447DAE9D2095 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		42A98856DD064DB6AC4123A0 /* hello */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = hello; sourceTree = BUILT_PRODUCTS_DIR; };
		4336ABC619C04C6F98514461 /* test_suite_des.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_des.c.rule; path = tests/test_suite_des.c.rule; sourceTree = SOURCE_ROOT; };
		440EBB403BE64A66AE5A2FE3 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		441B2C62D590451991479476 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		44AD553207AB4411AEC8A177 /* benchmark.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = benchmark.c; path = programs/test/benchmark.c; sourceTree = SOURCE_ROOT; };
		451090BEC5BC406EBC02FDED /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		467261E192744483A9532072 /* sha512.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sha512.c; path = library/sha512.c; sourceTree = SOURCE_ROOT; };
		46C514389FB2475CA62FDB75 /* entropy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = entropy.c; path = library/entropy.c; sourceTree = SOURCE_ROOT; };
		46DE811E828740A19A08752F /* key_app */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = key_app; sourceTree = BUILT_PRODUCTS_DIR; };
		4739A311703A45B8A9BAEACC /* pk_encrypt */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = pk_encrypt; sourceTree = BUILT_PRODUCTS_DIR; };
		47BCEC12B3FB4670813EC0A0 /* test_suite_dhm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_dhm.c; path = tests/test_suite_dhm.c; sourceTree = SOURCE_ROOT; };
		49615F679ECD44D2A2B22729 /* test_suite_aes.rest.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_aes.rest.c; path = tests/test_suite_aes.rest.c; sourceTree = SOURCE_ROOT; };
		49E8732FB5D147BCA6096FDF /* debug.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = debug.c; path = library/debug.c; sourceTree = SOURCE_ROOT; };
		4B148F57F0A244C78C616A0D /* rsa_verify.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_verify.c; path = programs/pkey/rsa_verify.c; sourceTree = SOURCE_ROOT; };
		4C1D5EEB273B4063B5CADEBE /* cert_app */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = cert_app; sourceTree = BUILT_PRODUCTS_DIR; };
		4CD99A1DD5C94610B621A819 /* test_suite_aes.ecb */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_aes.ecb; sourceTree = BUILT_PRODUCTS_DIR; };
		4CDA3ACD2007484AA09A1859 /* test_suite_ecdh.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ecdh.c; path = tests/test_suite_ecdh.c; sourceTree = SOURCE_ROOT; };
		4D3D201704994955BDD7E6D3 /* test_suite_ecdsa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ecdsa; sourceTree = BUILT_PRODUCTS_DIR; };
		4DABE23A986B49C8A98B267A /* rsa_sign */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_sign; sourceTree = BUILT_PRODUCTS_DIR; };
		4E421CAA582C46ACAF8A7775 /* memory_buffer_alloc.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = memory_buffer_alloc.c; path = library/memory_buffer_alloc.c; sourceTree = SOURCE_ROOT; };
		4E68B5BEDD2B46B38DDE81CF /* ssl_tls.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_tls.c; path = library/ssl_tls.c; sourceTree = SOURCE_ROOT; };
		4EC4BCF29EB04AD7AC380C4F /* pem.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pem.c; path = library/pem.c; sourceTree = SOURCE_ROOT; };
		4ECDB44651684DB0B3340DDD /* test_suite_pkcs5 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pkcs5; sourceTree = BUILT_PRODUCTS_DIR; };
		4EE58494A5E34F74BBF5C238 /* test_suite_timing.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_timing.c.rule; path = tests/test_suite_timing.c.rule; sourceTree = SOURCE_ROOT; };
		4EF9972F49174F44A2FBEEC7 /* test_suite_pkparse */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pkparse; sourceTree = BUILT_PRODUCTS_DIR; };
		4F6219E7FC8E45D284E67150 /* asn1write.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = asn1write.c; path = library/asn1write.c; sourceTree = SOURCE_ROOT; };
		50024BF5AADC4EF8A50AD457 /* generic_sum */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = generic_sum; sourceTree = BUILT_PRODUCTS_DIR; };
		50169B5CFD2647DE8021B41B /* net_sockets.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = net_sockets.c; path = library/net_sockets.c; sourceTree = SOURCE_ROOT; };
		5016B21E925E4F289AEFE662 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		51F215EFAB434DEE8C8CA223 /* pk_sign */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = pk_sign; sourceTree = BUILT_PRODUCTS_DIR; };
		52B0F3EC04A447D6B9F0D88D /* test_suite_cipher.aes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.aes; sourceTree = BUILT_PRODUCTS_DIR; };
		546F8762D3DD496AB7D92CE1 /* test_suite_x509write.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_x509write.c.rule; path = tests/test_suite_x509write.c.rule; sourceTree = SOURCE_ROOT; };
		547A1BDC4ED640739ED78909 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		54CAE28ED48B41DE9442DB17 /* test_suite_rsa.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_rsa.c.rule; path = tests/test_suite_rsa.c.rule; sourceTree = SOURCE_ROOT; };
		550531816FF945189BA4FBFF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		55ED43448A164096857B7524 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		56507561643E4669B536E414 /* ssl_ciphersuites.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_ciphersuites.c; path = library/ssl_ciphersuites.c; sourceTree = SOURCE_ROOT; };
		576BAE17F12C468BB0C83F0E /* test_suite_error */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_error; sourceTree = BUILT_PRODUCTS_DIR; };
		57B6610E60AC4C9E8759FB9B /* test_suite_gcm.aes256_en.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.aes256_en.c; path = tests/test_suite_gcm.aes256_en.c; sourceTree = SOURCE_ROOT; };
		58757BE304AD487196A3D6D8 /* ecdsa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ecdsa; sourceTree = BUILT_PRODUCTS_DIR; };
		58F81292C53346CD8423A190 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		591F91A0C1594BBAA3B65C5E /* strerror.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = strerror.c; path = programs/util/strerror.c; sourceTree = SOURCE_ROOT; };
		596B3F6DD9D94E0FA04F05EA /* test_suite_memory_buffer_alloc */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_memory_buffer_alloc; sourceTree = BUILT_PRODUCTS_DIR; };
		596B8B79A49543CCBBCD4154 /* test_suite_cipher.ccm */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.ccm; sourceTree = BUILT_PRODUCTS_DIR; };
		5ABB25E80CA944CD9BB2BB39 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/x509/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5B76C54519BB4E8DBFA4ACA3 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5C510F9E04814B2F9FA24D39 /* ssl_mail_client.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_mail_client.c; path = programs/ssl/ssl_mail_client.c; sourceTree = SOURCE_ROOT; };
		5CE45AAF0CF04FD0A6839F4E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/test/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		5DFA91290BBE44FB8D2708D3 /* ccm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ccm.c; path = library/ccm.c; sourceTree = SOURCE_ROOT; };
		5E095CC6EDCB46ECBD1891EF /* test_suite_mdx */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_mdx; sourceTree = BUILT_PRODUCTS_DIR; };
		5E141D1EF7AF4BC79A2954A4 /* ssl_pthread_server.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_pthread_server.c; path = programs/ssl/ssl_pthread_server.c; sourceTree = SOURCE_ROOT; };
		5E93B941A56E4C418EEE518F /* test_suite_xtea.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_xtea.c.rule; path = tests/test_suite_xtea.c.rule; sourceTree = SOURCE_ROOT; };
		5F085A71EC52428380BF15E9 /* test_suite_gcm.aes192_de */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.aes192_de; sourceTree = BUILT_PRODUCTS_DIR; };
		5F59E7BBA0E64F5A8D59D383 /* libmbedcrypto.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libmbedcrypto.a; sourceTree = BUILT_PRODUCTS_DIR; };
		5F686B1BAC244565AB459880 /* test_suite_xtea */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_xtea; sourceTree = BUILT_PRODUCTS_DIR; };
		6079EAE84959483E939A14DA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		61C07E23CA21459BA535D7A9 /* test_suite_cipher.des.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.des.c; path = tests/test_suite_cipher.des.c; sourceTree = SOURCE_ROOT; };
		621206137AD74CB4BA77EC10 /* test_suite_cipher.padding.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.padding.c; path = tests/test_suite_cipher.padding.c; sourceTree = SOURCE_ROOT; };
		62E70722E84344D3A59F3A0B /* dh_client.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = dh_client.c; path = programs/pkey/dh_client.c; sourceTree = SOURCE_ROOT; };
		63113D3E7F1A4170BC874A1C /* cert_write */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = cert_write; sourceTree = BUILT_PRODUCTS_DIR; };
		64FF217E0D864F928D1E2B07 /* test_suite_asn1write.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_asn1write.c.rule; path = tests/test_suite_asn1write.c.rule; sourceTree = SOURCE_ROOT; };
		653202F0658C4C4C8822F016 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/random/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		660747D63525416581BB8C80 /* gen_key */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gen_key; sourceTree = BUILT_PRODUCTS_DIR; };
		664DFF9E94654C168BE63B37 /* test_suite_hmac_drbg.misc.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_hmac_drbg.misc.c.rule; path = tests/test_suite_hmac_drbg.misc.c.rule; sourceTree = SOURCE_ROOT; };
		6699C32B339446CAB1218714 /* padlock.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = padlock.c; path = library/padlock.c; sourceTree = SOURCE_ROOT; };
		68B88B403B1E49F29DD4D6A6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		68E8E78ABCB143E48B6AE268 /* test_suite_hmac_drbg.no_reseed.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_hmac_drbg.no_reseed.c.rule; path = tests/test_suite_hmac_drbg.no_reseed.c.rule; sourceTree = SOURCE_ROOT; };
		693084299B85488594F051FD /* ecdh_curve25519 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ecdh_curve25519; sourceTree = BUILT_PRODUCTS_DIR; };
		693C86663D294627A85BE9C9 /* test_suite_aes.cbc.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_aes.cbc.c; path = tests/test_suite_aes.cbc.c; sourceTree = SOURCE_ROOT; };
		696CE50A4B714EE09A3DDA16 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		69796EE957834EF79A2CBDE0 /* gen_key.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gen_key.c; path = programs/pkey/gen_key.c; sourceTree = SOURCE_ROOT; };
		698E2ADF77A44C7F84570BD9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6A489047F5F447E38562A49E /* base64.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = base64.c; path = library/base64.c; sourceTree = SOURCE_ROOT; };
		6A9ADCA880064F2CA07D9D29 /* cmac.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cmac.c; path = library/cmac.c; sourceTree = SOURCE_ROOT; };
		6B918F37BBE74DCB95303A34 /* mpi_demo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = mpi_demo; sourceTree = BUILT_PRODUCTS_DIR; };
		6BA32511607847B8AA6853F8 /* ripemd160.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ripemd160.c; path = library/ripemd160.c; sourceTree = SOURCE_ROOT; };
		6BB8D955F31C43288FED1941 /* test_suite_ctr_drbg.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ctr_drbg.c; path = tests/test_suite_ctr_drbg.c; sourceTree = SOURCE_ROOT; };
		6C5CB8079C384BF6B883995B /* pk_wrap.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pk_wrap.c; path = library/pk_wrap.c; sourceTree = SOURCE_ROOT; };
		6F1332BB3CFB42CDAD07A928 /* x509.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509.c; path = library/x509.c; sourceTree = SOURCE_ROOT; };
		6F5F63FC67E24290BE513F97 /* pem2der */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = pem2der; sourceTree = BUILT_PRODUCTS_DIR; };
		6F95F88CE49C49FAA8434708 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		6FA842143E5642FD84CABA71 /* pk.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pk.c; path = library/pk.c; sourceTree = SOURCE_ROOT; };
		6FE3F6E97F9F4F2498512E59 /* test_suite_pkwrite.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pkwrite.c.rule; path = tests/test_suite_pkwrite.c.rule; sourceTree = SOURCE_ROOT; };
		709EE4943773465689B68D80 /* test_suite_mpi.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_mpi.c; path = tests/test_suite_mpi.c; sourceTree = SOURCE_ROOT; };
		70AF8E68D3F44464AC4A8A3C /* test_suite_cipher.camellia.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.camellia.c.rule; path = tests/test_suite_cipher.camellia.c.rule; sourceTree = SOURCE_ROOT; };
		70ECA227B0C94D3FA182D375 /* ssl_cert_test.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_cert_test.c; path = programs/test/ssl_cert_test.c; sourceTree = SOURCE_ROOT; };
		715D513A1DB6416696CCE5B3 /* test_suite_ecjpake.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ecjpake.c; path = tests/test_suite_ecjpake.c; sourceTree = SOURCE_ROOT; };
		719BFADB2BBA4F9D8728821B /* rsa_sign_pss.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_sign_pss.c; path = programs/pkey/rsa_sign_pss.c; sourceTree = SOURCE_ROOT; };
		71F3757BD1EC43BCAC6C3B6C /* selftest.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = selftest.c; path = programs/test/selftest.c; sourceTree = SOURCE_ROOT; };
		720868E16B354A5D8D995B24 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7262D148B3404BE9925ED667 /* ssl_cookie.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_cookie.c; path = library/ssl_cookie.c; sourceTree = SOURCE_ROOT; };
		728C9BF911DF4E9BBC359055 /* dh_server */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = dh_server; sourceTree = BUILT_PRODUCTS_DIR; };
		72DC2A87820E4E42A77B1344 /* test_suite_arc4.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_arc4.c.rule; path = tests/test_suite_arc4.c.rule; sourceTree = SOURCE_ROOT; };
		72EC203136EF43C9A58B12D0 /* test_suite_timing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_timing.c; path = tests/test_suite_timing.c; sourceTree = SOURCE_ROOT; };
		74977C1423AB48AFAA77A6A5 /* test_suite_cmac.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cmac.c; path = tests/test_suite_cmac.c; sourceTree = SOURCE_ROOT; };
		752F3B9B329B4432974FF2B8 /* test_suite_pkcs5.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pkcs5.c.rule; path = tests/test_suite_pkcs5.c.rule; sourceTree = SOURCE_ROOT; };
		75A4A6AF1D844769B148C821 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		75AA5D7F3A6C4408AA4C3A33 /* pkcs5.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pkcs5.c; path = library/pkcs5.c; sourceTree = SOURCE_ROOT; };
		766F7A96EEF14A3B86A86A36 /* rsa_verify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_verify; sourceTree = BUILT_PRODUCTS_DIR; };
		77E56418762C4A52866A1FD3 /* oid.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = oid.c; path = library/oid.c; sourceTree = SOURCE_ROOT; };
		7874A25397A0461098EE062A /* xtea.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = xtea.c; path = library/xtea.c; sourceTree = SOURCE_ROOT; };
		78883992930D4B1394127E47 /* crl_app.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = crl_app.c; path = programs/x509/crl_app.c; sourceTree = SOURCE_ROOT; };
		78B98AABAC114C16A6B06638 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		79352B8731C0419F87C2DD1A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/util/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		793C028D63524064B235ADFD /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7A1F00AACD2246A99BF61DBE /* test_suite_pkwrite */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pkwrite; sourceTree = BUILT_PRODUCTS_DIR; };
		7ACBBBF62DAF4B0CAB4E6DBC /* test_suite_hmac_drbg.pr */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_hmac_drbg.pr; sourceTree = BUILT_PRODUCTS_DIR; };
		7C008597F3D943DA8A219F7A /* rsa_sign_pss */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_sign_pss; sourceTree = BUILT_PRODUCTS_DIR; };
		7C17987A6C004B09BF4FA727 /* udp_proxy */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = udp_proxy; sourceTree = BUILT_PRODUCTS_DIR; };
		7C5374538DA44F6893B3A69E /* test_suite_pkparse.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pkparse.c; path = tests/test_suite_pkparse.c; sourceTree = SOURCE_ROOT; };
		7C7D511A198E476382302A95 /* ecp_curves.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecp_curves.c; path = library/ecp_curves.c; sourceTree = SOURCE_ROOT; };
		7CBA1254F8CB46A2B2735039 /* test_suite_pem.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pem.c.rule; path = tests/test_suite_pem.c.rule; sourceTree = SOURCE_ROOT; };
		7CEC9829759245D59AE446C1 /* test_suite_rsa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_rsa.c; path = tests/test_suite_rsa.c; sourceTree = SOURCE_ROOT; };
		7D4B336BA9EB4D34AF80F1DE /* test_suite_ctr_drbg.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ctr_drbg.c.rule; path = tests/test_suite_ctr_drbg.c.rule; sourceTree = SOURCE_ROOT; };
		7D582617557847FD87659C89 /* test_suite_pkparse.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pkparse.c.rule; path = tests/test_suite_pkparse.c.rule; sourceTree = SOURCE_ROOT; };
		7D71D51E5D714FE0809EC874 /* selftest */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = selftest; sourceTree = BUILT_PRODUCTS_DIR; };
		7D83886E3F2044FFB32AD5C6 /* test_suite_cipher.ccm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.ccm.c; path = tests/test_suite_cipher.ccm.c; sourceTree = SOURCE_ROOT; };
		7DB064CC67F643BAA765228D /* test_suite_cipher.des */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.des; sourceTree = BUILT_PRODUCTS_DIR; };
		7DCB9D9DD2B94AFC80960C66 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/hash/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		7DEBBC224A3C4DAE88506100 /* test_suite_cipher.gcm.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.gcm.c.rule; path = tests/test_suite_cipher.gcm.c.rule; sourceTree = SOURCE_ROOT; };
		7E8F2E1336A94995B37BFA74 /* test_suite_cipher.blowfish */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.blowfish; sourceTree = BUILT_PRODUCTS_DIR; };
		7EB8B728F31549068C9D3904 /* test_suite_cipher.camellia */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.camellia; sourceTree = BUILT_PRODUCTS_DIR; };
		800BC1B412B1407F83787363 /* error.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = error.c; path = library/error.c; sourceTree = SOURCE_ROOT; };
		80F551A0145C490BA9266982 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		81CCE6F54F5049A5A968BBEA /* gcm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gcm.c; path = library/gcm.c; sourceTree = SOURCE_ROOT; };
		821CE17725B84743A758700E /* test_suite_ecdsa.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ecdsa.c.rule; path = tests/test_suite_ecdsa.c.rule; sourceTree = SOURCE_ROOT; };
		8302DB73B7A141F89BDEC65E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = library/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		838D89478A5F4C768237EA75 /* test_suite_gcm.aes256_en */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.aes256_en; sourceTree = BUILT_PRODUCTS_DIR; };
		83D666DA763F4D0CBD026AB1 /* test_suite_gcm.aes256_en.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.aes256_en.c.rule; path = tests/test_suite_gcm.aes256_en.c.rule; sourceTree = SOURCE_ROOT; };
		840BF6B622DB47958E20E335 /* test_suite_pkcs1_v21.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pkcs1_v21.c.rule; path = tests/test_suite_pkcs1_v21.c.rule; sourceTree = SOURCE_ROOT; };
		846E690701E54865A6BF191B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		84AB588BAAA44C439250E15A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/aes/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		85556E6C9347462DB51D7B07 /* test_suite_rsa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_rsa; sourceTree = BUILT_PRODUCTS_DIR; };
		856879F31ED64705B91144F6 /* req_app */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = req_app; sourceTree = BUILT_PRODUCTS_DIR; };
		857B4BD51648433E98CD97F7 /* test_suite_ecp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ecp; sourceTree = BUILT_PRODUCTS_DIR; };
		8739254C705C41EC953BDBD7 /* dtls_client */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = dtls_client; sourceTree = BUILT_PRODUCTS_DIR; };
		88D6BF8452A045469F483E08 /* test_suite_ecdh.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ecdh.c.rule; path = tests/test_suite_ecdh.c.rule; sourceTree = SOURCE_ROOT; };
		893E7A97DBAC43BA9D017649 /* test_suite_cipher.arc4.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.arc4.c.rule; path = tests/test_suite_cipher.arc4.c.rule; sourceTree = SOURCE_ROOT; };
		89BD3B8C64974D8A8489B166 /* version.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = version.c; path = library/version.c; sourceTree = SOURCE_ROOT; };
		89C1974729534813B40863C8 /* test_suite_cipher.gcm.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.gcm.c; path = tests/test_suite_cipher.gcm.c; sourceTree = SOURCE_ROOT; };
		8A782A54C58942A8AC85C37E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8B090D832D2A4A50A68B2A7F /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; path = CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8B0A47FF666F48BAB7048F1D /* test_suite_aes.cbc.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_aes.cbc.c.rule; path = tests/test_suite_aes.cbc.c.rule; sourceTree = SOURCE_ROOT; };
		8B47A785D93A42D9B1EAD53D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/aes/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8BD743B89BC74FD29FA8D1A9 /* cipher_wrap.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cipher_wrap.c; path = library/cipher_wrap.c; sourceTree = SOURCE_ROOT; };
		8CA3AB11033845F991805631 /* test_suite_x509write.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_x509write.c; path = tests/test_suite_x509write.c; sourceTree = SOURCE_ROOT; };
		8E8B05F77DE94B689A84AD02 /* test_suite_x509write */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_x509write; sourceTree = BUILT_PRODUCTS_DIR; };
		8E9F038A1C344A72BC876521 /* pem2der.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pem2der.c; path = programs/util/pem2der.c; sourceTree = SOURCE_ROOT; };
		8EED0270A4264366A00602E1 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		8F598658032848628FE981AB /* test_suite_debug */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_debug; sourceTree = BUILT_PRODUCTS_DIR; };
		8FE7325E2CC5464E9D9A74A4 /* des.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = des.c; path = library/des.c; sourceTree = SOURCE_ROOT; };
		90B9864468EA40D5B2215B6A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		90CFA0F800E840DD897ABF77 /* test_suite_hmac_drbg.pr.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_hmac_drbg.pr.c; path = tests/test_suite_hmac_drbg.pr.c; sourceTree = SOURCE_ROOT; };
		913E9F4E3DF640129D8F5789 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/x509/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9173F95824784A3D9B3BAACC /* camellia.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = camellia.c; path = library/camellia.c; sourceTree = SOURCE_ROOT; };
		92278562817641DBA8DD8440 /* test_suite_pkcs1_v21.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pkcs1_v21.c; path = tests/test_suite_pkcs1_v21.c; sourceTree = SOURCE_ROOT; };
		9236D5A501404C2DB0226C39 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/x509/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9275F998E689486ABFA46EE1 /* test_suite_cmac.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cmac.c.rule; path = tests/test_suite_cmac.c.rule; sourceTree = SOURCE_ROOT; };
		92A1CDF0EA2F4C21AD4A36A2 /* test_suite_base64 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_base64; sourceTree = BUILT_PRODUCTS_DIR; };
		92C2E905D63840E59025F998 /* pk_decrypt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pk_decrypt.c; path = programs/pkey/pk_decrypt.c; sourceTree = SOURCE_ROOT; };
		9372F75741E04986BCC2351E /* test_suite_dhm.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_dhm.c.rule; path = tests/test_suite_dhm.c.rule; sourceTree = SOURCE_ROOT; };
		9545CBC267604769AC06C2D0 /* test_suite_cipher.arc4 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.arc4; sourceTree = BUILT_PRODUCTS_DIR; };
		9641C903129A4CCEB5B04EF0 /* rsa_decrypt */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_decrypt; sourceTree = BUILT_PRODUCTS_DIR; };
		96C99F95A526495AB35CBC76 /* test_suite_gcm.aes256_de.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.aes256_de.c; path = tests/test_suite_gcm.aes256_de.c; sourceTree = SOURCE_ROOT; };
		9752FFCFA96D4936B62DFBF4 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		97D393A642E54FE1AAFF8913 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		97F26795DA474E11853F4340 /* test_suite_entropy.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_entropy.c.rule; path = tests/test_suite_entropy.c.rule; sourceTree = SOURCE_ROOT; };
		99C743D81F2E444AB5CA94BB /* test_suite_ssl.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ssl.c; path = tests/test_suite_ssl.c; sourceTree = SOURCE_ROOT; };
		9AD0793B8651412C8E65528E /* ssl_client2 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_client2; sourceTree = BUILT_PRODUCTS_DIR; };
		9C2B3ABB711A4A9EAF84E7DB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9CCCE75A3C7B44F78B0CDCFF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9D68D62F2720435C85C1090B /* test_suite_mpi.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_mpi.c.rule; path = tests/test_suite_mpi.c.rule; sourceTree = SOURCE_ROOT; };
		9DF4D2EE8DFC48418E39E18C /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		9F4F1F8999224651AFAFCFEB /* key_app_writer */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = key_app_writer; sourceTree = BUILT_PRODUCTS_DIR; };
		A2FA67B3F9E54A28AC8E58E0 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A3210F69BE054BD280F8EA34 /* test_suite_aes.ecb.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_aes.ecb.c.rule; path = tests/test_suite_aes.ecb.c.rule; sourceTree = SOURCE_ROOT; };
		A35FBA9808E84AF084195AE9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A38D44FE7789437680B7C946 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A45AE58EE34C4795BEB7659D /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A4EC39F49F0D4E3BA16F02CD /* test_suite_gcm.aes128_de */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.aes128_de; sourceTree = BUILT_PRODUCTS_DIR; };
		A5CBB36B560B4F8B8D375DB3 /* dh_client */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = dh_client; sourceTree = BUILT_PRODUCTS_DIR; };
		A6392A55863F4E54B5C05038 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/test/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		A63D1234E807413ABF486397 /* ecdh_curve25519.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecdh_curve25519.c; path = programs/pkey/ecdh_curve25519.c; sourceTree = SOURCE_ROOT; };
		A6BD27825F7343CABCE687E6 /* test_suite_x509parse.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_x509parse.c; path = tests/test_suite_x509parse.c; sourceTree = SOURCE_ROOT; };
		A745B535514B4F39AB64F5FC /* gen_random_havege.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gen_random_havege.c; path = programs/random/gen_random_havege.c; sourceTree = SOURCE_ROOT; };
		A759B47F93BD4F2595FD3AB4 /* test_suite_cipher.null.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.null.c; path = tests/test_suite_cipher.null.c; sourceTree = SOURCE_ROOT; };
		A80EDC134A094301939B5E87 /* crypt_and_hash */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = crypt_and_hash; sourceTree = BUILT_PRODUCTS_DIR; };
		A86B31505C2E4DE7B86C4136 /* test_suite_cipher.null */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.null; sourceTree = BUILT_PRODUCTS_DIR; };
		A962B7CD01794957BA56F43E /* pkcs11.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pkcs11.c; path = library/pkcs11.c; sourceTree = SOURCE_ROOT; };
		A984C21D7D05461EAA67D86B /* test_suite_pkcs1_v15.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pkcs1_v15.c.rule; path = tests/test_suite_pkcs1_v15.c.rule; sourceTree = SOURCE_ROOT; };
		AA6198DE13E34B1190DF27AF /* test_suite_cipher.aes.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.aes.c.rule; path = tests/test_suite_cipher.aes.c.rule; sourceTree = SOURCE_ROOT; };
		AB11A0142B2D490DBE58B748 /* dh_genprime */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = dh_genprime; sourceTree = BUILT_PRODUCTS_DIR; };
		AE4BB3C6097847CFA05A779A /* test_suite_aes.cfb.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_aes.cfb.c.rule; path = tests/test_suite_aes.cfb.c.rule; sourceTree = SOURCE_ROOT; };
		AE646F07AA8D40B28C748C02 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		AEA5F6B8B4C1466B86A90A70 /* test_suite_ctr_drbg */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ctr_drbg; sourceTree = BUILT_PRODUCTS_DIR; };
		AEA60A0BCE6845A1AA0907BA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B00EF9ACCDDA4613AA1B74B2 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B121D9AFEB964C6EBD35FB31 /* pk_verify.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pk_verify.c; path = programs/pkey/pk_verify.c; sourceTree = SOURCE_ROOT; };
		B13542D3C8094DECBBBB0562 /* md2.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = md2.c; path = library/md2.c; sourceTree = SOURCE_ROOT; };
		B1504619C2554201B23D2E32 /* mini_client */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = mini_client; sourceTree = BUILT_PRODUCTS_DIR; };
		B264D6C654F2463B823D02CB /* test_suite_cipher.aes.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.aes.c; path = tests/test_suite_cipher.aes.c; sourceTree = SOURCE_ROOT; };
		B3A15B591ADC4B5292EC14CF /* gen_random_ctr_drbg.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gen_random_ctr_drbg.c; path = programs/random/gen_random_ctr_drbg.c; sourceTree = SOURCE_ROOT; };
		B4061503215A4D5E938199CB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B489F47D3E8D48E18654B91E /* aescrypt2.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = aescrypt2.c; path = programs/aes/aescrypt2.c; sourceTree = SOURCE_ROOT; };
		B5E6E69C822942AE94467C79 /* test_suite_hmac_drbg.nopr.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_hmac_drbg.nopr.c.rule; path = tests/test_suite_hmac_drbg.nopr.c.rule; sourceTree = SOURCE_ROOT; };
		B6B34A0FE3D54565935208AD /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B8299D6AD1C04901A46D391A /* test_suite_ecp.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ecp.c; path = tests/test_suite_ecp.c; sourceTree = SOURCE_ROOT; };
		B8F4216717844993BCC349E4 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		B96FC8A398884DB2906E1BA2 /* cert_write.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cert_write.c; path = programs/x509/cert_write.c; sourceTree = SOURCE_ROOT; };
		BA80607E2767416EA4D8345F /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BA9861C3154B4CDD93165A99 /* key_app_writer.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = key_app_writer.c; path = programs/pkey/key_app_writer.c; sourceTree = SOURCE_ROOT; };
		BABA168978CD490187ECA1DD /* rsa_decrypt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_decrypt.c; path = programs/pkey/rsa_decrypt.c; sourceTree = SOURCE_ROOT; };
		BAD6D6ABBC7E4FA68F13DE69 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BB4C1FAA578748CB8EBE57AD /* test_suite_arc4.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_arc4.c; path = tests/test_suite_arc4.c; sourceTree = SOURCE_ROOT; };
		BB5BD0F2C665423A92B0605D /* test_suite_mpi */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_mpi; sourceTree = BUILT_PRODUCTS_DIR; };
		BC4AEFC904D54A509E06CEEE /* test_suite_cipher.null.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.null.c.rule; path = tests/test_suite_cipher.null.c.rule; sourceTree = SOURCE_ROOT; };
		BC5F90F7C2FA49B181D4892B /* test_suite_ecdh */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ecdh; sourceTree = BUILT_PRODUCTS_DIR; };
		BD05F7A9D0C24372BBBCA71F /* ssl_fork_server */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_fork_server; sourceTree = BUILT_PRODUCTS_DIR; };
		BE231EF54C354ECAB32BE27C /* ecdsa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecdsa.c; path = library/ecdsa.c; sourceTree = SOURCE_ROOT; };
		BE731BA7F98F4666959A4A0C /* libmbedtls.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libmbedtls.a; sourceTree = BUILT_PRODUCTS_DIR; };
		BE8300EA8FF34BF6A8F5EED0 /* test_suite_debug.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_debug.c; path = tests/test_suite_debug.c; sourceTree = SOURCE_ROOT; };
		BEC43F76000A496A8F43AC46 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/test/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		BEFBEC684C4B4D709E621AF9 /* test_suite_pkcs1_v15 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pkcs1_v15; sourceTree = BUILT_PRODUCTS_DIR; };
		BF242220E5EC46878534A33C /* gen_entropy */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gen_entropy; sourceTree = BUILT_PRODUCTS_DIR; };
		BFB53343ED584C83911BD995 /* test_suite_des.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_des.c; path = tests/test_suite_des.c; sourceTree = SOURCE_ROOT; };
		BFC277AE6B524CCFB4BB8B3D /* sha1.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = sha1.c; path = library/sha1.c; sourceTree = SOURCE_ROOT; };
		C230E5B68BED49FB8216E229 /* test_suite_pkwrite.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pkwrite.c; path = tests/test_suite_pkwrite.c; sourceTree = SOURCE_ROOT; };
		C2668D410D0442968C772B63 /* test_suite_cipher.ccm.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.ccm.c.rule; path = tests/test_suite_cipher.ccm.c.rule; sourceTree = SOURCE_ROOT; };
		C392103CA09444BC946AF408 /* test_suite_gcm.aes192_en */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.aes192_en; sourceTree = BUILT_PRODUCTS_DIR; };
		C39FD3F73CCC4B10B8913812 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C42BC014602B4B26BFB4B247 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C490CCDC7CD44416A2D23046 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C53117138DFB44938B068173 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C5AA747F1D544E968202EFCB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C6B8ADAC38F04FE3A09F92FD /* test_suite_camellia */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_camellia; sourceTree = BUILT_PRODUCTS_DIR; };
		C74A57502C8148D4997DC04A /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/util/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		C7F3CD3DC53F4161B42193C6 /* test_suite_base64.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_base64.c.rule; path = tests/test_suite_base64.c.rule; sourceTree = SOURCE_ROOT; };
		C839FD9BE6CD4ADCBE5921BB /* test_suite_ecdsa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_ecdsa.c; path = tests/test_suite_ecdsa.c; sourceTree = SOURCE_ROOT; };
		C8D7D0CDF95F4F0EA6BF6D47 /* aescrypt2 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = aescrypt2; sourceTree = BUILT_PRODUCTS_DIR; };
		C8EED22F4815436BB526BADE /* bignum.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = bignum.c; path = library/bignum.c; sourceTree = SOURCE_ROOT; };
		C9718DEFE1F143E48561B017 /* rsa_genkey.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_genkey.c; path = programs/pkey/rsa_genkey.c; sourceTree = SOURCE_ROOT; };
		CA05408D51464B648A1BAEBF /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		CB28AAF3D3FB4CE9AC34578E /* test_suite_des */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_des; sourceTree = BUILT_PRODUCTS_DIR; };
		CBA3408ABC6B45ADAFF6DCA7 /* cert_app.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cert_app.c; path = programs/x509/cert_app.c; sourceTree = SOURCE_ROOT; };
		CE8BAB2F35CB4232A46D894C /* test_suite_gcm.aes192_en.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.aes192_en.c; path = tests/test_suite_gcm.aes192_en.c; sourceTree = SOURCE_ROOT; };
		CEC4E9E10B1A4AF4BE4F3B29 /* test_suite_aes.rest.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_aes.rest.c.rule; path = tests/test_suite_aes.rest.c.rule; sourceTree = SOURCE_ROOT; };
		CF02209F242B4844BD6742FA /* ecdh.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecdh.c; path = library/ecdh.c; sourceTree = SOURCE_ROOT; };
		CF09B348D8CC425390BE4060 /* ecdsa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ecdsa.c; path = programs/pkey/ecdsa.c; sourceTree = SOURCE_ROOT; };
		CF8062C79A25423494C2333B /* test_suite_cipher.gcm */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_cipher.gcm; sourceTree = BUILT_PRODUCTS_DIR; };
		D05065F3EC324E2E860F493E /* test_suite_aes.cfb */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_aes.cfb; sourceTree = BUILT_PRODUCTS_DIR; };
		D09683AA22094191992BC7B5 /* rsa.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa.c; path = library/rsa.c; sourceTree = SOURCE_ROOT; };
		D1027CAF6D4741F793F611B4 /* test_suite_blowfish.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_blowfish.c.rule; path = tests/test_suite_blowfish.c.rule; sourceTree = SOURCE_ROOT; };
		D1273332224448EC8736E180 /* pk_verify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = pk_verify; sourceTree = BUILT_PRODUCTS_DIR; };
		D153E5E466D74EA19222BD6A /* test_suite_hmac_drbg.misc.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_hmac_drbg.misc.c; path = tests/test_suite_hmac_drbg.misc.c; sourceTree = SOURCE_ROOT; };
		D2384EC4BBF14B328859F6AF /* test_suite_version */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_version; sourceTree = BUILT_PRODUCTS_DIR; };
		D2E19F32242B4BABA4CDE56B /* rsa_sign.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_sign.c; path = programs/pkey/rsa_sign.c; sourceTree = SOURCE_ROOT; };
		D2F1BEBAD8A74A519ED34066 /* test_suite_gcm.camellia.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.camellia.c.rule; path = tests/test_suite_gcm.camellia.c.rule; sourceTree = SOURCE_ROOT; };
		D33561BA01D14518B93FDA4E /* dh_server.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = dh_server.c; path = programs/pkey/dh_server.c; sourceTree = SOURCE_ROOT; };
		D46D2426938E4978BF9B30AA /* test_suite_blowfish.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_blowfish.c; path = tests/test_suite_blowfish.c; sourceTree = SOURCE_ROOT; };
		D4733F79E9294E2487D0D955 /* ssl_client2.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_client2.c; path = programs/ssl/ssl_client2.c; sourceTree = SOURCE_ROOT; };
		D4A2D44DF6504B49B71C8C9A /* ssl_server2.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_server2.c; path = programs/ssl/ssl_server2.c; sourceTree = SOURCE_ROOT; };
		D4AD98F4EA0C4240A0270B4D /* test_suite_md */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_md; sourceTree = BUILT_PRODUCTS_DIR; };
		D4FF13E1632449609634BEAA /* test_suite_x509parse.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_x509parse.c.rule; path = tests/test_suite_x509parse.c.rule; sourceTree = SOURCE_ROOT; };
		D57F290263D74DE383872099 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		D67E6AE9C1B84DC5943D8816 /* test_suite_asn1write.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_asn1write.c; path = tests/test_suite_asn1write.c; sourceTree = SOURCE_ROOT; };
		D706A0FED6464D4986336D0B /* test_suite_gcm.camellia */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_gcm.camellia; sourceTree = BUILT_PRODUCTS_DIR; };
		D784B627EC2644779B4A5240 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		D7C78C244F054270AAA7F29C /* crl_app */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = crl_app; sourceTree = BUILT_PRODUCTS_DIR; };
		D99B8609C718414299CE5B8D /* mpi_demo.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = mpi_demo.c; path = programs/pkey/mpi_demo.c; sourceTree = SOURCE_ROOT; };
		DAC57457DE0C4D38AD8A319C /* x509write_csr.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509write_csr.c; path = library/x509write_csr.c; sourceTree = SOURCE_ROOT; };
		DACFB279BB0B4882826D09B8 /* havege.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = havege.c; path = library/havege.c; sourceTree = SOURCE_ROOT; };
		DAE2FC131FC14FE8B6EEEA7F /* blowfish.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = blowfish.c; path = library/blowfish.c; sourceTree = SOURCE_ROOT; };
		DB42C3E289CC43F693ADDDCB /* test_suite_camellia.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_camellia.c.rule; path = tests/test_suite_camellia.c.rule; sourceTree = SOURCE_ROOT; };
		DCD8BC4A63F24CFAB059B6DD /* test_suite_pem */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_pem; sourceTree = BUILT_PRODUCTS_DIR; };
		DCDAC1486AA74AF6AEB7E3D4 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/x509/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		DCF8932662D542C2BEA108B1 /* rsa_genkey */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = rsa_genkey; sourceTree = BUILT_PRODUCTS_DIR; };
		DDC70146D6334AD39279A9E9 /* pk_sign.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pk_sign.c; path = programs/pkey/pk_sign.c; sourceTree = SOURCE_ROOT; };
		DDF78BC7997C4C8EAD0B07C2 /* ctr_drbg.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ctr_drbg.c; path = library/ctr_drbg.c; sourceTree = SOURCE_ROOT; };
		DEE5A130E1FF4067AEABBDC5 /* cert_req.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cert_req.c; path = programs/x509/cert_req.c; sourceTree = SOURCE_ROOT; };
		DEEF9639FEE744CE9DD72EBC /* test_suite_cipher.blowfish.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.blowfish.c.rule; path = tests/test_suite_cipher.blowfish.c.rule; sourceTree = SOURCE_ROOT; };
		DF262E4598DF48DDA3FDD66F /* dtls_server */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = dtls_server; sourceTree = BUILT_PRODUCTS_DIR; };
		DF9902C385F04F4DA4B77988 /* test_suite_error.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_error.c.rule; path = tests/test_suite_error.c.rule; sourceTree = SOURCE_ROOT; };
		DF9A11E52C024E9199A182BB /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E010FAACB7F74ABBB853C9DB /* dtls_server.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = dtls_server.c; path = programs/ssl/dtls_server.c; sourceTree = SOURCE_ROOT; };
		E08561AE268B4AC6B967F01B /* hello.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = hello.c; path = programs/hash/hello.c; sourceTree = SOURCE_ROOT; };
		E13E892F63CA49ED98243495 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E1D87D32F3984DDBBA13EA3C /* gen_entropy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = gen_entropy.c; path = programs/random/gen_entropy.c; sourceTree = SOURCE_ROOT; };
		E22B9BAC736046A7B83A54C6 /* pk_decrypt */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = pk_decrypt; sourceTree = BUILT_PRODUCTS_DIR; };
		E25586197DB841F196952F75 /* pk_encrypt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pk_encrypt.c; path = programs/pkey/pk_encrypt.c; sourceTree = SOURCE_ROOT; };
		E2787AA2141047ADAB8CEC86 /* pkwrite.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = pkwrite.c; path = library/pkwrite.c; sourceTree = SOURCE_ROOT; };
		E505F45CD5024DCA92E9E0D6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E51D3AC0B74444B28ED5E1B9 /* gen_random_havege */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gen_random_havege; sourceTree = BUILT_PRODUCTS_DIR; };
		E5B9FDB369814CE7BBDB3BAE /* test_suite_cipher.blowfish.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_cipher.blowfish.c; path = tests/test_suite_cipher.blowfish.c; sourceTree = SOURCE_ROOT; };
		E615503AECEE412AA9B32C08 /* test_suite_base64.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_base64.c; path = tests/test_suite_base64.c; sourceTree = SOURCE_ROOT; };
		E6665647B703442395F00631 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E6C7B5F63E1748FD89902A25 /* test_suite_gcm.camellia.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.camellia.c; path = tests/test_suite_gcm.camellia.c; sourceTree = SOURCE_ROOT; };
		E777F5172CE64DAE89DAEE6E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E77F0B840CC34639A00394D0 /* rsa_verify_pss.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_verify_pss.c; path = programs/pkey/rsa_verify_pss.c; sourceTree = SOURCE_ROOT; };
		E7B7FC4568EA4B67AD32FFAD /* crypt_and_hash.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = crypt_and_hash.c; path = programs/aes/crypt_and_hash.c; sourceTree = SOURCE_ROOT; };
		E82D9B16CB9C4D79ADD6EEAA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/random/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E91CBAD65F9A4384B2899192 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/x509/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E9709B97A62D4F3285F8E39E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		E975809893BA4D39BA6852DA /* rsa_encrypt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = rsa_encrypt.c; path = programs/pkey/rsa_encrypt.c; sourceTree = SOURCE_ROOT; };
		E9A88C920AFD46C2BBD7621F /* test_suite_version.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_version.c.rule; path = tests/test_suite_version.c.rule; sourceTree = SOURCE_ROOT; };
		E9B2A9925E6149959B763CE7 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EA45AF5B328F425D8D9D3440 /* test_suite_pk.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pk.c; path = tests/test_suite_pk.c; sourceTree = SOURCE_ROOT; };
		EA999AABDE9240A6A2183580 /* libmbedx509.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = libmbedx509.a; sourceTree = BUILT_PRODUCTS_DIR; };
		EAB4AB7197E244ABB7A63522 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/test/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		EB94DAA1A32E40DB9FB140AC /* ssl_srv.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_srv.c; path = library/ssl_srv.c; sourceTree = SOURCE_ROOT; };
		ED1215FE0E4146D7810033D6 /* test_suite_x509parse */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_x509parse; sourceTree = BUILT_PRODUCTS_DIR; };
		EDF614D2A6BC460BB78FF7A4 /* hmac_drbg.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = hmac_drbg.c; path = library/hmac_drbg.c; sourceTree = SOURCE_ROOT; };
		EE48F8DBFC21411A93307CDA /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F07694D9718F404DAB0973D6 /* test_suite_gcm.aes256_de.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_gcm.aes256_de.c.rule; path = tests/test_suite_gcm.aes256_de.c.rule; sourceTree = SOURCE_ROOT; };
		F091B18C7297400DB979D80F /* test_suite_cipher.padding.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_cipher.padding.c.rule; path = tests/test_suite_cipher.padding.c.rule; sourceTree = SOURCE_ROOT; };
		F1D61712C1A84958A3FF587C /* test_suite_hmac_drbg.nopr.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_hmac_drbg.nopr.c; path = tests/test_suite_hmac_drbg.nopr.c; sourceTree = SOURCE_ROOT; };
		F1FBD5A2BAD44C229E5C6790 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/ssl/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F2AFA1A52E784E708EE54679 /* threading.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = threading.c; path = library/threading.c; sourceTree = SOURCE_ROOT; };
		F332B0B1BD5C4CE4BBEDFAC2 /* ssl_cli.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_cli.c; path = library/ssl_cli.c; sourceTree = SOURCE_ROOT; };
		F33B4AF854564CA898D38500 /* test_suite_mdx.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_mdx.c; path = tests/test_suite_mdx.c; sourceTree = SOURCE_ROOT; };
		F3569D77C472426DA333E13E /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F3674A80649F40CE8E4E4FBC /* timing.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = timing.c; path = library/timing.c; sourceTree = SOURCE_ROOT; };
		F47A24396B324D5EB1CF5CD6 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F5E2E15B9BA64F57BC8AC25B /* test_suite_entropy.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_entropy.c; path = tests/test_suite_entropy.c; sourceTree = SOURCE_ROOT; };
		F60EF4F9E17E4C36B0F16516 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F73A9A6200E140AE8D032B89 /* test_suite_gcm.aes192_de.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_gcm.aes192_de.c; path = tests/test_suite_gcm.aes192_de.c; sourceTree = SOURCE_ROOT; };
		F7F9F080C7E7403383450439 /* test_suite_pkcs1_v15.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_pkcs1_v15.c; path = tests/test_suite_pkcs1_v15.c; sourceTree = SOURCE_ROOT; };
		F81EC4853BAF4A4C85425292 /* test_suite_pk.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_pk.c.rule; path = tests/test_suite_pk.c.rule; sourceTree = SOURCE_ROOT; };
		F95F6952407B4D74A654A39B /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		F9F14DEBB98C4FC18BFD481E /* ssl_client1.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_client1.c; path = programs/ssl/ssl_client1.c; sourceTree = SOURCE_ROOT; };
		FA4D4B6548CB4FFF88996E63 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = programs/pkey/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FAD44B45F0214DF6A18D80A2 /* test_suite_ssl */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_ssl; sourceTree = BUILT_PRODUCTS_DIR; };
		FB2621E1D8C140D9A8939829 /* strerror */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = strerror; sourceTree = BUILT_PRODUCTS_DIR; };
		FB42159E68B341EF919E88F9 /* CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = sourcecode.text; fileEncoding = 4; lastKnownFileType = text; name = CMakeLists.txt; path = tests/CMakeLists.txt; sourceTree = SOURCE_ROOT; };
		FBC3DA9CD3934752A00B10B9 /* test_suite_shax */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_shax; sourceTree = BUILT_PRODUCTS_DIR; };
		FBCF8B9CB7F04150A0113F69 /* ssl_server.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = ssl_server.c; path = programs/ssl/ssl_server.c; sourceTree = SOURCE_ROOT; };
		FCCB79A24A0F40478AB4184A /* test_suite_hmac_drbg.pr.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_hmac_drbg.pr.c.rule; path = tests/test_suite_hmac_drbg.pr.c.rule; sourceTree = SOURCE_ROOT; };
		FD05B156EE1B46568C811AB3 /* x509_crl.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509_crl.c; path = library/x509_crl.c; sourceTree = SOURCE_ROOT; };
		FD1E7E2C5F0F4A7282DE3F71 /* test_suite_hmac_drbg.misc */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = test_suite_hmac_drbg.misc; sourceTree = BUILT_PRODUCTS_DIR; };
		FD96FE1A408D4426A3210750 /* x509_crt.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = x509_crt.c; path = library/x509_crt.c; sourceTree = SOURCE_ROOT; };
		FE160F16976A4F81B4AC3F55 /* cipher.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = cipher.c; path = library/cipher.c; sourceTree = SOURCE_ROOT; };
		FE883A843A2E4E9CBF723D8C /* aes.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = aes.c; path = library/aes.c; sourceTree = SOURCE_ROOT; };
		FED708B261DC4AC88285A558 /* test_suite_ssl.c.rule */ = {isa = PBXFileReference; explicitFileType = default; fileEncoding = 4; lastKnownFileType = file; name = test_suite_ssl.c.rule; path = tests/test_suite_ssl.c.rule; sourceTree = SOURCE_ROOT; };
		FF698AE74E034FE79A6E06F0 /* ssl_client1 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = ssl_client1; sourceTree = BUILT_PRODUCTS_DIR; };
		FF769728FEF24E7F9E831C7F /* test_suite_xtea.c */ = {isa = PBXFileReference; explicitFileType = sourcecode.c.c; fileEncoding = 4; name = test_suite_xtea.c; path = tests/test_suite_xtea.c; sourceTree = SOURCE_ROOT; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		028B1DF3AAD34B91B30ED5B4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		05ADB4BD01EA4CFA84204C6E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0C77761556BB454EBF75AE31 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0E47531B2CE7436F95AF4333 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0FC0E1A1BDA248ABBDBC165D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		107A40D1C27F49C49B9DC1EC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		10943DC53B564B1B8409330A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		12BE50B319444B229A0069D5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13E191A6A3E94A9F9DC2BF02 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		17F59F589AA84485B7EA6A1B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		18F39D6D483545F4800DF3B4 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1A7DAB313D8747C5B7310DC2 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1B92A3EDC562441B8718394F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1FBD22BE23CE4E1CBA9BE284 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		207F5380899244BA959DE8F8 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		231705C03D8749748ADE3A19 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		277843CC1B1F42BEAD0557C0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		27F11DB1015347EDB291A327 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		288C1600F8B34EA89A8D8933 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		29B40D5AC3764C809270137B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A5625CA844D466D8A504971 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2E0AF20D45BC42BAB21DFB61 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		30D3E9170E1F42A4B5061335 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		315F805A58D349BA84B413A7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		330FF00356DF45AEAB09E4B0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3648A1020B8C442E80C26126 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		372F64B02555486DB9786FD7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3B83EFFC81D44CFC92DBB314 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3C21AD29A3EB4C2D8398C75A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3EE64FF93B734D108B739827 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		42E445EE78904371AB19F2B0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4336644EE2DC428AB18505D6 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		461DF4435BE24F8BBF4BBA3D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4ACFEB97FFEA4E388371BA23 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		54F65F03DED842BA9AAC37C3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		552B0FF1E83E456C86A4A895 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		557430B6048047648C1E5BA3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		56760582E81F4E7B87E15737 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		59CE1A3CA40F496BAD19A22C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		5D884E1DA82F4E44BA3CA118 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62B76A5EC8FE4DE5830DABB0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6CFBD6D0C3744F60A468DC8C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6DAE575D695542AEAA120906 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6E7391FB7EA34FCB9712D8ED /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6E8DFBD63EB94AF0A49E164D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6FF0439CE1024D1D9EBBBCE9 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		757CBC714B9A45C2B38C6823 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7587FD20E55E47B0BFE88A4C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		77D81DB4D7FD4E58A0845BC0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7B9F06CA2EA3411DBDABB933 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		805B2F7F84FF469680C4BF26 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		81EA23687E2243D2919BE63E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8546AA77A68047B2AAF3585F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8A998D5D563246FA8C78232A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8AFE174CCB0B4323892ABB4C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8CB1E6BC3C7648B2AAEFD164 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		976FBB9105C5438DBBFF032E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		97FDEF131BE04C099245EAB0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9B19F03BBFA840ECAB161467 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9BB92BE02DB14023B3A57114 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9BFE238955074105B270B3E8 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9D917BE79B6C42F5A2644889 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9D97FE073D7047B990FC6342 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A1C0CE68D3EF480BAE4303D3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A43974F2BF5D4C72843F8224 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A71ED211C3EE449E821D665F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A8E2B9ACB44D43C2A78DE48C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		ACCE15EFF86940ACB0B0F154 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AFC25046CD5E4FB4985D19EE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B40C5DC759EB4DD994E4D807 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B6581928B9394A6AA80D5A8E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BBDD2681BDFA42788C492E0F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BCEC3B81F6D949AAA492938E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BD5F717DE86146ADA603BCDC /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BED748079EDC4B998064265F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BEDFA5A5CFB44A78A1D7DE13 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BFB1F4B753AB44C6BF44E575 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C11D0EEA22E74E4BAE3F6879 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C2698C79549E49C1BC89CAD7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C27E1934879F44B5924DB68C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C61CB307C26C4D1DA33A675A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C70EEFECD2184486A8294BB3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C7176BBBEE88456A9E86630C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CF6221D9BB2147C58F9176C3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D046EFCE7DE941FABD8A7A55 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D0E4E2E36C1A455A853D9B24 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D25A955308EA419E9C08325A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D2F22805E8194EE8A625E3AB /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D544AFCD1743491C853CE58F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D9486254CCB8464D8BC5297F /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DB1733559C8D4DB995B96160 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DB509135E75B4C22BDD3D17E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DC5A31771849401698791BD3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E092FB90664449FFBFBFEFFD /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E1580B6BE6E547EEA5EEDFE3 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E17179DAD4374F51B92903FF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E26A470B3C5C4E4D88C25E4C /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E7A162F4872C4CD9BD8CC718 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		ECB0AB78C72B4F85957828E5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EEEE4854B8B0498299BEB50E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EF28C28E57864861A3EADE0A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F12BBE2085B6458289FAF369 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F22839239A674E11B6932C08 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F320AD785FC546B3ABF3B355 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F65D96A94191403395EF5633 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F7580FA78D1747D1B9A96482 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F7EF1F89101B4D3DA8B7CBB0 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F9FA21B6AE7D4006A6F59CEE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FACB8DDC1161449786F3BBBE /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FBC4EFD4CBB34355BBF3B7A8 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FC32EEA44F3348669DF14BA1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00396A75D3BA415980DFD532 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				6BB8D955F31C43288FED1941 /* test_suite_ctr_drbg.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		00BD998B8D8E4A2AA86BF05D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A90F600B1AE4496934782C9 /* dtls_client.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		00E8B1C9E9C64F6CAFC168E2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E5B9FDB369814CE7BBDB3BAE /* test_suite_cipher.blowfish.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		02468E7F1A1F449681231912 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E1D87D32F3984DDBBA13EA3C /* gen_entropy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		03255C8E838547779A72D265 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				5C510F9E04814B2F9FA24D39 /* ssl_mail_client.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0417708939454D2F9F03971B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				92278562817641DBA8DD8440 /* test_suite_pkcs1_v21.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0445EE0D5181457E9FA79090 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E975809893BA4D39BA6852DA /* rsa_encrypt.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0489588708A34641A484B75C /* ssl_fork_server */ = {
			isa = PBXGroup;
			children = (
				C3E005460662425DB84CF53E /* Source Files */,
				1B57125971454F01ADF99C80 /* CMakeLists.txt */,
			);
			name = ssl_fork_server;
			sourceTree = "<group>";
		};
		053A53C9E67843778AC590D6 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				230D5B9AD9C3421A83E124EA /* test_suite_ecjpake.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		0572A0E528624BD685A856D3 /* rsa_decrypt */ = {
			isa = PBXGroup;
			children = (
				0C42FE8335734E1E8FE41AE6 /* Source Files */,
				074D65A906744879993BF1E9 /* CMakeLists.txt */,
			);
			name = rsa_decrypt;
			sourceTree = "<group>";
		};
		057F3B2842DF427482736213 /* dh_client */ = {
			isa = PBXGroup;
			children = (
				BFC414C8D6BC4693B894F160 /* Source Files */,
				D57F290263D74DE383872099 /* CMakeLists.txt */,
			);
			name = dh_client;
			sourceTree = "<group>";
		};
		06112483551744DA9D296127 /* test_suite_hmac_drbg.no_reseed */ = {
			isa = PBXGroup;
			children = (
				D126E76D428444239D74B9B6 /* Source Files */,
				57D4CD35DDA64E4B9C1732B7 /* CMake Rules */,
				80F551A0145C490BA9266982 /* CMakeLists.txt */,
			);
			name = test_suite_hmac_drbg.no_reseed;
			sourceTree = "<group>";
		};
		061E53ED3F874AC6B324254C /* test_suite_shax */ = {
			isa = PBXGroup;
			children = (
				5402E54031094B189524FD05 /* Source Files */,
				E2B97E9B86B6445A9E64D515 /* CMake Rules */,
				5016B21E925E4F289AEFE662 /* CMakeLists.txt */,
			);
			name = test_suite_shax;
			sourceTree = "<group>";
		};
		06349C9B590A45F7929D4CFB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D99B8609C718414299CE5B8D /* mpi_demo.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0642E51E2CC64E599E20AFD0 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				FED708B261DC4AC88285A558 /* test_suite_ssl.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		079D9422342C4D7FA5CA3BBB /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				AA6198DE13E34B1190DF27AF /* test_suite_cipher.aes.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		07F0F64775A84C0DA8398744 /* test_suite_gcm.aes192_de */ = {
			isa = PBXGroup;
			children = (
				D0058EB18AF94A02B4E83631 /* Source Files */,
				832C9F04F9774E81B27897FA /* CMake Rules */,
				9C2B3ABB711A4A9EAF84E7DB /* CMakeLists.txt */,
			);
			name = test_suite_gcm.aes192_de;
			sourceTree = "<group>";
		};
		086952B5167D40569E77F37D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				06B0DD40F01C4A76A51B47E2 /* generic_sum.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0A58506AFE754DAE989CD0FC /* cert_app */ = {
			isa = PBXGroup;
			children = (
				C03EDAD4308245D9A90D2BA5 /* Source Files */,
				5ABB25E80CA944CD9BB2BB39 /* CMakeLists.txt */,
			);
			name = cert_app;
			sourceTree = "<group>";
		};
		0AA00B0A614A4281BA9FCA62 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F7F9F080C7E7403383450439 /* test_suite_pkcs1_v15.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0AFDFF90010D4773A55DF7FB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				92C2E905D63840E59025F998 /* pk_decrypt.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0B06C4ED87BE4608B98D8B9C /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				D2F1BEBAD8A74A519ED34066 /* test_suite_gcm.camellia.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		0B3F64FAF3BB468C9576475B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				DDC70146D6334AD39279A9E9 /* pk_sign.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0BA33C14FD774906A68229B7 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2FB528091B8F4572AB3BA684 /* test_suite_gcm.aes128_en.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0C2C2C98FED14CBEBFE1417B /* test_suite_ctr_drbg */ = {
			isa = PBXGroup;
			children = (
				00396A75D3BA415980DFD532 /* Source Files */,
				B975E1F4724D41FD8F99F060 /* CMake Rules */,
				97D393A642E54FE1AAFF8913 /* CMakeLists.txt */,
			);
			name = test_suite_ctr_drbg;
			sourceTree = "<group>";
		};
		0C42FE8335734E1E8FE41AE6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BABA168978CD490187ECA1DD /* rsa_decrypt.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0CD8CA3E231A47BFBB81BFCB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BFB53343ED584C83911BD995 /* test_suite_des.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0D2FBD9F5361403F803230CB /* crl_app */ = {
			isa = PBXGroup;
			children = (
				AA096B0CC83342CD8BBDA727 /* Source Files */,
				913E9F4E3DF640129D8F5789 /* CMakeLists.txt */,
			);
			name = crl_app;
			sourceTree = "<group>";
		};
		0DF2E31BC5224266B540D719 /* test_suite_timing */ = {
			isa = PBXGroup;
			children = (
				9FC34899F52A4D1399A95B97 /* Source Files */,
				4230CC8BA7C940FD99ABE22A /* CMake Rules */,
				F95F6952407B4D74A654A39B /* CMakeLists.txt */,
			);
			name = test_suite_timing;
			sourceTree = "<group>";
		};
		0E2F690315654970A9DAD87F /* test_suite_ccm */ = {
			isa = PBXGroup;
			children = (
				DB18331B76AF4804B6B94EEC /* Source Files */,
				5EDE0229C6B2471A9949F15E /* CMake Rules */,
				F3569D77C472426DA333E13E /* CMakeLists.txt */,
			);
			name = test_suite_ccm;
			sourceTree = "<group>";
		};
		0E417488EE9C428785ADB309 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				74977C1423AB48AFAA77A6A5 /* test_suite_cmac.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0E83B7B47A0846339788A496 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A6BD27825F7343CABCE687E6 /* test_suite_x509parse.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0F0B0CBC24E44D5C809D52A6 /* Resources */ = {
			isa = PBXGroup;
			children = (
			);
			name = Resources;
			sourceTree = "<group>";
		};
		0F6CA2BCECAD45639400EC11 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				36B949913B1747F6ADB62732 /* test_suite_cipher.arc4.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		0FAA9D30A67B46B38C3E2954 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E6C7B5F63E1748FD89902A25 /* test_suite_gcm.camellia.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1014631607184B48937C4298 /* generic_sum */ = {
			isa = PBXGroup;
			children = (
				086952B5167D40569E77F37D /* Source Files */,
				7DCB9D9DD2B94AFC80960C66 /* CMakeLists.txt */,
			);
			name = generic_sum;
			sourceTree = "<group>";
		};
		109AC6F27C9A4719B2F5175A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B489F47D3E8D48E18654B91E /* aescrypt2.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		10B0956645EA426CB0D66E58 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				FCCB79A24A0F40478AB4184A /* test_suite_hmac_drbg.pr.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		148C8E24048147F9A4E605F1 /* lib */ = {
			isa = PBXGroup;
			children = (
				DC0B08D503F448138FDEA07F /* CMake Rules */,
				8302DB73B7A141F89BDEC65E /* CMakeLists.txt */,
			);
			name = lib;
			sourceTree = "<group>";
		};
		14F693F01BA04FFD8D3ED57A /* test_suite_aes.cfb */ = {
			isa = PBXGroup;
			children = (
				DB7D11FD16B24B208624885A /* Source Files */,
				776E9DA2AFCF4BBCB547AAAB /* CMake Rules */,
				90B9864468EA40D5B2215B6A /* CMakeLists.txt */,
			);
			name = test_suite_aes.cfb;
			sourceTree = "<group>";
		};
		1509569D442E4A12BF42F5F7 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4B148F57F0A244C78C616A0D /* rsa_verify.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1539B5CE17B9484880C480AC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				693C86663D294627A85BE9C9 /* test_suite_aes.cbc.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		15A9B80D0F52463BA81F79B1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A63D1234E807413ABF486397 /* ecdh_curve25519.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		15F6C59C21DC4E6F8EDF37D3 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BE8300EA8FF34BF6A8F5EED0 /* test_suite_debug.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		18F3C4E3C7E241FAA1EAD3DF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B121D9AFEB964C6EBD35FB31 /* pk_verify.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		19861AB09FE94F03AC8F3163 /* test_suite_pkcs1_v21 */ = {
			isa = PBXGroup;
			children = (
				0417708939454D2F9F03971B /* Source Files */,
				C715A1D53DA24D41B68BE30A /* CMake Rules */,
				3128F428FE5640AA98FF16B8 /* CMakeLists.txt */,
			);
			name = test_suite_pkcs1_v21;
			sourceTree = "<group>";
		};
		19CEF7A03B1947BDA655167D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				69796EE957834EF79A2CBDE0 /* gen_key.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		1AD6D6739BDC4319A30458D9 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1D788E53866F414AA59CFA6D /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				4336ABC619C04C6F98514461 /* test_suite_des.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		1EC67BFBB3DC42508731CB84 /* test_suite_cipher.arc4 */ = {
			isa = PBXGroup;
			children = (
				0F6CA2BCECAD45639400EC11 /* Source Files */,
				C09E45D490B642C68B97D86B /* CMake Rules */,
				8EED0270A4264366A00602E1 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.arc4;
			sourceTree = "<group>";
		};
		1F6BC379480A453A9BE022D3 /* apidoc */ = {
			isa = PBXGroup;
			children = (
				5476106BE92E47F3A2C23E7E /* CMake Rules */,
				2F5A529666364AB6A9731F88 /* CMakeLists.txt */,
			);
			name = apidoc;
			sourceTree = "<group>";
		};
		1FD14EE2DAEC4AE8839C5C49 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		2031332511FC467D84337ABD /* test_suite_rsa */ = {
			isa = PBXGroup;
			children = (
				A7C0AAEE440446CC8066CEBF /* Source Files */,
				93C7830FCAA14D9BB8C54787 /* CMake Rules */,
				441B2C62D590451991479476 /* CMakeLists.txt */,
			);
			name = test_suite_rsa;
			sourceTree = "<group>";
		};
		211F73AF5C2146A6A39A644D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C9718DEFE1F143E48561B017 /* rsa_genkey.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		214B699E96494E5B84AFC18A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				8B0A47FF666F48BAB7048F1D /* test_suite_aes.cbc.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		26060771B3E04A3AA77B60F1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C839FD9BE6CD4ADCBE5921BB /* test_suite_ecdsa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		271DD06023124066B8DA67B0 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				3B9589614CA84E028AF00E99 /* test_suite_memory_buffer_alloc.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2748634F062A4BDFBA54B8F2 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				07CAE57BEED94E49B1E6D4D5 /* test_suite_cipher.des.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		284802BE8DC14CA4BE95F32F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FBCF8B9CB7F04150A0113F69 /* ssl_server.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		2902C9F1BE0B4F44AF5468FB /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				D4FF13E1632449609634BEAA /* test_suite_x509parse.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2B0362FADA464220B3A8E771 /* pk_decrypt */ = {
			isa = PBXGroup;
			children = (
				0AFDFF90010D4773A55DF7FB /* Source Files */,
				B8F4216717844993BCC349E4 /* CMakeLists.txt */,
			);
			name = pk_decrypt;
			sourceTree = "<group>";
		};
		2B98140DBD0E4099AB8C10AF /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				D1027CAF6D4741F793F611B4 /* test_suite_blowfish.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		2C21FE90498C4D9DAD308D3E /* pk_sign */ = {
			isa = PBXGroup;
			children = (
				0B3F64FAF3BB468C9576475B /* Source Files */,
				B4061503215A4D5E938199CB /* CMakeLists.txt */,
			);
			name = pk_sign;
			sourceTree = "<group>";
		};
		2C97775B0B4B44AA98633079 /* gen_random_ctr_drbg */ = {
			isa = PBXGroup;
			children = (
				71AAFC60D766484391248DEB /* Source Files */,
				E82D9B16CB9C4D79ADD6EEAA /* CMakeLists.txt */,
			);
			name = gen_random_ctr_drbg;
			sourceTree = "<group>";
		};
		3135BC42C803452DB6AF6B3F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				70ECA227B0C94D3FA182D375 /* ssl_cert_test.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		3360CB5E716149B09D1D3C9B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				1CFB73963A694580AD131A81 /* test_suite_pem.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		362F878F6AF3447885F2D6DD /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				DB42C3E289CC43F693ADDDCB /* test_suite_camellia.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		3815341732034FE49D0CCDC0 /* mbedcrypto */ = {
			isa = PBXGroup;
			children = (
				A475A56CF2FC4A929D0D9F82 /* Source Files */,
				003900D5503A4970819E7965 /* CMakeLists.txt */,
			);
			name = mbedcrypto;
			sourceTree = "<group>";
		};
		3AA907FC18664998BBFCE6D1 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				2B6B8D2E2E634505ACE0F916 /* test_suite_ecp.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		3AF13FF825FF4C96A40572D6 /* hello */ = {
			isa = PBXGroup;
			children = (
				8ACFD3B8312A437CA654AEA5 /* Source Files */,
				01BC24B1C35F47F7A2A5FFE9 /* CMakeLists.txt */,
			);
			name = hello;
			sourceTree = "<group>";
		};
		3C3B0C7BC67C4791882AFBE4 /* test_suite_pk */ = {
			isa = PBXGroup;
			children = (
				75E21E080D63408D9B6F2D4A /* Source Files */,
				798AA14F240F471D84968445 /* CMake Rules */,
				F60EF4F9E17E4C36B0F16516 /* CMakeLists.txt */,
			);
			name = test_suite_pk;
			sourceTree = "<group>";
		};
		3C99BABA38EF4FE6B789A56C /* dh_genprime */ = {
			isa = PBXGroup;
			children = (
				BA054E27F27C44FB8799861E /* Source Files */,
				3929DE302764430884F3B3C4 /* CMakeLists.txt */,
			);
			name = dh_genprime;
			sourceTree = "<group>";
		};
		3DD45C39250849DAB06A178D /* gen_entropy */ = {
			isa = PBXGroup;
			children = (
				02468E7F1A1F449681231912 /* Source Files */,
				19E2824BBF18470EB35613B8 /* CMakeLists.txt */,
			);
			name = gen_entropy;
			sourceTree = "<group>";
		};
		3E1CC622DFB64C99AC4B521F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D46D2426938E4978BF9B30AA /* test_suite_blowfish.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		3E557C163D3B4A10AA13200A /* covtest */ = {
			isa = PBXGroup;
			children = (
				1AD6D6739BDC4319A30458D9 /* CMake Rules */,
				0F6D47B9B3A244CDA315EC43 /* CMakeLists.txt */,
			);
			name = covtest;
			sourceTree = "<group>";
		};
		3ED8E95663A449EEBF7213BB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				CE8BAB2F35CB4232A46D894C /* test_suite_gcm.aes192_en.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		3F606EC069B7451CBC54D107 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8E9F038A1C344A72BC876521 /* pem2der.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		409D691F12044F92B79F6EC6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				71F3757BD1EC43BCAC6C3B6C /* selftest.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4145345B8C3844DFBEC0179F /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E7B7FC4568EA4B67AD32FFAD /* crypt_and_hash.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		41E2970F11BA44B890A75EB5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2A7B10EA903045E4BB3C61FC /* mini_client.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4230CC8BA7C940FD99ABE22A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				4EE58494A5E34F74BBF5C238 /* test_suite_timing.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		42B3AE1B82D343BDB216C12D /* ssl_pthread_server */ = {
			isa = PBXGroup;
			children = (
				B4F52BFA5ED549628B55512D /* Source Files */,
				337DE5E50AEA4A6C9405D6E6 /* CMakeLists.txt */,
			);
			name = ssl_pthread_server;
			sourceTree = "<group>";
		};
		42C2EA71300443429318E0B1 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				A984C21D7D05461EAA67D86B /* test_suite_pkcs1_v15.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		445E9B22565D40668FE55490 /* rsa_verify_pss */ = {
			isa = PBXGroup;
			children = (
				7D80935D16A44F9C8EE0A563 /* Source Files */,
				9CCCE75A3C7B44F78B0CDCFF /* CMakeLists.txt */,
			);
			name = rsa_verify_pss;
			sourceTree = "<group>";
		};
		44FFD3D740404EDE950FB6EB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0994F9D5B6DD46E5BDEB9F97 /* certs.c */,
				A962B7CD01794957BA56F43E /* pkcs11.c */,
				6F1332BB3CFB42CDAD07A928 /* x509.c */,
				3B11F7ABA7384413B4C3C15B /* x509_create.c */,
				FD05B156EE1B46568C811AB3 /* x509_crl.c */,
				FD96FE1A408D4426A3210750 /* x509_crt.c */,
				032D0BE931B84C6294020D72 /* x509_csr.c */,
				3EB6756F225D415C9C2615E3 /* x509write_crt.c */,
				DAC57457DE0C4D38AD8A319C /* x509write_csr.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		455EC10BC6824D07B4CF0B22 /* req_app */ = {
			isa = PBXGroup;
			children = (
				9A18774DA49240A0A3CC7165 /* Source Files */,
				DCDAC1486AA74AF6AEB7E3D4 /* CMakeLists.txt */,
			);
			name = req_app;
			sourceTree = "<group>";
		};
		49D64AD50F0C46AFAE728E75 /* test_suite_debug */ = {
			isa = PBXGroup;
			children = (
				15F6C59C21DC4E6F8EDF37D3 /* Source Files */,
				7DF6E808CE4A4F63A001431B /* CMake Rules */,
				12EFACA7FA104117B40239F5 /* CMakeLists.txt */,
			);
			name = test_suite_debug;
			sourceTree = "<group>";
		};
		4BB6E4E46F8B49C2AB8144F6 /* key_app */ = {
			isa = PBXGroup;
			children = (
				FE9B5A94D4734A16B7AE984C /* Source Files */,
				231C9EF8848F49C4903B9F7C /* CMakeLists.txt */,
			);
			name = key_app;
			sourceTree = "<group>";
		};
		4BC66D2D08B54177B79EE45E /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				97F26795DA474E11853F4340 /* test_suite_entropy.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		4D9297AA51CB4E47B7C8F1CB /* test_suite_md */ = {
			isa = PBXGroup;
			children = (
				8C325EE42BB64E378DF05267 /* Source Files */,
				D8CF474D54F34BE68011E12C /* CMake Rules */,
				78B98AABAC114C16A6B06638 /* CMakeLists.txt */,
			);
			name = test_suite_md;
			sourceTree = "<group>";
		};
		4E5EF503579244CC8A6A7775 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BA9861C3154B4CDD93165A99 /* key_app_writer.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		4FE968F3B1FF48338AE1B993 /* test_suite_ecdh */ = {
			isa = PBXGroup;
			children = (
				833CB448EBA94A8FB647EC3C /* Source Files */,
				F391C90604964A1AB9776F55 /* CMake Rules */,
				FB42159E68B341EF919E88F9 /* CMakeLists.txt */,
			);
			name = test_suite_ecdh;
			sourceTree = "<group>";
		};
		514C5C20F42947D2A67E647E /* lcov */ = {
			isa = PBXGroup;
			children = (
				F7FEB8386D2D484DB885558D /* CMake Rules */,
				8B090D832D2A4A50A68B2A7F /* CMakeLists.txt */,
			);
			name = lcov;
			sourceTree = "<group>";
		};
		51E2FF36F091486EA354DBB1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F9F14DEBB98C4FC18BFD481E /* ssl_client1.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5355BA8C540341188E768A8C /* cert_req */ = {
			isa = PBXGroup;
			children = (
				B9338D5CCD0B4DDF898A4419 /* Source Files */,
				9236D5A501404C2DB0226C39 /* CMakeLists.txt */,
			);
			name = cert_req;
			sourceTree = "<group>";
		};
		53B8E98D876A420CAED15EE7 /* gen_random_havege */ = {
			isa = PBXGroup;
			children = (
				874315C190D14E80B2EBFB87 /* Source Files */,
				653202F0658C4C4C8822F016 /* CMakeLists.txt */,
			);
			name = gen_random_havege;
			sourceTree = "<group>";
		};
		53BAEAD5D2894428BEBF1E5A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D4733F79E9294E2487D0D955 /* ssl_client2.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5402E54031094B189524FD05 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				3372CCCDD2314B1C946C75E7 /* test_suite_shax.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5476106BE92E47F3A2C23E7E /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		57D4CD35DDA64E4B9C1732B7 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				68E8E78ABCB143E48B6AE268 /* test_suite_hmac_drbg.no_reseed.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		5C07E3DCE27845AE9C028C50 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				591F91A0C1594BBAA3B65C5E /* strerror.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		5E6E022CE1FA4AC78A3EAFDF /* test_suite_aes.ecb */ = {
			isa = PBXGroup;
			children = (
				709E01DA16294C1A830D2FAE /* Source Files */,
				BB11C9035A6440FC9B25411A /* CMake Rules */,
				3159BE57DD2C4A2ABDDF3AFA /* CMakeLists.txt */,
			);
			name = test_suite_aes.ecb;
			sourceTree = "<group>";
		};
		5ED80ED6B3D749CF958E7279 /* ssl_server */ = {
			isa = PBXGroup;
			children = (
				284802BE8DC14CA4BE95F32F /* Source Files */,
				09F8A754DE8E4321A3C8C8AB /* CMakeLists.txt */,
			);
			name = ssl_server;
			sourceTree = "<group>";
		};
		5EDE0229C6B2471A9949F15E /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				1A723A8DED8B4629BA8DDB36 /* test_suite_ccm.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		5F7B80AD73344315A2CEE98C /* test_suite_gcm.aes256_en */ = {
			isa = PBXGroup;
			children = (
				FF1510EFEA6F4D37B0B1E81C /* Source Files */,
				B104D4E8EDC2405BA1121979 /* CMake Rules */,
				064F01329A4B4510AE9DD8F9 /* CMakeLists.txt */,
			);
			name = test_suite_gcm.aes256_en;
			sourceTree = "<group>";
		};
		600AA06C3A3B49D894557B30 /* mbedx509 */ = {
			isa = PBXGroup;
			children = (
				44FFD3D740404EDE950FB6EB /* Source Files */,
				2F185BC97E6E49A88D7BBFA7 /* CMakeLists.txt */,
			);
			name = mbedx509;
			sourceTree = "<group>";
		};
		60C13D63537D4F368851B4E8 /* ssl_client2 */ = {
			isa = PBXGroup;
			children = (
				53BAEAD5D2894428BEBF1E5A /* Source Files */,
				696CE50A4B714EE09A3DDA16 /* CMakeLists.txt */,
			);
			name = ssl_client2;
			sourceTree = "<group>";
		};
		616BC5CA53904EF7A0BF3015 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				CF09B348D8CC425390BE4060 /* ecdsa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		62A0ADEBBB48410BAE446ABC /* rsa_encrypt */ = {
			isa = PBXGroup;
			children = (
				0445EE0D5181457E9FA79090 /* Source Files */,
				E505F45CD5024DCA92E9E0D6 /* CMakeLists.txt */,
			);
			name = rsa_encrypt;
			sourceTree = "<group>";
		};
		647D9C724CBF4199A194167A /* test_suite_ecdsa */ = {
			isa = PBXGroup;
			children = (
				26060771B3E04A3AA77B60F1 /* Source Files */,
				AAFC08D22DBB401DA8B430E5 /* CMake Rules */,
				75A4A6AF1D844769B148C821 /* CMakeLists.txt */,
			);
			name = test_suite_ecdsa;
			sourceTree = "<group>";
		};
		64F8FDDF22624C149E2F5987 /* test_suite_base64 */ = {
			isa = PBXGroup;
			children = (
				847E97F714C74AE9B84AE72C /* Source Files */,
				98BC58B2ADD64ECD91AC7D03 /* CMake Rules */,
				5B76C54519BB4E8DBFA4ACA3 /* CMakeLists.txt */,
			);
			name = test_suite_base64;
			sourceTree = "<group>";
		};
		677A99C5C7654EA8862C2B93 /* test_suite_ssl */ = {
			isa = PBXGroup;
			children = (
				E4E80A677103472194BE7B8B /* Source Files */,
				0642E51E2CC64E599E20AFD0 /* CMake Rules */,
				A45AE58EE34C4795BEB7659D /* CMakeLists.txt */,
			);
			name = test_suite_ssl;
			sourceTree = "<group>";
		};
		67E103A7208C4149ABF615B5 /* test_suite_cipher.des */ = {
			isa = PBXGroup;
			children = (
				A5CD04306D7F4DF59C9F5EDC /* Source Files */,
				2748634F062A4BDFBA54B8F2 /* CMake Rules */,
				3591A9AB3F0648C196FCA9F8 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.des;
			sourceTree = "<group>";
		};
		692DA8995BA947DEABA8ED96 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F33B4AF854564CA898D38500 /* test_suite_mdx.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6A2B010B0A47444582F86A5A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				49615F679ECD44D2A2B22729 /* test_suite_aes.rest.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6A500B08617A48BBB0C546AF /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				1AFE4477B4004841B5D36C5F /* test_suite_gcm.aes128_de.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		6AEE69DDB1BD403A928B22B5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				25B1F31AC23F4B41BCD85187 /* udp_proxy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6AF065C3010F4A70B670644D /* pem2der */ = {
			isa = PBXGroup;
			children = (
				3F606EC069B7451CBC54D107 /* Source Files */,
				79352B8731C0419F87C2DD1A /* CMakeLists.txt */,
			);
			name = pem2der;
			sourceTree = "<group>";
		};
		6B8162867B6F474FAFEE1CF3 = {
			isa = PBXGroup;
			children = (
				1F6BC379480A453A9BE022D3 /* apidoc */,
				3E557C163D3B4A10AA13200A /* covtest */,
				514C5C20F42947D2A67E647E /* lcov */,
				F1B9856619A0444BA0C12126 /* memcheck */,
				FB5B39F6265F45CF88F0F355 /* ALL_BUILD */,
				3815341732034FE49D0CCDC0 /* mbedcrypto */,
				600AA06C3A3B49D894557B30 /* mbedx509 */,
				CC85BE4ABA074B05A346B6D3 /* mbedtls */,
				148C8E24048147F9A4E605F1 /* lib */,
				C2332268B852496391DBF317 /* aescrypt2 */,
				EE9A142DEBD946ECA17BE8FB /* crypt_and_hash */,
				3AF13FF825FF4C96A40572D6 /* hello */,
				1014631607184B48937C4298 /* generic_sum */,
				057F3B2842DF427482736213 /* dh_client */,
				3C99BABA38EF4FE6B789A56C /* dh_genprime */,
				7E6ECABDC95349D2BFBB0541 /* dh_server */,
				6E889ED3778648E0B6839C29 /* ecdh_curve25519 */,
				D29044ED55B2414491A62F9E /* ecdsa */,
				9DB08CBCC7874D90974D663D /* gen_key */,
				4BB6E4E46F8B49C2AB8144F6 /* key_app */,
				D54F6B919317415386BF2F2F /* key_app_writer */,
				6FA6DEFB965F4EA0BA32B1C7 /* mpi_demo */,
				F7ED715962594F9483F6F730 /* rsa_genkey */,
				A86620680A384B0AA6B667A7 /* rsa_sign */,
				F4C027B08CBA448299497CF8 /* rsa_verify */,
				F315FB59D86149FC9A4B0E2A /* rsa_sign_pss */,
				445E9B22565D40668FE55490 /* rsa_verify_pss */,
				62A0ADEBBB48410BAE446ABC /* rsa_encrypt */,
				0572A0E528624BD685A856D3 /* rsa_decrypt */,
				2C21FE90498C4D9DAD308D3E /* pk_sign */,
				72A0E302E62F4C7BA1A5C9E5 /* pk_verify */,
				B2D87C9B399942858AB048F5 /* pk_encrypt */,
				2B0362FADA464220B3A8E771 /* pk_decrypt */,
				53B8E98D876A420CAED15EE7 /* gen_random_havege */,
				2C97775B0B4B44AA98633079 /* gen_random_ctr_drbg */,
				3DD45C39250849DAB06A178D /* gen_entropy */,
				9948880D4A3F4B1E89C7102D /* dtls_client */,
				DF8A321DE497480E83B49B78 /* dtls_server */,
				91BF784C215C44BDB9672AF2 /* ssl_client1 */,
				60C13D63537D4F368851B4E8 /* ssl_client2 */,
				5ED80ED6B3D749CF958E7279 /* ssl_server */,
				ADE95D3D8C7446F6872E6B3B /* ssl_server2 */,
				0489588708A34641A484B75C /* ssl_fork_server */,
				A1D261C458AD4C14B5F4C7A0 /* ssl_mail_client */,
				BE3010AAC74143B98CB71631 /* mini_client */,
				42B3AE1B82D343BDB216C12D /* ssl_pthread_server */,
				8EE9DB9F7C8F4B998D5EA754 /* selftest */,
				A1EA9C48971342F08006B038 /* benchmark */,
				EF1B07EA08AF4C30AFF49990 /* ssl_cert_test */,
				D2CA09719FBD4CD38CDA9B44 /* udp_proxy */,
				0A58506AFE754DAE989CD0FC /* cert_app */,
				0D2FBD9F5361403F803230CB /* crl_app */,
				455EC10BC6824D07B4CF0B22 /* req_app */,
				5355BA8C540341188E768A8C /* cert_req */,
				A6C8502AD0A14ADC98780525 /* cert_write */,
				82CA0599F23849CF951D9C15 /* strerror */,
				6AF065C3010F4A70B670644D /* pem2der */,
				5E6E022CE1FA4AC78A3EAFDF /* test_suite_aes.ecb */,
				BB66706299FD4108A44A05D0 /* test_suite_aes.cbc */,
				14F693F01BA04FFD8D3ED57A /* test_suite_aes.cfb */,
				EBC7472B4DE44FD18A262E32 /* test_suite_aes.rest */,
				A644718976CB41AA9F917B1A /* test_suite_arc4 */,
				C1C67EA0764649BA8A183F94 /* test_suite_asn1write */,
				64F8FDDF22624C149E2F5987 /* test_suite_base64 */,
				76567AFC254E4261B72CAF61 /* test_suite_blowfish */,
				9E720B5946F6481092B389F4 /* test_suite_camellia */,
				0E2F690315654970A9DAD87F /* test_suite_ccm */,
				D211AB7649A74C2B9A280EE4 /* test_suite_cipher.aes */,
				1EC67BFBB3DC42508731CB84 /* test_suite_cipher.arc4 */,
				D0182D4BC5154B58AC0E4F67 /* test_suite_cipher.blowfish */,
				E270FC05CD4F45FCB05DE7BE /* test_suite_cipher.camellia */,
				C5A4756F043F4C1D902E96D1 /* test_suite_cipher.ccm */,
				67E103A7208C4149ABF615B5 /* test_suite_cipher.des */,
				A5852F237F1146EDAAB3583A /* test_suite_cipher.gcm */,
				E65E56E7B7C6465E98CC228A /* test_suite_cipher.null */,
				FD6C0EC4B67B4B65BB06B6F3 /* test_suite_cipher.padding */,
				991ECE51D09D4AC88571A35A /* test_suite_cmac */,
				0C2C2C98FED14CBEBFE1417B /* test_suite_ctr_drbg */,
				49D64AD50F0C46AFAE728E75 /* test_suite_debug */,
				CFAEAB3B0BDC42A0ABC9938B /* test_suite_des */,
				B50EA86C87BA4C86AD417E81 /* test_suite_dhm */,
				4FE968F3B1FF48338AE1B993 /* test_suite_ecdh */,
				647D9C724CBF4199A194167A /* test_suite_ecdsa */,
				F69D700989A34011A7B86B32 /* test_suite_ecjpake */,
				D000BA2BBBDA4885B839FE2B /* test_suite_ecp */,
				E4670E2013E043EB8AA72CD3 /* test_suite_entropy */,
				ABC14896B88A4B9F999DE95F /* test_suite_error */,
				83F1D40682C94CCEAD9490ED /* test_suite_gcm.aes128_en */,
				CAA5DCF357424219A569555C /* test_suite_gcm.aes192_en */,
				5F7B80AD73344315A2CEE98C /* test_suite_gcm.aes256_en */,
				FDD33D48B6814A4BA9F99F64 /* test_suite_gcm.aes128_de */,
				07F0F64775A84C0DA8398744 /* test_suite_gcm.aes192_de */,
				ACB2CD48023F4900950912AC /* test_suite_gcm.aes256_de */,
				887D41F906894224832CFD31 /* test_suite_gcm.camellia */,
				7B664BE965B34917B3D3105B /* test_suite_hmac_drbg.misc */,
				06112483551744DA9D296127 /* test_suite_hmac_drbg.no_reseed */,
				F906183E45AE4D03A64E7C9B /* test_suite_hmac_drbg.nopr */,
				D3C12175C24F486CA75E334D /* test_suite_hmac_drbg.pr */,
				4D9297AA51CB4E47B7C8F1CB /* test_suite_md */,
				BED6E36448BF4518973663EE /* test_suite_mdx */,
				90D477CEBE244F91A01124D3 /* test_suite_memory_buffer_alloc */,
				E2A4200397534088AAB86369 /* test_suite_mpi */,
				D9BCDAF5191B45B198D47787 /* test_suite_pem */,
				E0DF5B37BF494A47997893F7 /* test_suite_pkcs1_v15 */,
				19861AB09FE94F03AC8F3163 /* test_suite_pkcs1_v21 */,
				BEE29A8074134A3E9322FD12 /* test_suite_pkcs5 */,
				3C3B0C7BC67C4791882AFBE4 /* test_suite_pk */,
				80060FF75DA14082BE19C5BC /* test_suite_pkparse */,
				B6BAE9388C9F475B9C2F2F6F /* test_suite_pkwrite */,
				061E53ED3F874AC6B324254C /* test_suite_shax */,
				677A99C5C7654EA8862C2B93 /* test_suite_ssl */,
				0DF2E31BC5224266B540D719 /* test_suite_timing */,
				2031332511FC467D84337ABD /* test_suite_rsa */,
				F77991CD5AF74C01AD1DB47E /* test_suite_version */,
				A6C6C2E6A363469889FCFEA2 /* test_suite_xtea */,
				72F1C485DCF243EA9106D900 /* test_suite_x509parse */,
				CE1339DBFFEF4FBAAE0E8A60 /* test_suite_x509write */,
				B5E92E37ECF544538CD078A2 /* Products */,
				1FD14EE2DAEC4AE8839C5C49 /* Frameworks */,
				0F0B0CBC24E44D5C809D52A6 /* Resources */,
			);
			sourceTree = "<group>";
		};
		6E02A9A6ED6D4855BFFC792D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D67E6AE9C1B84DC5943D8816 /* test_suite_asn1write.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		6E33818A9D774C20964A92BD /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				9275F998E689486ABFA46EE1 /* test_suite_cmac.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		6E889ED3778648E0B6839C29 /* ecdh_curve25519 */ = {
			isa = PBXGroup;
			children = (
				15A9B80D0F52463BA81F79B1 /* Source Files */,
				C490CCDC7CD44416A2D23046 /* CMakeLists.txt */,
			);
			name = ecdh_curve25519;
			sourceTree = "<group>";
		};
		6EC33E8A7F224117B98AD215 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				CEC4E9E10B1A4AF4BE4F3B29 /* test_suite_aes.rest.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		6FA6DEFB965F4EA0BA32B1C7 /* mpi_demo */ = {
			isa = PBXGroup;
			children = (
				06349C9B590A45F7929D4CFB /* Source Files */,
				68B88B403B1E49F29DD4D6A6 /* CMakeLists.txt */,
			);
			name = mpi_demo;
			sourceTree = "<group>";
		};
		709E01DA16294C1A830D2FAE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				26D21478227F4473B74E23C9 /* test_suite_aes.ecb.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		71533190733A46649453F85B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F1D61712C1A84958A3FF587C /* test_suite_hmac_drbg.nopr.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		71AAFC60D766484391248DEB /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B3A15B591ADC4B5292EC14CF /* gen_random_ctr_drbg.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		72A0E302E62F4C7BA1A5C9E5 /* pk_verify */ = {
			isa = PBXGroup;
			children = (
				18F3C4E3C7E241FAA1EAD3DF /* Source Files */,
				C42BC014602B4B26BFB4B247 /* CMakeLists.txt */,
			);
			name = pk_verify;
			sourceTree = "<group>";
		};
		72F1C485DCF243EA9106D900 /* test_suite_x509parse */ = {
			isa = PBXGroup;
			children = (
				0E83B7B47A0846339788A496 /* Source Files */,
				2902C9F1BE0B4F44AF5468FB /* CMake Rules */,
				846E690701E54865A6BF191B /* CMakeLists.txt */,
			);
			name = test_suite_x509parse;
			sourceTree = "<group>";
		};
		72FE09E5F4EA4DFF96F234B2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				89C1974729534813B40863C8 /* test_suite_cipher.gcm.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		749785725FF24C238520B4B8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				34DD01E748B14292A69079F7 /* test_suite_camellia.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		75E21E080D63408D9B6F2D4A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				EA45AF5B328F425D8D9D3440 /* test_suite_pk.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		76567AFC254E4261B72CAF61 /* test_suite_blowfish */ = {
			isa = PBXGroup;
			children = (
				3E1CC622DFB64C99AC4B521F /* Source Files */,
				2B98140DBD0E4099AB8C10AF /* CMake Rules */,
				E13E892F63CA49ED98243495 /* CMakeLists.txt */,
			);
			name = test_suite_blowfish;
			sourceTree = "<group>";
		};
		776E9DA2AFCF4BBCB547AAAB /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				AE4BB3C6097847CFA05A779A /* test_suite_aes.cfb.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		78A700A6965E49639862DBF5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A759B47F93BD4F2595FD3AB4 /* test_suite_cipher.null.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		798AA14F240F471D84968445 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				F81EC4853BAF4A4C85425292 /* test_suite_pk.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		7A9BDFC6C1304B15B300A890 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				10512EDBD98E4F19837D63AB /* test_suite_mdx.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		7B664BE965B34917B3D3105B /* test_suite_hmac_drbg.misc */ = {
			isa = PBXGroup;
			children = (
				B74B04C2DA514793B1CE668C /* Source Files */,
				D6C9DC8F9A7444DAB32026C5 /* CMake Rules */,
				A2FA67B3F9E54A28AC8E58E0 /* CMakeLists.txt */,
			);
			name = test_suite_hmac_drbg.misc;
			sourceTree = "<group>";
		};
		7BFC7A2503F04B12956DE9DA /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				7DEBBC224A3C4DAE88506100 /* test_suite_cipher.gcm.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		7D80935D16A44F9C8EE0A563 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E77F0B840CC34639A00394D0 /* rsa_verify_pss.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		7DF6E808CE4A4F63A001431B /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				345428569E1A4DEF84597349 /* test_suite_debug.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		7E6ECABDC95349D2BFBB0541 /* dh_server */ = {
			isa = PBXGroup;
			children = (
				B2719A0ACDB4469DBB7CB7B1 /* Source Files */,
				58F81292C53346CD8423A190 /* CMakeLists.txt */,
			);
			name = dh_server;
			sourceTree = "<group>";
		};
		80060FF75DA14082BE19C5BC /* test_suite_pkparse */ = {
			isa = PBXGroup;
			children = (
				83BD86CE6279479E875B2FFF /* Source Files */,
				D30B2C7EFB74443788C212F8 /* CMake Rules */,
				698E2ADF77A44C7F84570BD9 /* CMakeLists.txt */,
			);
			name = test_suite_pkparse;
			sourceTree = "<group>";
		};
		806153CB168A404FB27725D7 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FF769728FEF24E7F9E831C7F /* test_suite_xtea.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		82CA0599F23849CF951D9C15 /* strerror */ = {
			isa = PBXGroup;
			children = (
				5C07E3DCE27845AE9C028C50 /* Source Files */,
				C74A57502C8148D4997DC04A /* CMakeLists.txt */,
			);
			name = strerror;
			sourceTree = "<group>";
		};
		832C9F04F9774E81B27897FA /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				2FC61EFE360246E0899E981C /* test_suite_gcm.aes192_de.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		833CB448EBA94A8FB647EC3C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				4CDA3ACD2007484AA09A1859 /* test_suite_ecdh.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		83BD86CE6279479E875B2FFF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7C5374538DA44F6893B3A69E /* test_suite_pkparse.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		83F1D40682C94CCEAD9490ED /* test_suite_gcm.aes128_en */ = {
			isa = PBXGroup;
			children = (
				0BA33C14FD774906A68229B7 /* Source Files */,
				9CEBF9DCDC5D41C599429BCA /* CMake Rules */,
				440EBB403BE64A66AE5A2FE3 /* CMakeLists.txt */,
			);
			name = test_suite_gcm.aes128_en;
			sourceTree = "<group>";
		};
		847E97F714C74AE9B84AE72C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E615503AECEE412AA9B32C08 /* test_suite_base64.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		85E8E7FF4DFA4695ADC48F0C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B264D6C654F2463B823D02CB /* test_suite_cipher.aes.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		863FED8B42624664A686694C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				44AD553207AB4411AEC8A177 /* benchmark.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		874315C190D14E80B2EBFB87 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				A745B535514B4F39AB64F5FC /* gen_random_havege.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8858DA3857174BA5B95E0D74 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7D83886E3F2044FFB32AD5C6 /* test_suite_cipher.ccm.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		887D41F906894224832CFD31 /* test_suite_gcm.camellia */ = {
			isa = PBXGroup;
			children = (
				0FAA9D30A67B46B38C3E2954 /* Source Files */,
				0B06C4ED87BE4608B98D8B9C /* CMake Rules */,
				C53117138DFB44938B068173 /* CMakeLists.txt */,
			);
			name = test_suite_gcm.camellia;
			sourceTree = "<group>";
		};
		89C026D4D49E4F0AA66F7402 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				9372F75741E04986BCC2351E /* test_suite_dhm.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		8A97BD65C8E94F1FACFD3586 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				49E8732FB5D147BCA6096FDF /* debug.c */,
				50169B5CFD2647DE8021B41B /* net_sockets.c */,
				29C7F13D067A4AA0BA9B1A08 /* ssl_cache.c */,
				56507561643E4669B536E414 /* ssl_ciphersuites.c */,
				F332B0B1BD5C4CE4BBEDFAC2 /* ssl_cli.c */,
				7262D148B3404BE9925ED667 /* ssl_cookie.c */,
				EB94DAA1A32E40DB9FB140AC /* ssl_srv.c */,
				1987C29C499D4F5BBC05E86B /* ssl_ticket.c */,
				4E68B5BEDD2B46B38DDE81CF /* ssl_tls.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8ACFD3B8312A437CA654AEA5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E08561AE268B4AC6B967F01B /* hello.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8B9E510A52AF488D88772F69 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				DF9902C385F04F4DA4B77988 /* test_suite_error.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		8C325EE42BB64E378DF05267 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				11E08772093147C3AC1BF8C2 /* test_suite_md.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		8EE9DB9F7C8F4B998D5EA754 /* selftest */ = {
			isa = PBXGroup;
			children = (
				409D691F12044F92B79F6EC6 /* Source Files */,
				5CE45AAF0CF04FD0A6839F4E /* CMakeLists.txt */,
			);
			name = selftest;
			sourceTree = "<group>";
		};
		90D477CEBE244F91A01124D3 /* test_suite_memory_buffer_alloc */ = {
			isa = PBXGroup;
			children = (
				271DD06023124066B8DA67B0 /* Source Files */,
				C49A2D575721416386D4B15B /* CMake Rules */,
				6F95F88CE49C49FAA8434708 /* CMakeLists.txt */,
			);
			name = test_suite_memory_buffer_alloc;
			sourceTree = "<group>";
		};
		91BF784C215C44BDB9672AF2 /* ssl_client1 */ = {
			isa = PBXGroup;
			children = (
				51E2FF36F091486EA354DBB1 /* Source Files */,
				9752FFCFA96D4936B62DFBF4 /* CMakeLists.txt */,
			);
			name = ssl_client1;
			sourceTree = "<group>";
		};
		924B9354B3444836B85046DE /* Source Files */ = {
			isa = PBXGroup;
			children = (
				719BFADB2BBA4F9D8728821B /* rsa_sign_pss.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		93A761493F9D4334805BB468 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				47BCEC12B3FB4670813EC0A0 /* test_suite_dhm.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		93C7830FCAA14D9BB8C54787 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				54CAE28ED48B41DE9442DB17 /* test_suite_rsa.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		98BC58B2ADD64ECD91AC7D03 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				C7F3CD3DC53F4161B42193C6 /* test_suite_base64.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		991ECE51D09D4AC88571A35A /* test_suite_cmac */ = {
			isa = PBXGroup;
			children = (
				0E417488EE9C428785ADB309 /* Source Files */,
				6E33818A9D774C20964A92BD /* CMake Rules */,
				0B65CD5B58884E17855C9C45 /* CMakeLists.txt */,
			);
			name = test_suite_cmac;
			sourceTree = "<group>";
		};
		9948880D4A3F4B1E89C7102D /* dtls_client */ = {
			isa = PBXGroup;
			children = (
				00BD998B8D8E4A2AA86BF05D /* Source Files */,
				F1FBD5A2BAD44C229E5C6790 /* CMakeLists.txt */,
			);
			name = dtls_client;
			sourceTree = "<group>";
		};
		9A18774DA49240A0A3CC7165 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				11EDE0ACC87046C385CAD4DF /* req_app.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9A59158C2F9942A1A093516A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				109A4B26445D43338973DCD0 /* test_suite_gcm.aes192_en.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9A97B2B8D27E4758AFCF19E8 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				E9A88C920AFD46C2BBD7621F /* test_suite_version.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9AADA2E9120840B3A06B2635 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				B5E6E69C822942AE94467C79 /* test_suite_hmac_drbg.nopr.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9C98C400B5FA4692806CBAF6 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				F091B18C7297400DB979D80F /* test_suite_cipher.padding.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9CEBF9DCDC5D41C599429BCA /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				039C3CF803BE46F7AE2F25F2 /* test_suite_gcm.aes128_en.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9D208A399F4D4F16A2582D6C /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		9DA40A6A1762488E8DD1D5A4 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				046708CAF99D431C8490EB6F /* test_suite_error.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		9DB08CBCC7874D90974D663D /* gen_key */ = {
			isa = PBXGroup;
			children = (
				19CEF7A03B1947BDA655167D /* Source Files */,
				451090BEC5BC406EBC02FDED /* CMakeLists.txt */,
			);
			name = gen_key;
			sourceTree = "<group>";
		};
		9E720B5946F6481092B389F4 /* test_suite_camellia */ = {
			isa = PBXGroup;
			children = (
				749785725FF24C238520B4B8 /* Source Files */,
				362F878F6AF3447885F2D6DD /* CMake Rules */,
				356AD730CFB14179B88EAAD5 /* CMakeLists.txt */,
			);
			name = test_suite_camellia;
			sourceTree = "<group>";
		};
		9FC34899F52A4D1399A95B97 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				72EC203136EF43C9A58B12D0 /* test_suite_timing.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A1D261C458AD4C14B5F4C7A0 /* ssl_mail_client */ = {
			isa = PBXGroup;
			children = (
				03255C8E838547779A72D265 /* Source Files */,
				076084816AB24480BD7AE7FA /* CMakeLists.txt */,
			);
			name = ssl_mail_client;
			sourceTree = "<group>";
		};
		A1EA9C48971342F08006B038 /* benchmark */ = {
			isa = PBXGroup;
			children = (
				863FED8B42624664A686694C /* Source Files */,
				EAB4AB7197E244ABB7A63522 /* CMakeLists.txt */,
			);
			name = benchmark;
			sourceTree = "<group>";
		};
		A475A56CF2FC4A929D0D9F82 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				FE883A843A2E4E9CBF723D8C /* aes.c */,
				242A5D0678ED457388ECC505 /* aesni.c */,
				298F5252B11442058BB83881 /* arc4.c */,
				3CAA9F23BF9841C69D610720 /* asn1parse.c */,
				4F6219E7FC8E45D284E67150 /* asn1write.c */,
				6A489047F5F447E38562A49E /* base64.c */,
				C8EED22F4815436BB526BADE /* bignum.c */,
				DAE2FC131FC14FE8B6EEEA7F /* blowfish.c */,
				9173F95824784A3D9B3BAACC /* camellia.c */,
				5DFA91290BBE44FB8D2708D3 /* ccm.c */,
				FE160F16976A4F81B4AC3F55 /* cipher.c */,
				8BD743B89BC74FD29FA8D1A9 /* cipher_wrap.c */,
				6A9ADCA880064F2CA07D9D29 /* cmac.c */,
				DDF78BC7997C4C8EAD0B07C2 /* ctr_drbg.c */,
				8FE7325E2CC5464E9D9A74A4 /* des.c */,
				08181C96F1A2438FBF08F2A9 /* dhm.c */,
				CF02209F242B4844BD6742FA /* ecdh.c */,
				BE231EF54C354ECAB32BE27C /* ecdsa.c */,
				3040196CB44E4D5DBC7121BB /* ecjpake.c */,
				1BED17EFE8F94B12A79E87AF /* ecp.c */,
				7C7D511A198E476382302A95 /* ecp_curves.c */,
				46C514389FB2475CA62FDB75 /* entropy.c */,
				0AD187B0E44F4B6F9C64095F /* entropy_poll.c */,
				800BC1B412B1407F83787363 /* error.c */,
				81CCE6F54F5049A5A968BBEA /* gcm.c */,
				DACFB279BB0B4882826D09B8 /* havege.c */,
				EDF614D2A6BC460BB78FF7A4 /* hmac_drbg.c */,
				22204A434F554101BC96FCA4 /* md.c */,
				B13542D3C8094DECBBBB0562 /* md2.c */,
				29B0198D36C44600AFDB2009 /* md4.c */,
				1519A846100A4D57B3B62A49 /* md5.c */,
				04D0F39162644F06A7F61DA9 /* md_wrap.c */,
				4E421CAA582C46ACAF8A7775 /* memory_buffer_alloc.c */,
				77E56418762C4A52866A1FD3 /* oid.c */,
				6699C32B339446CAB1218714 /* padlock.c */,
				4EC4BCF29EB04AD7AC380C4F /* pem.c */,
				6FA842143E5642FD84CABA71 /* pk.c */,
				6C5CB8079C384BF6B883995B /* pk_wrap.c */,
				40224EE1444F4C65BDC0F7DE /* pkcs12.c */,
				75AA5D7F3A6C4408AA4C3A33 /* pkcs5.c */,
				2B24D65D28DB47C9BEB8A820 /* pkparse.c */,
				E2787AA2141047ADAB8CEC86 /* pkwrite.c */,
				399AAD35FEF14826B8A1B53E /* platform.c */,
				6BA32511607847B8AA6853F8 /* ripemd160.c */,
				D09683AA22094191992BC7B5 /* rsa.c */,
				BFC277AE6B524CCFB4BB8B3D /* sha1.c */,
				0036270E28AF404E99A113AE /* sha256.c */,
				467261E192744483A9532072 /* sha512.c */,
				F2AFA1A52E784E708EE54679 /* threading.c */,
				F3674A80649F40CE8E4E4FBC /* timing.c */,
				89BD3B8C64974D8A8489B166 /* version.c */,
				11E93400C71D4E80B39EBDF6 /* version_features.c */,
				7874A25397A0461098EE062A /* xtea.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A5852F237F1146EDAAB3583A /* test_suite_cipher.gcm */ = {
			isa = PBXGroup;
			children = (
				72FE09E5F4EA4DFF96F234B2 /* Source Files */,
				7BFC7A2503F04B12956DE9DA /* CMake Rules */,
				E777F5172CE64DAE89DAEE6E /* CMakeLists.txt */,
			);
			name = test_suite_cipher.gcm;
			sourceTree = "<group>";
		};
		A5CD04306D7F4DF59C9F5EDC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				61C07E23CA21459BA535D7A9 /* test_suite_cipher.des.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A644718976CB41AA9F917B1A /* test_suite_arc4 */ = {
			isa = PBXGroup;
			children = (
				AC462667810D41D7A86D16F9 /* Source Files */,
				FDF8285F423844FB9F00BDEA /* CMake Rules */,
				550531816FF945189BA4FBFF /* CMakeLists.txt */,
			);
			name = test_suite_arc4;
			sourceTree = "<group>";
		};
		A6C6C2E6A363469889FCFEA2 /* test_suite_xtea */ = {
			isa = PBXGroup;
			children = (
				806153CB168A404FB27725D7 /* Source Files */,
				EE5D7B7B30354028959EFB44 /* CMake Rules */,
				1AB15DF1AA414C4092615563 /* CMakeLists.txt */,
			);
			name = test_suite_xtea;
			sourceTree = "<group>";
		};
		A6C8502AD0A14ADC98780525 /* cert_write */ = {
			isa = PBXGroup;
			children = (
				B2ADE4B4BFC948C0A8D981E8 /* Source Files */,
				E91CBAD65F9A4384B2899192 /* CMakeLists.txt */,
			);
			name = cert_write;
			sourceTree = "<group>";
		};
		A7021148B5914E7499D401D8 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				752F3B9B329B4432974FF2B8 /* test_suite_pkcs5.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		A7C0AAEE440446CC8066CEBF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				7CEC9829759245D59AE446C1 /* test_suite_rsa.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		A86620680A384B0AA6B667A7 /* rsa_sign */ = {
			isa = PBXGroup;
			children = (
				F9187CA580FD467AAEBB0DD5 /* Source Files */,
				2264036866B14169AA9CDF3D /* CMakeLists.txt */,
			);
			name = rsa_sign;
			sourceTree = "<group>";
		};
		AA096B0CC83342CD8BBDA727 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				78883992930D4B1394127E47 /* crl_app.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AAFC08D22DBB401DA8B430E5 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				821CE17725B84743A758700E /* test_suite_ecdsa.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		ABC14896B88A4B9F999DE95F /* test_suite_error */ = {
			isa = PBXGroup;
			children = (
				9DA40A6A1762488E8DD1D5A4 /* Source Files */,
				8B9E510A52AF488D88772F69 /* CMake Rules */,
				4229857C34B6447DAE9D2095 /* CMakeLists.txt */,
			);
			name = test_suite_error;
			sourceTree = "<group>";
		};
		AC462667810D41D7A86D16F9 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				BB4C1FAA578748CB8EBE57AD /* test_suite_arc4.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		AC4D584E24CD430B990133C2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B8299D6AD1C04901A46D391A /* test_suite_ecp.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		ACB2CD48023F4900950912AC /* test_suite_gcm.aes256_de */ = {
			isa = PBXGroup;
			children = (
				C2D9F3A650284D19AB7145CF /* Source Files */,
				BBB4345CE0C547B282767000 /* CMake Rules */,
				55ED43448A164096857B7524 /* CMakeLists.txt */,
			);
			name = test_suite_gcm.aes256_de;
			sourceTree = "<group>";
		};
		ADE95D3D8C7446F6872E6B3B /* ssl_server2 */ = {
			isa = PBXGroup;
			children = (
				D3CE880E5CE949AEB2995847 /* Source Files */,
				9DF4D2EE8DFC48418E39E18C /* CMakeLists.txt */,
			);
			name = ssl_server2;
			sourceTree = "<group>";
		};
		ADF7098C5F6448D8A96E1EA4 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				70AF8E68D3F44464AC4A8A3C /* test_suite_cipher.camellia.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		AF225222766B4EA4A4CDB529 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				9D68D62F2720435C85C1090B /* test_suite_mpi.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		B104D4E8EDC2405BA1121979 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				83D666DA763F4D0CBD026AB1 /* test_suite_gcm.aes256_en.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		B2719A0ACDB4469DBB7CB7B1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D33561BA01D14518B93FDA4E /* dh_server.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B2ADE4B4BFC948C0A8D981E8 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				B96FC8A398884DB2906E1BA2 /* cert_write.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B2D87C9B399942858AB048F5 /* pk_encrypt */ = {
			isa = PBXGroup;
			children = (
				D2234FB4A9BA46E29BBF8249 /* Source Files */,
				1CB259B66A8B4E5AAD36529C /* CMakeLists.txt */,
			);
			name = pk_encrypt;
			sourceTree = "<group>";
		};
		B3F4D144B1824FB9A863ED85 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				715D513A1DB6416696CCE5B3 /* test_suite_ecjpake.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B4F52BFA5ED549628B55512D /* Source Files */ = {
			isa = PBXGroup;
			children = (
				5E141D1EF7AF4BC79A2954A4 /* ssl_pthread_server.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B50EA86C87BA4C86AD417E81 /* test_suite_dhm */ = {
			isa = PBXGroup;
			children = (
				93A761493F9D4334805BB468 /* Source Files */,
				89C026D4D49E4F0AA66F7402 /* CMake Rules */,
				CA05408D51464B648A1BAEBF /* CMakeLists.txt */,
			);
			name = test_suite_dhm;
			sourceTree = "<group>";
		};
		B5E92E37ECF544538CD078A2 /* Products */ = {
			isa = PBXGroup;
			children = (
				C8D7D0CDF95F4F0EA6BF6D47 /* aescrypt2 */,
				3C1A1242701F429DB4880E20 /* benchmark */,
				4C1D5EEB273B4063B5CADEBE /* cert_app */,
				2C66C66794F84675A4FE19FE /* cert_req */,
				63113D3E7F1A4170BC874A1C /* cert_write */,
				D7C78C244F054270AAA7F29C /* crl_app */,
				A80EDC134A094301939B5E87 /* crypt_and_hash */,
				A5CBB36B560B4F8B8D375DB3 /* dh_client */,
				AB11A0142B2D490DBE58B748 /* dh_genprime */,
				728C9BF911DF4E9BBC359055 /* dh_server */,
				8739254C705C41EC953BDBD7 /* dtls_client */,
				DF262E4598DF48DDA3FDD66F /* dtls_server */,
				693084299B85488594F051FD /* ecdh_curve25519 */,
				58757BE304AD487196A3D6D8 /* ecdsa */,
				BF242220E5EC46878534A33C /* gen_entropy */,
				660747D63525416581BB8C80 /* gen_key */,
				1B4CCEF99AD849DBA9F22689 /* gen_random_ctr_drbg */,
				E51D3AC0B74444B28ED5E1B9 /* gen_random_havege */,
				50024BF5AADC4EF8A50AD457 /* generic_sum */,
				42A98856DD064DB6AC4123A0 /* hello */,
				46DE811E828740A19A08752F /* key_app */,
				9F4F1F8999224651AFAFCFEB /* key_app_writer */,
				5F59E7BBA0E64F5A8D59D383 /* libmbedcrypto.a */,
				BE731BA7F98F4666959A4A0C /* libmbedtls.a */,
				EA999AABDE9240A6A2183580 /* libmbedx509.a */,
				B1504619C2554201B23D2E32 /* mini_client */,
				6B918F37BBE74DCB95303A34 /* mpi_demo */,
				6F5F63FC67E24290BE513F97 /* pem2der */,
				E22B9BAC736046A7B83A54C6 /* pk_decrypt */,
				4739A311703A45B8A9BAEACC /* pk_encrypt */,
				51F215EFAB434DEE8C8CA223 /* pk_sign */,
				D1273332224448EC8736E180 /* pk_verify */,
				856879F31ED64705B91144F6 /* req_app */,
				9641C903129A4CCEB5B04EF0 /* rsa_decrypt */,
				0702BD73F32842C7944C390F /* rsa_encrypt */,
				DCF8932662D542C2BEA108B1 /* rsa_genkey */,
				4DABE23A986B49C8A98B267A /* rsa_sign */,
				7C008597F3D943DA8A219F7A /* rsa_sign_pss */,
				766F7A96EEF14A3B86A86A36 /* rsa_verify */,
				2B684563732148BAB5569E47 /* rsa_verify_pss */,
				7D71D51E5D714FE0809EC874 /* selftest */,
				22495A5577C947988123A7AF /* ssl_cert_test */,
				FF698AE74E034FE79A6E06F0 /* ssl_client1 */,
				9AD0793B8651412C8E65528E /* ssl_client2 */,
				BD05F7A9D0C24372BBBCA71F /* ssl_fork_server */,
				1A26FFC38F9F4DD0A78AB534 /* ssl_mail_client */,
				1CC46F04EC9C49DFA302ACFC /* ssl_pthread_server */,
				2C934C09348542418CADA280 /* ssl_server */,
				07BDF6E24548444E9ABDC140 /* ssl_server2 */,
				FB2621E1D8C140D9A8939829 /* strerror */,
				143B325AE9294E38B26E2427 /* test_suite_aes.cbc */,
				D05065F3EC324E2E860F493E /* test_suite_aes.cfb */,
				4CD99A1DD5C94610B621A819 /* test_suite_aes.ecb */,
				05458EC12FB7489DAEAEA408 /* test_suite_aes.rest */,
				3E70868A57C64D7398D43F3F /* test_suite_arc4 */,
				359072775D1B4315935F175B /* test_suite_asn1write */,
				92A1CDF0EA2F4C21AD4A36A2 /* test_suite_base64 */,
				1F5124314AAA4210B04A39A3 /* test_suite_blowfish */,
				C6B8ADAC38F04FE3A09F92FD /* test_suite_camellia */,
				2386413D411A49EBA7D0DCE9 /* test_suite_ccm */,
				52B0F3EC04A447D6B9F0D88D /* test_suite_cipher.aes */,
				9545CBC267604769AC06C2D0 /* test_suite_cipher.arc4 */,
				7E8F2E1336A94995B37BFA74 /* test_suite_cipher.blowfish */,
				7EB8B728F31549068C9D3904 /* test_suite_cipher.camellia */,
				596B8B79A49543CCBBCD4154 /* test_suite_cipher.ccm */,
				7DB064CC67F643BAA765228D /* test_suite_cipher.des */,
				CF8062C79A25423494C2333B /* test_suite_cipher.gcm */,
				A86B31505C2E4DE7B86C4136 /* test_suite_cipher.null */,
				3B3BBAC0157F4B0B859F7034 /* test_suite_cipher.padding */,
				1165468592BE4A94BA336D99 /* test_suite_cmac */,
				AEA5F6B8B4C1466B86A90A70 /* test_suite_ctr_drbg */,
				8F598658032848628FE981AB /* test_suite_debug */,
				CB28AAF3D3FB4CE9AC34578E /* test_suite_des */,
				23D10C9BC4D84F0C9762F2A4 /* test_suite_dhm */,
				BC5F90F7C2FA49B181D4892B /* test_suite_ecdh */,
				4D3D201704994955BDD7E6D3 /* test_suite_ecdsa */,
				3B060DB4B4EE4A4DBBBFBCF2 /* test_suite_ecjpake */,
				857B4BD51648433E98CD97F7 /* test_suite_ecp */,
				05B41BA11EE84C62B2F8A6FF /* test_suite_entropy */,
				576BAE17F12C468BB0C83F0E /* test_suite_error */,
				A4EC39F49F0D4E3BA16F02CD /* test_suite_gcm.aes128_de */,
				37BC8214ACF8433DA010A575 /* test_suite_gcm.aes128_en */,
				5F085A71EC52428380BF15E9 /* test_suite_gcm.aes192_de */,
				C392103CA09444BC946AF408 /* test_suite_gcm.aes192_en */,
				217DC98C3AD947A2AC7088D6 /* test_suite_gcm.aes256_de */,
				838D89478A5F4C768237EA75 /* test_suite_gcm.aes256_en */,
				D706A0FED6464D4986336D0B /* test_suite_gcm.camellia */,
				FD1E7E2C5F0F4A7282DE3F71 /* test_suite_hmac_drbg.misc */,
				0B56103A02DB41F4919ACD5E /* test_suite_hmac_drbg.no_reseed */,
				399EBEE336754F53B7DEBACF /* test_suite_hmac_drbg.nopr */,
				7ACBBBF62DAF4B0CAB4E6DBC /* test_suite_hmac_drbg.pr */,
				D4AD98F4EA0C4240A0270B4D /* test_suite_md */,
				5E095CC6EDCB46ECBD1891EF /* test_suite_mdx */,
				596B3F6DD9D94E0FA04F05EA /* test_suite_memory_buffer_alloc */,
				BB5BD0F2C665423A92B0605D /* test_suite_mpi */,
				DCD8BC4A63F24CFAB059B6DD /* test_suite_pem */,
				02167C6C4441441E80EC8D4C /* test_suite_pk */,
				BEFBEC684C4B4D709E621AF9 /* test_suite_pkcs1_v15 */,
				306EE3B6124345A5A3696F40 /* test_suite_pkcs1_v21 */,
				4ECDB44651684DB0B3340DDD /* test_suite_pkcs5 */,
				4EF9972F49174F44A2FBEEC7 /* test_suite_pkparse */,
				7A1F00AACD2246A99BF61DBE /* test_suite_pkwrite */,
				85556E6C9347462DB51D7B07 /* test_suite_rsa */,
				FBC3DA9CD3934752A00B10B9 /* test_suite_shax */,
				FAD44B45F0214DF6A18D80A2 /* test_suite_ssl */,
				382CF7EFEF2241D7B09C04B5 /* test_suite_timing */,
				D2384EC4BBF14B328859F6AF /* test_suite_version */,
				ED1215FE0E4146D7810033D6 /* test_suite_x509parse */,
				8E8B05F77DE94B689A84AD02 /* test_suite_x509write */,
				5F686B1BAC244565AB459880 /* test_suite_xtea */,
				7C17987A6C004B09BF4FA727 /* udp_proxy */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		B6BAE9388C9F475B9C2F2F6F /* test_suite_pkwrite */ = {
			isa = PBXGroup;
			children = (
				BE37A8FB98424FB5950F8914 /* Source Files */,
				EDDFC6477BA9489FA20A415D /* CMake Rules */,
				09A924C71BF045E2979EC9DC /* CMakeLists.txt */,
			);
			name = test_suite_pkwrite;
			sourceTree = "<group>";
		};
		B74B04C2DA514793B1CE668C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D153E5E466D74EA19222BD6A /* test_suite_hmac_drbg.misc.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B9338D5CCD0B4DDF898A4419 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				DEE5A130E1FF4067AEABBDC5 /* cert_req.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		B975E1F4724D41FD8F99F060 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				7D4B336BA9EB4D34AF80F1DE /* test_suite_ctr_drbg.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		BA054E27F27C44FB8799861E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				036CD3ACA7624BCCBDDC8B6D /* dh_genprime.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BB11C9035A6440FC9B25411A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				A3210F69BE054BD280F8EA34 /* test_suite_aes.ecb.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		BB66706299FD4108A44A05D0 /* test_suite_aes.cbc */ = {
			isa = PBXGroup;
			children = (
				1539B5CE17B9484880C480AC /* Source Files */,
				214B699E96494E5B84AFC18A /* CMake Rules */,
				793C028D63524064B235ADFD /* CMakeLists.txt */,
			);
			name = test_suite_aes.cbc;
			sourceTree = "<group>";
		};
		BBB4345CE0C547B282767000 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				F07694D9718F404DAB0973D6 /* test_suite_gcm.aes256_de.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		BE3010AAC74143B98CB71631 /* mini_client */ = {
			isa = PBXGroup;
			children = (
				41E2970F11BA44B890A75EB5 /* Source Files */,
				720868E16B354A5D8D995B24 /* CMakeLists.txt */,
			);
			name = mini_client;
			sourceTree = "<group>";
		};
		BE37A8FB98424FB5950F8914 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				C230E5B68BED49FB8216E229 /* test_suite_pkwrite.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		BED6E36448BF4518973663EE /* test_suite_mdx */ = {
			isa = PBXGroup;
			children = (
				692DA8995BA947DEABA8ED96 /* Source Files */,
				7A9BDFC6C1304B15B300A890 /* CMake Rules */,
				E9709B97A62D4F3285F8E39E /* CMakeLists.txt */,
			);
			name = test_suite_mdx;
			sourceTree = "<group>";
		};
		BEE29A8074134A3E9322FD12 /* test_suite_pkcs5 */ = {
			isa = PBXGroup;
			children = (
				E013D09C40374299B353E3C1 /* Source Files */,
				A7021148B5914E7499D401D8 /* CMake Rules */,
				35853B533E6E4D8087FD4236 /* CMakeLists.txt */,
			);
			name = test_suite_pkcs5;
			sourceTree = "<group>";
		};
		BFC414C8D6BC4693B894F160 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				62E70722E84344D3A59F3A0B /* dh_client.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C03EDAD4308245D9A90D2BA5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				CBA3408ABC6B45ADAFF6DCA7 /* cert_app.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C09E45D490B642C68B97D86B /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				893E7A97DBAC43BA9D017649 /* test_suite_cipher.arc4.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		C1C67EA0764649BA8A183F94 /* test_suite_asn1write */ = {
			isa = PBXGroup;
			children = (
				6E02A9A6ED6D4855BFFC792D /* Source Files */,
				EAC58661DADD44CF90FDA0F8 /* CMake Rules */,
				DF9A11E52C024E9199A182BB /* CMakeLists.txt */,
			);
			name = test_suite_asn1write;
			sourceTree = "<group>";
		};
		C2332268B852496391DBF317 /* aescrypt2 */ = {
			isa = PBXGroup;
			children = (
				109AC6F27C9A4719B2F5175A /* Source Files */,
				84AB588BAAA44C439250E15A /* CMakeLists.txt */,
			);
			name = aescrypt2;
			sourceTree = "<group>";
		};
		C2D9F3A650284D19AB7145CF /* Source Files */ = {
			isa = PBXGroup;
			children = (
				96C99F95A526495AB35CBC76 /* test_suite_gcm.aes256_de.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C3424CC2B59D4292AC35491A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0A1A05318572496A91C96F22 /* test_suite_cipher.camellia.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C3E005460662425DB84CF53E /* Source Files */ = {
			isa = PBXGroup;
			children = (
				33962C71008248968D1A6ADF /* ssl_fork_server.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		C49A2D575721416386D4B15B /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				2F1E937953B84DD989112558 /* test_suite_memory_buffer_alloc.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		C5A4756F043F4C1D902E96D1 /* test_suite_cipher.ccm */ = {
			isa = PBXGroup;
			children = (
				8858DA3857174BA5B95E0D74 /* Source Files */,
				EF992552B1E2499897258EDB /* CMake Rules */,
				E6665647B703442395F00631 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.ccm;
			sourceTree = "<group>";
		};
		C715A1D53DA24D41B68BE30A /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				840BF6B622DB47958E20E335 /* test_suite_pkcs1_v21.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		CAA5DCF357424219A569555C /* test_suite_gcm.aes192_en */ = {
			isa = PBXGroup;
			children = (
				3ED8E95663A449EEBF7213BB /* Source Files */,
				9A59158C2F9942A1A093516A /* CMake Rules */,
				05DD32622434453B97D8591F /* CMakeLists.txt */,
			);
			name = test_suite_gcm.aes192_en;
			sourceTree = "<group>";
		};
		CB891A26D3254E57819DE777 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				709EE4943773465689B68D80 /* test_suite_mpi.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		CC85BE4ABA074B05A346B6D3 /* mbedtls */ = {
			isa = PBXGroup;
			children = (
				8A97BD65C8E94F1FACFD3586 /* Source Files */,
				2D566DFF80974338B770751D /* CMakeLists.txt */,
			);
			name = mbedtls;
			sourceTree = "<group>";
		};
		CE1339DBFFEF4FBAAE0E8A60 /* test_suite_x509write */ = {
			isa = PBXGroup;
			children = (
				FE2400021D4D481DA6938133 /* Source Files */,
				FE11A948E81D43A0853CE95D /* CMake Rules */,
				C5AA747F1D544E968202EFCB /* CMakeLists.txt */,
			);
			name = test_suite_x509write;
			sourceTree = "<group>";
		};
		CF61031D49AE49468A9BCFF7 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		CFAEAB3B0BDC42A0ABC9938B /* test_suite_des */ = {
			isa = PBXGroup;
			children = (
				0CD8CA3E231A47BFBB81BFCB /* Source Files */,
				1D788E53866F414AA59CFA6D /* CMake Rules */,
				EE48F8DBFC21411A93307CDA /* CMakeLists.txt */,
			);
			name = test_suite_des;
			sourceTree = "<group>";
		};
		D000BA2BBBDA4885B839FE2B /* test_suite_ecp */ = {
			isa = PBXGroup;
			children = (
				AC4D584E24CD430B990133C2 /* Source Files */,
				3AA907FC18664998BBFCE6D1 /* CMake Rules */,
				11B83123AC6C4982A6FCE631 /* CMakeLists.txt */,
			);
			name = test_suite_ecp;
			sourceTree = "<group>";
		};
		D0058EB18AF94A02B4E83631 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F73A9A6200E140AE8D032B89 /* test_suite_gcm.aes192_de.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D0182D4BC5154B58AC0E4F67 /* test_suite_cipher.blowfish */ = {
			isa = PBXGroup;
			children = (
				00E8B1C9E9C64F6CAFC168E2 /* Source Files */,
				D65A4FC770A34B47BDC5C1AB /* CMake Rules */,
				18442E91F6F5405E8469F418 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.blowfish;
			sourceTree = "<group>";
		};
		D126E76D428444239D74B9B6 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0015A61896EB43D5B5B41409 /* test_suite_hmac_drbg.no_reseed.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D211AB7649A74C2B9A280EE4 /* test_suite_cipher.aes */ = {
			isa = PBXGroup;
			children = (
				85E8E7FF4DFA4695ADC48F0C /* Source Files */,
				079D9422342C4D7FA5CA3BBB /* CMake Rules */,
				A35FBA9808E84AF084195AE9 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.aes;
			sourceTree = "<group>";
		};
		D2234FB4A9BA46E29BBF8249 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E25586197DB841F196952F75 /* pk_encrypt.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D29044ED55B2414491A62F9E /* ecdsa */ = {
			isa = PBXGroup;
			children = (
				616BC5CA53904EF7A0BF3015 /* Source Files */,
				FA4D4B6548CB4FFF88996E63 /* CMakeLists.txt */,
			);
			name = ecdsa;
			sourceTree = "<group>";
		};
		D2CA09719FBD4CD38CDA9B44 /* udp_proxy */ = {
			isa = PBXGroup;
			children = (
				6AEE69DDB1BD403A928B22B5 /* Source Files */,
				A6392A55863F4E54B5C05038 /* CMakeLists.txt */,
			);
			name = udp_proxy;
			sourceTree = "<group>";
		};
		D30B2C7EFB74443788C212F8 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				7D582617557847FD87659C89 /* test_suite_pkparse.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		D3C12175C24F486CA75E334D /* test_suite_hmac_drbg.pr */ = {
			isa = PBXGroup;
			children = (
				E30D9A98F7E941CA84B10E47 /* Source Files */,
				10B0956645EA426CB0D66E58 /* CMake Rules */,
				077DAEB8198D4853B6BCD5B9 /* CMakeLists.txt */,
			);
			name = test_suite_hmac_drbg.pr;
			sourceTree = "<group>";
		};
		D3CE880E5CE949AEB2995847 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D4A2D44DF6504B49B71C8C9A /* ssl_server2.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D54F6B919317415386BF2F2F /* key_app_writer */ = {
			isa = PBXGroup;
			children = (
				4E5EF503579244CC8A6A7775 /* Source Files */,
				D784B627EC2644779B4A5240 /* CMakeLists.txt */,
			);
			name = key_app_writer;
			sourceTree = "<group>";
		};
		D65A4FC770A34B47BDC5C1AB /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				DEEF9639FEE744CE9DD72EBC /* test_suite_cipher.blowfish.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		D6C9DC8F9A7444DAB32026C5 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				664DFF9E94654C168BE63B37 /* test_suite_hmac_drbg.misc.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		D87034C64B254937B283DF3C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				621206137AD74CB4BA77EC10 /* test_suite_cipher.padding.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		D8CF474D54F34BE68011E12C /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				2CE371D97412443083F0E79D /* test_suite_md.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		D9BCDAF5191B45B198D47787 /* test_suite_pem */ = {
			isa = PBXGroup;
			children = (
				3360CB5E716149B09D1D3C9B /* Source Files */,
				EB89468B78CA417F88212741 /* CMake Rules */,
				A38D44FE7789437680B7C946 /* CMakeLists.txt */,
			);
			name = test_suite_pem;
			sourceTree = "<group>";
		};
		DB18331B76AF4804B6B94EEC /* Source Files */ = {
			isa = PBXGroup;
			children = (
				153C4EEC335D487FB315614C /* test_suite_ccm.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		DB7D11FD16B24B208624885A /* Source Files */ = {
			isa = PBXGroup;
			children = (
				2F4635F12E754D1B96F73091 /* test_suite_aes.cfb.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		DC0B08D503F448138FDEA07F /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		DF8A321DE497480E83B49B78 /* dtls_server */ = {
			isa = PBXGroup;
			children = (
				EB759E9ACABA427A9C8F7B04 /* Source Files */,
				6079EAE84959483E939A14DA /* CMakeLists.txt */,
			);
			name = dtls_server;
			sourceTree = "<group>";
		};
		E013D09C40374299B353E3C1 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				0B2B66389EAF4397950515D4 /* test_suite_pkcs5.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E0DF5B37BF494A47997893F7 /* test_suite_pkcs1_v15 */ = {
			isa = PBXGroup;
			children = (
				0AA00B0A614A4281BA9FCA62 /* Source Files */,
				42C2EA71300443429318E0B1 /* CMake Rules */,
				AEA60A0BCE6845A1AA0907BA /* CMakeLists.txt */,
			);
			name = test_suite_pkcs1_v15;
			sourceTree = "<group>";
		};
		E226889445584CBAA7CDD3E0 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				000F4BC0EE2A4B9987AAEA84 /* test_suite_version.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E270FC05CD4F45FCB05DE7BE /* test_suite_cipher.camellia */ = {
			isa = PBXGroup;
			children = (
				C3424CC2B59D4292AC35491A /* Source Files */,
				ADF7098C5F6448D8A96E1EA4 /* CMake Rules */,
				2C10935D0E9B47A8957E2810 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.camellia;
			sourceTree = "<group>";
		};
		E2A4200397534088AAB86369 /* test_suite_mpi */ = {
			isa = PBXGroup;
			children = (
				CB891A26D3254E57819DE777 /* Source Files */,
				AF225222766B4EA4A4CDB529 /* CMake Rules */,
				B6B34A0FE3D54565935208AD /* CMakeLists.txt */,
			);
			name = test_suite_mpi;
			sourceTree = "<group>";
		};
		E2B97E9B86B6445A9E64D515 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				1747609B85A445909B2A56E0 /* test_suite_shax.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		E30D9A98F7E941CA84B10E47 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				90CFA0F800E840DD897ABF77 /* test_suite_hmac_drbg.pr.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E4670E2013E043EB8AA72CD3 /* test_suite_entropy */ = {
			isa = PBXGroup;
			children = (
				F13BCF3DA47F4B6A88478DD2 /* Source Files */,
				4BC66D2D08B54177B79EE45E /* CMake Rules */,
				BAD6D6ABBC7E4FA68F13DE69 /* CMakeLists.txt */,
			);
			name = test_suite_entropy;
			sourceTree = "<group>";
		};
		E4E80A677103472194BE7B8B /* Source Files */ = {
			isa = PBXGroup;
			children = (
				99C743D81F2E444AB5CA94BB /* test_suite_ssl.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		E65E56E7B7C6465E98CC228A /* test_suite_cipher.null */ = {
			isa = PBXGroup;
			children = (
				78A700A6965E49639862DBF5 /* Source Files */,
				FF55DE945BE543F0993F8DE9 /* CMake Rules */,
				217268397BF448F599D6D42A /* CMakeLists.txt */,
			);
			name = test_suite_cipher.null;
			sourceTree = "<group>";
		};
		EAC58661DADD44CF90FDA0F8 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				64FF217E0D864F928D1E2B07 /* test_suite_asn1write.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		EB759E9ACABA427A9C8F7B04 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				E010FAACB7F74ABBB853C9DB /* dtls_server.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		EB89468B78CA417F88212741 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				7CBA1254F8CB46A2B2735039 /* test_suite_pem.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		EBC7472B4DE44FD18A262E32 /* test_suite_aes.rest */ = {
			isa = PBXGroup;
			children = (
				6A2B010B0A47444582F86A5A /* Source Files */,
				6EC33E8A7F224117B98AD215 /* CMake Rules */,
				B00EF9ACCDDA4613AA1B74B2 /* CMakeLists.txt */,
			);
			name = test_suite_aes.rest;
			sourceTree = "<group>";
		};
		EDDFC6477BA9489FA20A415D /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				6FE3F6E97F9F4F2498512E59 /* test_suite_pkwrite.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		EE5D7B7B30354028959EFB44 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				5E93B941A56E4C418EEE518F /* test_suite_xtea.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		EE9A142DEBD946ECA17BE8FB /* crypt_and_hash */ = {
			isa = PBXGroup;
			children = (
				4145345B8C3844DFBEC0179F /* Source Files */,
				8B47A785D93A42D9B1EAD53D /* CMakeLists.txt */,
			);
			name = crypt_and_hash;
			sourceTree = "<group>";
		};
		EF1B07EA08AF4C30AFF49990 /* ssl_cert_test */ = {
			isa = PBXGroup;
			children = (
				3135BC42C803452DB6AF6B3F /* Source Files */,
				BEC43F76000A496A8F43AC46 /* CMakeLists.txt */,
			);
			name = ssl_cert_test;
			sourceTree = "<group>";
		};
		EF992552B1E2499897258EDB /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				C2668D410D0442968C772B63 /* test_suite_cipher.ccm.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		F13BCF3DA47F4B6A88478DD2 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				F5E2E15B9BA64F57BC8AC25B /* test_suite_entropy.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F1B9856619A0444BA0C12126 /* memcheck */ = {
			isa = PBXGroup;
			children = (
				9D208A399F4D4F16A2582D6C /* CMake Rules */,
				8A782A54C58942A8AC85C37E /* CMakeLists.txt */,
			);
			name = memcheck;
			sourceTree = "<group>";
		};
		F315FB59D86149FC9A4B0E2A /* rsa_sign_pss */ = {
			isa = PBXGroup;
			children = (
				924B9354B3444836B85046DE /* Source Files */,
				1C1341B4C7CB4CB0B184F7A7 /* CMakeLists.txt */,
			);
			name = rsa_sign_pss;
			sourceTree = "<group>";
		};
		F391C90604964A1AB9776F55 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				88D6BF8452A045469F483E08 /* test_suite_ecdh.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		F4C027B08CBA448299497CF8 /* rsa_verify */ = {
			isa = PBXGroup;
			children = (
				1509569D442E4A12BF42F5F7 /* Source Files */,
				547A1BDC4ED640739ED78909 /* CMakeLists.txt */,
			);
			name = rsa_verify;
			sourceTree = "<group>";
		};
		F69D700989A34011A7B86B32 /* test_suite_ecjpake */ = {
			isa = PBXGroup;
			children = (
				B3F4D144B1824FB9A863ED85 /* Source Files */,
				053A53C9E67843778AC590D6 /* CMake Rules */,
				E9B2A9925E6149959B763CE7 /* CMakeLists.txt */,
			);
			name = test_suite_ecjpake;
			sourceTree = "<group>";
		};
		F77991CD5AF74C01AD1DB47E /* test_suite_version */ = {
			isa = PBXGroup;
			children = (
				E226889445584CBAA7CDD3E0 /* Source Files */,
				9A97B2B8D27E4758AFCF19E8 /* CMake Rules */,
				F47A24396B324D5EB1CF5CD6 /* CMakeLists.txt */,
			);
			name = test_suite_version;
			sourceTree = "<group>";
		};
		F7ED715962594F9483F6F730 /* rsa_genkey */ = {
			isa = PBXGroup;
			children = (
				211F73AF5C2146A6A39A644D /* Source Files */,
				21E8215920F34C3E850AE59B /* CMakeLists.txt */,
			);
			name = rsa_genkey;
			sourceTree = "<group>";
		};
		F7FEB8386D2D484DB885558D /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		F88AB2AD2DD04386ABD041D3 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				276443A652BE48948B582FAB /* test_suite_gcm.aes128_de.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		F906183E45AE4D03A64E7C9B /* test_suite_hmac_drbg.nopr */ = {
			isa = PBXGroup;
			children = (
				71533190733A46649453F85B /* Source Files */,
				9AADA2E9120840B3A06B2635 /* CMake Rules */,
				BA80607E2767416EA4D8345F /* CMakeLists.txt */,
			);
			name = test_suite_hmac_drbg.nopr;
			sourceTree = "<group>";
		};
		F9187CA580FD467AAEBB0DD5 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				D2E19F32242B4BABA4CDE56B /* rsa_sign.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FB5B39F6265F45CF88F0F355 /* ALL_BUILD */ = {
			isa = PBXGroup;
			children = (
				CF61031D49AE49468A9BCFF7 /* CMake Rules */,
				260C4203EB084DD4A473CC2C /* CMakeLists.txt */,
			);
			name = ALL_BUILD;
			sourceTree = "<group>";
		};
		FD6C0EC4B67B4B65BB06B6F3 /* test_suite_cipher.padding */ = {
			isa = PBXGroup;
			children = (
				D87034C64B254937B283DF3C /* Source Files */,
				9C98C400B5FA4692806CBAF6 /* CMake Rules */,
				C39FD3F73CCC4B10B8913812 /* CMakeLists.txt */,
			);
			name = test_suite_cipher.padding;
			sourceTree = "<group>";
		};
		FDD33D48B6814A4BA9F99F64 /* test_suite_gcm.aes128_de */ = {
			isa = PBXGroup;
			children = (
				F88AB2AD2DD04386ABD041D3 /* Source Files */,
				6A500B08617A48BBB0C546AF /* CMake Rules */,
				AE646F07AA8D40B28C748C02 /* CMakeLists.txt */,
			);
			name = test_suite_gcm.aes128_de;
			sourceTree = "<group>";
		};
		FDF8285F423844FB9F00BDEA /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				72DC2A87820E4E42A77B1344 /* test_suite_arc4.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		FE11A948E81D43A0853CE95D /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				546F8762D3DD496AB7D92CE1 /* test_suite_x509write.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
		FE2400021D4D481DA6938133 /* Source Files */ = {
			isa = PBXGroup;
			children = (
				8CA3AB11033845F991805631 /* test_suite_x509write.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FE9B5A94D4734A16B7AE984C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				14235E06DBB84CCC9416E073 /* key_app.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FF1510EFEA6F4D37B0B1E81C /* Source Files */ = {
			isa = PBXGroup;
			children = (
				57B6610E60AC4C9E8759FB9B /* test_suite_gcm.aes256_en.c */,
			);
			name = "Source Files";
			sourceTree = "<group>";
		};
		FF55DE945BE543F0993F8DE9 /* CMake Rules */ = {
			isa = PBXGroup;
			children = (
				BC4AEFC904D54A509E06CEEE /* test_suite_cipher.null.c.rule */,
			);
			name = "CMake Rules";
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		008A9E384E8DA4A85DFF13C9 /* test_suite_aes.cfb */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 938F89133EF94E8EAC61C0E3 /* Build configuration list for PBXNativeTarget "test_suite_aes.cfb" */;
			buildPhases = (
				2B8CD53BFCC8AD5E91490795 /* Generate tests/test_suite_aes.cfb.c */,
				1FACAB8FCB09435993BDD0EB /* Sources */,
				FC32EEA44F3348669DF14BA1 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E1BF21812D5A4369935AC79C /* PBXTargetDependency */,
				FE7BBDAE6AF94DE59265B21B /* PBXTargetDependency */,
				66FC897848024F93A37C30EB /* PBXTargetDependency */,
				5601211CCEEF4BEABAC81ADD /* PBXTargetDependency */,
			);
			name = test_suite_aes.cfb;
			productName = test_suite_aes.cfb;
			productReference = D05065F3EC324E2E860F493E /* test_suite_aes.cfb */;
			productType = "com.apple.product-type.tool";
		};
		0A017AD8134DD8776A6E53C5 /* ecdsa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 07141164C54C453FB07CDF95 /* Build configuration list for PBXNativeTarget "ecdsa" */;
			buildPhases = (
				09F5B3FFE60943DF98EA3A5E /* Sources */,
				F7EF1F89101B4D3DA8B7CBB0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B36B425CF16D473F9A894344 /* PBXTargetDependency */,
				A996CB53E59E4D7AA2A1D3AA /* PBXTargetDependency */,
				02632CA8BB9E4841A3A3833A /* PBXTargetDependency */,
				F3E0F45AAACF41CCA6E24862 /* PBXTargetDependency */,
			);
			name = ecdsa;
			productName = ecdsa;
			productReference = 58757BE304AD487196A3D6D8 /* ecdsa */;
			productType = "com.apple.product-type.tool";
		};
		0A215FCBFCBE27F4EDE16C33 /* rsa_verify */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F303FA01B9F94564ADD85733 /* Build configuration list for PBXNativeTarget "rsa_verify" */;
			buildPhases = (
				8B4064A81CA74781AA2E103E /* Sources */,
				F320AD785FC546B3ABF3B355 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				ADDC67C3ADD642E69D9F46EB /* PBXTargetDependency */,
				D8E8356452EE4DE59120118E /* PBXTargetDependency */,
				F7BA14A204C94C99ADCBF5FD /* PBXTargetDependency */,
				42A6EB259A1E40D8887CE75A /* PBXTargetDependency */,
			);
			name = rsa_verify;
			productName = rsa_verify;
			productReference = 766F7A96EEF14A3B86A86A36 /* rsa_verify */;
			productType = "com.apple.product-type.tool";
		};
		0D70FB16A98363CE6F52832B /* dh_server */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7DD3D9DB7DA84A9AA423BBD2 /* Build configuration list for PBXNativeTarget "dh_server" */;
			buildPhases = (
				A3C046D3A8D74D208640DEF5 /* Sources */,
				4336644EE2DC428AB18505D6 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				4C3F6E39FAF14B1CB75858E7 /* PBXTargetDependency */,
				27BA1A19B3BE449FBCFE6D81 /* PBXTargetDependency */,
				4C2D670951A646EDAE606505 /* PBXTargetDependency */,
				56BB393B32594A23A995609A /* PBXTargetDependency */,
			);
			name = dh_server;
			productName = dh_server;
			productReference = 728C9BF911DF4E9BBC359055 /* dh_server */;
			productType = "com.apple.product-type.tool";
		};
		0FB7C2E8279DFF9ABD38E2F7 /* selftest */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = ADD0B8DD9DF3420AAE1A97A2 /* Build configuration list for PBXNativeTarget "selftest" */;
			buildPhases = (
				48914301C648471F8861D4CA /* Sources */,
				231705C03D8749748ADE3A19 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				4BB5C2EE4D214EA0B2176333 /* PBXTargetDependency */,
				19CE86BCB61B448B88184BF5 /* PBXTargetDependency */,
				F7134261E7A6473D9D186494 /* PBXTargetDependency */,
				C6997934F9E24DAA8D710BDA /* PBXTargetDependency */,
			);
			name = selftest;
			productName = selftest;
			productReference = 7D71D51E5D714FE0809EC874 /* selftest */;
			productType = "com.apple.product-type.tool";
		};
		1330062EFA274740C37DF730 /* test_suite_ccm */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1F8EFA42992E4E6A9466193D /* Build configuration list for PBXNativeTarget "test_suite_ccm" */;
			buildPhases = (
				107156E0549AA579654FEFD2 /* Generate tests/test_suite_ccm.c */,
				12A103CDF0FF4E809517B3CA /* Sources */,
				372F64B02555486DB9786FD7 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				7CAA5AFCEFDD4AD38F40BA2F /* PBXTargetDependency */,
				B7D1C8157B9D4639B0E4F411 /* PBXTargetDependency */,
				479FD99B9A204765A312D783 /* PBXTargetDependency */,
				23A363168751480891BCCBF7 /* PBXTargetDependency */,
			);
			name = test_suite_ccm;
			productName = test_suite_ccm;
			productReference = 2386413D411A49EBA7D0DCE9 /* test_suite_ccm */;
			productType = "com.apple.product-type.tool";
		};
		136E46FB73D7A21210B142F3 /* rsa_decrypt */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 82F02C749087480E9DB7B314 /* Build configuration list for PBXNativeTarget "rsa_decrypt" */;
			buildPhases = (
				9CE6F1C4DE434AA8B1F413DF /* Sources */,
				BD5F717DE86146ADA603BCDC /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				8D4D2D57DBDD4FE78E34BD2D /* PBXTargetDependency */,
				07E09CD27CBF419CA26D83F7 /* PBXTargetDependency */,
				9A342F210FB546EEB45F6F63 /* PBXTargetDependency */,
				6C59D686A17C4771AD504972 /* PBXTargetDependency */,
			);
			name = rsa_decrypt;
			productName = rsa_decrypt;
			productReference = 9641C903129A4CCEB5B04EF0 /* rsa_decrypt */;
			productType = "com.apple.product-type.tool";
		};
		14A4C602FAE16D0524B04982 /* ssl_cert_test */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2F06329BFA044BB3BE52B1F6 /* Build configuration list for PBXNativeTarget "ssl_cert_test" */;
			buildPhases = (
				6EEC07DC67484B89A067C757 /* Sources */,
				27F11DB1015347EDB291A327 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				0DB259DEDD0C4B278DB72446 /* PBXTargetDependency */,
				80F6108809E0486EA55C8254 /* PBXTargetDependency */,
				FC34F3FCD242462F852004E7 /* PBXTargetDependency */,
				F7C383DF0F044A1BBBBD0CB1 /* PBXTargetDependency */,
			);
			name = ssl_cert_test;
			productName = ssl_cert_test;
			productReference = 22495A5577C947988123A7AF /* ssl_cert_test */;
			productType = "com.apple.product-type.tool";
		};
		1528D30F8C106F5845A3A178 /* gen_random_ctr_drbg */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 79D7F83B026A469EBB18D1A0 /* Build configuration list for PBXNativeTarget "gen_random_ctr_drbg" */;
			buildPhases = (
				8657272B5E9E4B7592607F92 /* Sources */,
				E1580B6BE6E547EEA5EEDFE3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C7A7B00859CC4A278D60E393 /* PBXTargetDependency */,
				77A9B1602EE941E1A0E6F222 /* PBXTargetDependency */,
				4EB223B27CF641B0A2D704C0 /* PBXTargetDependency */,
				AD4714D88AEA42998F57521F /* PBXTargetDependency */,
			);
			name = gen_random_ctr_drbg;
			productName = gen_random_ctr_drbg;
			productReference = 1B4CCEF99AD849DBA9F22689 /* gen_random_ctr_drbg */;
			productType = "com.apple.product-type.tool";
		};
		18E37844854DC1695D909C74 /* test_suite_cipher.arc4 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 223D332BEA834E7C9FAA91EA /* Build configuration list for PBXNativeTarget "test_suite_cipher.arc4" */;
			buildPhases = (
				3A834B9BE8AF543450A4715D /* Generate tests/test_suite_cipher.arc4.c */,
				4238301CDFE44C0E8AECAEDA /* Sources */,
				EEEE4854B8B0498299BEB50E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3C046E2A4C684A3AB30F92F5 /* PBXTargetDependency */,
				94B9EA163AF44986A95FC694 /* PBXTargetDependency */,
				AA941FE5093149EFBBC5C697 /* PBXTargetDependency */,
				DB832CA829BD4A16860A46C4 /* PBXTargetDependency */,
			);
			name = test_suite_cipher.arc4;
			productName = test_suite_cipher.arc4;
			productReference = 9545CBC267604769AC06C2D0 /* test_suite_cipher.arc4 */;
			productType = "com.apple.product-type.tool";
		};
		1CBC5D71370311E6C7800DF3 /* test_suite_ecjpake */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0B931622CEC848CDB81B0E5D /* Build configuration list for PBXNativeTarget "test_suite_ecjpake" */;
			buildPhases = (
				0E9C92FE640135A8A58E42C2 /* Generate tests/test_suite_ecjpake.c */,
				A8B8FCDF493C46ADAA67D724 /* Sources */,
				3B83EFFC81D44CFC92DBB314 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				0C659A790C4A4709BD7DFE6A /* PBXTargetDependency */,
				0DEA16F2225D4B639F799B2F /* PBXTargetDependency */,
				7554FE36CEAE4F4398B3CE9D /* PBXTargetDependency */,
				F6730FE403A846629A34ACB5 /* PBXTargetDependency */,
			);
			name = test_suite_ecjpake;
			productName = test_suite_ecjpake;
			productReference = 3B060DB4B4EE4A4DBBBFBCF2 /* test_suite_ecjpake */;
			productType = "com.apple.product-type.tool";
		};
		1EB1C7A69382063DD1DFBAAE /* test_suite_timing */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 83304D1605C046DC80779268 /* Build configuration list for PBXNativeTarget "test_suite_timing" */;
			buildPhases = (
				975D401E8614B1EF1B9D2CC7 /* Generate tests/test_suite_timing.c */,
				9B513C24458241AC8D651DD0 /* Sources */,
				F7580FA78D1747D1B9A96482 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B433C1D556464199A3B2424D /* PBXTargetDependency */,
				8182E54EB0A54CDE941E299B /* PBXTargetDependency */,
				DEEB0D3C79C04D5F88CD2CF0 /* PBXTargetDependency */,
				3F73865D48714E6B89CF385C /* PBXTargetDependency */,
			);
			name = test_suite_timing;
			productName = test_suite_timing;
			productReference = 382CF7EFEF2241D7B09C04B5 /* test_suite_timing */;
			productType = "com.apple.product-type.tool";
		};
		21072FB096193A28C3836D0E /* test_suite_cipher.padding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 70720617AC994FDB9048EC39 /* Build configuration list for PBXNativeTarget "test_suite_cipher.padding" */;
			buildPhases = (
				FF1EDB2F2F23EDA6C8705A18 /* Generate tests/test_suite_cipher.padding.c */,
				8A5A3E3F4E394C3C94587373 /* Sources */,
				AFC25046CD5E4FB4985D19EE /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				2A64D7BB8CA546ECA100357F /* PBXTargetDependency */,
				B7DAFE4056334198AF2E1BCE /* PBXTargetDependency */,
				BA890BED1105409B813E8B7A /* PBXTargetDependency */,
				3575F33F3E634909BFCDF5DC /* PBXTargetDependency */,
			);
			name = test_suite_cipher.padding;
			productName = test_suite_cipher.padding;
			productReference = 3B3BBAC0157F4B0B859F7034 /* test_suite_cipher.padding */;
			productType = "com.apple.product-type.tool";
		};
		291F11BC75D230E75C5C0176 /* test_suite_cmac */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 96101EAF2B904CFC909D6E26 /* Build configuration list for PBXNativeTarget "test_suite_cmac" */;
			buildPhases = (
				D4BE68328987800B995C92A8 /* Generate tests/test_suite_cmac.c */,
				F41BF254EDCA451DB7306D03 /* Sources */,
				97FDEF131BE04C099245EAB0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				9110910997104D76B9BDAB22 /* PBXTargetDependency */,
				9216D74EBE9240EABD39C2CB /* PBXTargetDependency */,
				5FAD957458834400A32EAE92 /* PBXTargetDependency */,
				18397DE755D740689D9B2D50 /* PBXTargetDependency */,
			);
			name = test_suite_cmac;
			productName = test_suite_cmac;
			productReference = 1165468592BE4A94BA336D99 /* test_suite_cmac */;
			productType = "com.apple.product-type.tool";
		};
		29BA59437D681954609AE5BA /* test_suite_rsa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 91495BFC8C2C413FBE021BE3 /* Build configuration list for PBXNativeTarget "test_suite_rsa" */;
			buildPhases = (
				E2111E822DDE8E978C67FFDD /* Generate tests/test_suite_rsa.c */,
				45EF82A8CD0144EA8B4D7BF8 /* Sources */,
				9D97FE073D7047B990FC6342 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				202908ACECD14F0085DAFB75 /* PBXTargetDependency */,
				EDAFB5DEE93640438424D0AF /* PBXTargetDependency */,
				D052A9CB51EC4BDAAFB11668 /* PBXTargetDependency */,
				C5D3A61696D140CD99092904 /* PBXTargetDependency */,
			);
			name = test_suite_rsa;
			productName = test_suite_rsa;
			productReference = 85556E6C9347462DB51D7B07 /* test_suite_rsa */;
			productType = "com.apple.product-type.tool";
		};
		2B25EA0FDBF429F2B1FE1CD1 /* cert_app */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 343CAB59C7D7424AA6975F05 /* Build configuration list for PBXNativeTarget "cert_app" */;
			buildPhases = (
				26C50A630FC943829DC644D2 /* Sources */,
				1B92A3EDC562441B8718394F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				4A13A6997BB94EB8BC2193C7 /* PBXTargetDependency */,
				C55DAAEF87644898A72FCF47 /* PBXTargetDependency */,
				FB33273927FC421EB067C9BB /* PBXTargetDependency */,
				B357BCA5B8A74C1E8B8E76A1 /* PBXTargetDependency */,
			);
			name = cert_app;
			productName = cert_app;
			productReference = 4C1D5EEB273B4063B5CADEBE /* cert_app */;
			productType = "com.apple.product-type.tool";
		};
		2D4919BE5807630ED568CF83 /* test_suite_ctr_drbg */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BB0024EDD2294FAAA4C16D6F /* Build configuration list for PBXNativeTarget "test_suite_ctr_drbg" */;
			buildPhases = (
				A1409B5CABED1EEC8B14DEA2 /* Generate tests/test_suite_ctr_drbg.c */,
				0F4A691A7FE74C8CAA155454 /* Sources */,
				D0E4E2E36C1A455A853D9B24 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F22F1EACAD444E29A8FADEB7 /* PBXTargetDependency */,
				5D588675015E4A34A43215DA /* PBXTargetDependency */,
				1E100B0A599B4C59B70B4697 /* PBXTargetDependency */,
				B64392C7EAF34C69831A48D7 /* PBXTargetDependency */,
			);
			name = test_suite_ctr_drbg;
			productName = test_suite_ctr_drbg;
			productReference = AEA5F6B8B4C1466B86A90A70 /* test_suite_ctr_drbg */;
			productType = "com.apple.product-type.tool";
		};
		3066306EE06D0EB955CC8466 /* test_suite_x509parse */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5240DA097A5D4AEAAEE798E6 /* Build configuration list for PBXNativeTarget "test_suite_x509parse" */;
			buildPhases = (
				92CA67109A5DF2E1D5F27A50 /* Generate tests/test_suite_x509parse.c */,
				52B0F25EE63843A59DD3F1D3 /* Sources */,
				62B76A5EC8FE4DE5830DABB0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				7D6EDD25818441EEAB38718F /* PBXTargetDependency */,
				B0B5043285924999A02355BF /* PBXTargetDependency */,
				9F6BE829C4E54C44A2C7F5D5 /* PBXTargetDependency */,
				F0238DE9665D499EB95AEA05 /* PBXTargetDependency */,
			);
			name = test_suite_x509parse;
			productName = test_suite_x509parse;
			productReference = ED1215FE0E4146D7810033D6 /* test_suite_x509parse */;
			productType = "com.apple.product-type.tool";
		};
		32B8EA173E25FBFC6E9C01E2 /* test_suite_aes.rest */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = BA93E6EAA70C4EB99B3E28E9 /* Build configuration list for PBXNativeTarget "test_suite_aes.rest" */;
			buildPhases = (
				1B07BFD17BB926CAC66417CF /* Generate tests/test_suite_aes.rest.c */,
				0055A5423A0248DDB92A96AA /* Sources */,
				9BB92BE02DB14023B3A57114 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				76F47546F4A6430F9D1F8D3F /* PBXTargetDependency */,
				DE5371018B0F4B33AA471529 /* PBXTargetDependency */,
				9FE0FBCF8B3A46C3B6E588EC /* PBXTargetDependency */,
				6B7AD562963945E697F209D9 /* PBXTargetDependency */,
			);
			name = test_suite_aes.rest;
			productName = test_suite_aes.rest;
			productReference = 05458EC12FB7489DAEAEA408 /* test_suite_aes.rest */;
			productType = "com.apple.product-type.tool";
		};
		32EE733876C8BA491B41ECDE /* key_app */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6BC0B66A91D74DD9A947C171 /* Build configuration list for PBXNativeTarget "key_app" */;
			buildPhases = (
				64209FF21BB6491BAA057F26 /* Sources */,
				A43974F2BF5D4C72843F8224 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1D459489E7714FF296CA9DD7 /* PBXTargetDependency */,
				E0572D3CA58B42B9A7793BFA /* PBXTargetDependency */,
				2659AEC9B65D4F40AD3A988F /* PBXTargetDependency */,
				6A137AC6A00045FC9E0AA2C3 /* PBXTargetDependency */,
			);
			name = key_app;
			productName = key_app;
			productReference = 46DE811E828740A19A08752F /* key_app */;
			productType = "com.apple.product-type.tool";
		};
		3809E3A3FE5BF094EEABDA55 /* test_suite_arc4 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 86B2BC90478442A29B8A3328 /* Build configuration list for PBXNativeTarget "test_suite_arc4" */;
			buildPhases = (
				71E460D44E90C41E4B39052A /* Generate tests/test_suite_arc4.c */,
				A7F800C90BFD48A3A66DCEC1 /* Sources */,
				E26A470B3C5C4E4D88C25E4C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C29F4633BAF14BD880F56728 /* PBXTargetDependency */,
				E08614E698564F5CA1B0BC8B /* PBXTargetDependency */,
				B872D0609C704DD295A7B7AF /* PBXTargetDependency */,
				AD77E12C5CE943FB98E6CA4E /* PBXTargetDependency */,
			);
			name = test_suite_arc4;
			productName = test_suite_arc4;
			productReference = 3E70868A57C64D7398D43F3F /* test_suite_arc4 */;
			productType = "com.apple.product-type.tool";
		};
		3EE77B0EFDD135BC246B8BC4 /* gen_random_havege */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6FC57405907944C6897AFEF3 /* Build configuration list for PBXNativeTarget "gen_random_havege" */;
			buildPhases = (
				E062D27FB6D94C0D9CE63118 /* Sources */,
				E7A162F4872C4CD9BD8CC718 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				BDD10EE64E904E9D8B666C03 /* PBXTargetDependency */,
				77B3960A8D424411A941328D /* PBXTargetDependency */,
				7A224B57A14C434E9CBEF3D5 /* PBXTargetDependency */,
				1D1929CA222E4A4FA30D0E36 /* PBXTargetDependency */,
			);
			name = gen_random_havege;
			productName = gen_random_havege;
			productReference = E51D3AC0B74444B28ED5E1B9 /* gen_random_havege */;
			productType = "com.apple.product-type.tool";
		};
		419A1319A6D41E062579921D /* req_app */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 234B449148C54D868230CF7B /* Build configuration list for PBXNativeTarget "req_app" */;
			buildPhases = (
				4372A7F7CAAB49628576F6F1 /* Sources */,
				7B9F06CA2EA3411DBDABB933 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				88AC8BEDAC4D44B6B69C52D7 /* PBXTargetDependency */,
				E1115F7E8E264DEC8088DAEA /* PBXTargetDependency */,
				FD7A689A980C4E48A69FC6AD /* PBXTargetDependency */,
				4F662C74290243208D826B24 /* PBXTargetDependency */,
			);
			name = req_app;
			productName = req_app;
			productReference = 856879F31ED64705B91144F6 /* req_app */;
			productType = "com.apple.product-type.tool";
		};
		42BB226F579504137717614A /* test_suite_cipher.ccm */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B098DEC3A7064D12A4AF8BF9 /* Build configuration list for PBXNativeTarget "test_suite_cipher.ccm" */;
			buildPhases = (
				6A3219299A15656317EBC074 /* Generate tests/test_suite_cipher.ccm.c */,
				A2284979D572441285264494 /* Sources */,
				F22839239A674E11B6932C08 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C89717CFAE6742E3813769EC /* PBXTargetDependency */,
				807A78D7A07E4D379626C68E /* PBXTargetDependency */,
				C23EC6C3BDFD4AA39CFF4615 /* PBXTargetDependency */,
				741EFAE715A04D59A215DE62 /* PBXTargetDependency */,
			);
			name = test_suite_cipher.ccm;
			productName = test_suite_cipher.ccm;
			productReference = 596B8B79A49543CCBBCD4154 /* test_suite_cipher.ccm */;
			productType = "com.apple.product-type.tool";
		};
		453330CCFAE45684805B9B21 /* test_suite_mdx */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A2D9DB43F7CE4CD4929229E3 /* Build configuration list for PBXNativeTarget "test_suite_mdx" */;
			buildPhases = (
				501DDEA4C4331BA17BFE880A /* Generate tests/test_suite_mdx.c */,
				8F69DA11FC6146D598D0674B /* Sources */,
				F65D96A94191403395EF5633 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F7370E92D76E433B9EA44325 /* PBXTargetDependency */,
				82E59255B394478E9BC46DF7 /* PBXTargetDependency */,
				CE7513E2C2DD467C9650D6B6 /* PBXTargetDependency */,
				2636DE8845AF4C1AA7304778 /* PBXTargetDependency */,
			);
			name = test_suite_mdx;
			productName = test_suite_mdx;
			productReference = 5E095CC6EDCB46ECBD1891EF /* test_suite_mdx */;
			productType = "com.apple.product-type.tool";
		};
		476B1AB22BB1928A5C450AA9 /* ssl_mail_client */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E71D52FD96AA4CFDB26CAD77 /* Build configuration list for PBXNativeTarget "ssl_mail_client" */;
			buildPhases = (
				D4D0E6BF741743AF9D9089A4 /* Sources */,
				3EE64FF93B734D108B739827 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5A3A9246A45B423C92395315 /* PBXTargetDependency */,
				9342D1C39303466F9894BCB5 /* PBXTargetDependency */,
				2C69579AF27E4A8EB1620E2A /* PBXTargetDependency */,
				426F6F016A5840F09FE3BE5D /* PBXTargetDependency */,
			);
			name = ssl_mail_client;
			productName = ssl_mail_client;
			productReference = 1A26FFC38F9F4DD0A78AB534 /* ssl_mail_client */;
			productType = "com.apple.product-type.tool";
		};
		47E1F789F1A86F5114C29A71 /* test_suite_asn1write */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C8AA7F7CF6D4F64A03471D5 /* Build configuration list for PBXNativeTarget "test_suite_asn1write" */;
			buildPhases = (
				9B6C21DC069C210D1C2CAAC8 /* Generate tests/test_suite_asn1write.c */,
				76722468E0C9446390F54BD0 /* Sources */,
				0FC0E1A1BDA248ABBDBC165D /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E492795F04904959A40875FA /* PBXTargetDependency */,
				5C93582F700A4171901B01E9 /* PBXTargetDependency */,
				7790C44601784D3BBAF0B065 /* PBXTargetDependency */,
				C8097FE659B1457F8EB701F4 /* PBXTargetDependency */,
			);
			name = test_suite_asn1write;
			productName = test_suite_asn1write;
			productReference = 359072775D1B4315935F175B /* test_suite_asn1write */;
			productType = "com.apple.product-type.tool";
		};
		48C61CF1678F4F793728C80F /* cert_req */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 48788F9946814318A18FC5E4 /* Build configuration list for PBXNativeTarget "cert_req" */;
			buildPhases = (
				0C934FD226E04A068BECA19A /* Sources */,
				DB1733559C8D4DB995B96160 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				872E1EAD03B34A0DAD048D3E /* PBXTargetDependency */,
				7C3F1EB5D7E44E65A3496F69 /* PBXTargetDependency */,
				BBE89C2410E34B74843F81F6 /* PBXTargetDependency */,
				3AF25974587C456196097F61 /* PBXTargetDependency */,
			);
			name = cert_req;
			productName = cert_req;
			productReference = 2C66C66794F84675A4FE19FE /* cert_req */;
			productType = "com.apple.product-type.tool";
		};
		4C8CC82D7F7DCD8D42888FDA /* test_suite_ecdsa */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2C4A476D44C44091B00C287C /* Build configuration list for PBXNativeTarget "test_suite_ecdsa" */;
			buildPhases = (
				1ABA9C12EBC9E2F46C4FC710 /* Generate tests/test_suite_ecdsa.c */,
				A88A64AA023C462CACF52C6D /* Sources */,
				BEDFA5A5CFB44A78A1D7DE13 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C6A54C46556C42DB8E14F287 /* PBXTargetDependency */,
				5EE9BAEEAD614514B2F0E931 /* PBXTargetDependency */,
				52F05EB0D1AE4AB5B9EE1DAE /* PBXTargetDependency */,
				E9CF3A29319A4BC1978CDD94 /* PBXTargetDependency */,
			);
			name = test_suite_ecdsa;
			productName = test_suite_ecdsa;
			productReference = 4D3D201704994955BDD7E6D3 /* test_suite_ecdsa */;
			productType = "com.apple.product-type.tool";
		};
		4D2298E3D55708D846A03638 /* test_suite_pkcs1_v15 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = EED0A064D1AF4E4DA69A9E98 /* Build configuration list for PBXNativeTarget "test_suite_pkcs1_v15" */;
			buildPhases = (
				A3152CC78B803E910EB8FEB4 /* Generate tests/test_suite_pkcs1_v15.c */,
				4A2286B8950740C38AA9DCA6 /* Sources */,
				6E8DFBD63EB94AF0A49E164D /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				72966AAD4CFC49AC9CFDF36B /* PBXTargetDependency */,
				6DCB3ED233EB4BAD96056FB1 /* PBXTargetDependency */,
				EC2278BFBC7C4E309CC4731D /* PBXTargetDependency */,
				1A1ABBC54F534E1A905884BF /* PBXTargetDependency */,
			);
			name = test_suite_pkcs1_v15;
			productName = test_suite_pkcs1_v15;
			productReference = BEFBEC684C4B4D709E621AF9 /* test_suite_pkcs1_v15 */;
			productType = "com.apple.product-type.tool";
		};
		4E2B702CA1606D2D041BAAE7 /* ssl_fork_server */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2EF70F853FDE45EEBB587DE3 /* Build configuration list for PBXNativeTarget "ssl_fork_server" */;
			buildPhases = (
				CF9DA2D9DF3A47F888EB155C /* Sources */,
				E17179DAD4374F51B92903FF /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				50CBD6A336EC4EFBB1EC0A03 /* PBXTargetDependency */,
				C949EA6C701240F29D2BBD67 /* PBXTargetDependency */,
				9D0D0EA90C2A475DBC58BBCB /* PBXTargetDependency */,
				071C1C9C85FD4D0E94217666 /* PBXTargetDependency */,
			);
			name = ssl_fork_server;
			productName = ssl_fork_server;
			productReference = BD05F7A9D0C24372BBBCA71F /* ssl_fork_server */;
			productType = "com.apple.product-type.tool";
		};
		4E6344849A6B5BB6DDE9BB85 /* pk_decrypt */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C27D27DB1A547DE81F7F89C /* Build configuration list for PBXNativeTarget "pk_decrypt" */;
			buildPhases = (
				65CA4A4BFC38461897ADF2B2 /* Sources */,
				29B40D5AC3764C809270137B /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				DC8CE1A012C84DC8981C2AD7 /* PBXTargetDependency */,
				5213B4BA6BBF4CC281A33ACF /* PBXTargetDependency */,
				519D177C208E4637A0D1E006 /* PBXTargetDependency */,
				0C27761A1C0948C3A46447BB /* PBXTargetDependency */,
			);
			name = pk_decrypt;
			productName = pk_decrypt;
			productReference = E22B9BAC736046A7B83A54C6 /* pk_decrypt */;
			productType = "com.apple.product-type.tool";
		};
		4F12C44F3F8D4428F96BD424 /* test_suite_camellia */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3B36BD9E4AC742EE82A5FF05 /* Build configuration list for PBXNativeTarget "test_suite_camellia" */;
			buildPhases = (
				A8394FA46A89E93E3F70C7CC /* Generate tests/test_suite_camellia.c */,
				E58445667E3E42278F13080D /* Sources */,
				13E191A6A3E94A9F9DC2BF02 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3B10C55F26094E48B40877CE /* PBXTargetDependency */,
				93EB514FA4B34371B1A04C1E /* PBXTargetDependency */,
				5BF88A15B25148548FAD2E62 /* PBXTargetDependency */,
				4E225CCBE9B24EA4803BF118 /* PBXTargetDependency */,
			);
			name = test_suite_camellia;
			productName = test_suite_camellia;
			productReference = C6B8ADAC38F04FE3A09F92FD /* test_suite_camellia */;
			productType = "com.apple.product-type.tool";
		};
		5020FC08C3A1B85FCB44C3CA /* ssl_server */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 80977E027AC040B68DF75B15 /* Build configuration list for PBXNativeTarget "ssl_server" */;
			buildPhases = (
				6EAA7ED41F024083B5EA3D8D /* Sources */,
				D9486254CCB8464D8BC5297F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5991DD3B3A8F4AB696E58401 /* PBXTargetDependency */,
				27C4584905E742C699CC407A /* PBXTargetDependency */,
				2FE03B0950CE4B5D97284914 /* PBXTargetDependency */,
				3D6AAB5CBE0444B4918FBED3 /* PBXTargetDependency */,
			);
			name = ssl_server;
			productName = ssl_server;
			productReference = 2C934C09348542418CADA280 /* ssl_server */;
			productType = "com.apple.product-type.tool";
		};
		542D9811FC63CEB162FEE1CE /* ssl_client2 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D882413076514984AA723E6C /* Build configuration list for PBXNativeTarget "ssl_client2" */;
			buildPhases = (
				3DD55B4D1E67420CBBFB1D32 /* Sources */,
				BBDD2681BDFA42788C492E0F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				47476EE09B9C41F9A4111500 /* PBXTargetDependency */,
				0BB72972D74B460599939092 /* PBXTargetDependency */,
				B00CAD3AF9EF42139158CF3B /* PBXTargetDependency */,
				F13E13B71CCF43E0A184C789 /* PBXTargetDependency */,
			);
			name = ssl_client2;
			productName = ssl_client2;
			productReference = 9AD0793B8651412C8E65528E /* ssl_client2 */;
			productType = "com.apple.product-type.tool";
		};
		55C40BCD2F68C1BF2E8A271B /* mpi_demo */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 315CE599766A4AA791EC55B0 /* Build configuration list for PBXNativeTarget "mpi_demo" */;
			buildPhases = (
				4CE1F7D43A28495198EDC2D9 /* Sources */,
				FACB8DDC1161449786F3BBBE /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				A7A254B37D884A3BA07A2CDF /* PBXTargetDependency */,
				94F7BD86C0EF4EFBA9D0836E /* PBXTargetDependency */,
				D737300647ED4D0A9769CCDD /* PBXTargetDependency */,
				3E51C0FE66F54BF68ED95930 /* PBXTargetDependency */,
			);
			name = mpi_demo;
			productName = mpi_demo;
			productReference = 6B918F37BBE74DCB95303A34 /* mpi_demo */;
			productType = "com.apple.product-type.tool";
		};
		55E0753594CD91FBA837EC69 /* mbedx509 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F39A0C96DCAD4D65B1AE39EF /* Build configuration list for PBXNativeTarget "mbedx509" */;
			buildPhases = (
				DCB319782D144FC690182ECF /* Sources */,
				C11D0EEA22E74E4BAE3F6879 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6A7A096CA27F4E72B4BB4EFB /* PBXTargetDependency */,
				C3D3DCA0813B4A1BAD2D7863 /* PBXTargetDependency */,
			);
			name = mbedx509;
			productName = mbedx509;
			productReference = EA999AABDE9240A6A2183580 /* libmbedx509.a */;
			productType = "com.apple.product-type.library.static";
		};
		594B6126DD23767E1DFA5F65 /* hello */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6231EDB4FC19412ABF8501D7 /* Build configuration list for PBXNativeTarget "hello" */;
			buildPhases = (
				88B02458A5714E7EBFD26615 /* Sources */,
				C7176BBBEE88456A9E86630C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6BB9AB6ED1CC445AAB354BDD /* PBXTargetDependency */,
				9BD2A81ACB1E4D08A7EF7E56 /* PBXTargetDependency */,
				903A4B53D94C48A2AD29C4FE /* PBXTargetDependency */,
				A39CEAE54477471898221761 /* PBXTargetDependency */,
			);
			name = hello;
			productName = hello;
			productReference = 42A98856DD064DB6AC4123A0 /* hello */;
			productType = "com.apple.product-type.tool";
		};
		5C2941308E1B2503F15EC675 /* test_suite_cipher.null */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4F5D4C0CC0F24E798243B669 /* Build configuration list for PBXNativeTarget "test_suite_cipher.null" */;
			buildPhases = (
				06D1F9E0414E9B181711CA66 /* Generate tests/test_suite_cipher.null.c */,
				24064387FF4F4085AE4C512A /* Sources */,
				557430B6048047648C1E5BA3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				FE44AA56194249849B1716F9 /* PBXTargetDependency */,
				D3B588FF73194923AA3CF2CB /* PBXTargetDependency */,
				25033BC71E83412DB2552E48 /* PBXTargetDependency */,
				D6764690623C4BFAB0C6DF8A /* PBXTargetDependency */,
			);
			name = test_suite_cipher.null;
			productName = test_suite_cipher.null;
			productReference = A86B31505C2E4DE7B86C4136 /* test_suite_cipher.null */;
			productType = "com.apple.product-type.tool";
		};
		5E260C1BC30341AE36184657 /* test_suite_blowfish */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C05B31A771544F509D727AA3 /* Build configuration list for PBXNativeTarget "test_suite_blowfish" */;
			buildPhases = (
				02F7ECF74579F457FB8880B4 /* Generate tests/test_suite_blowfish.c */,
				EEEF71319C4B4520BB0048C8 /* Sources */,
				8A998D5D563246FA8C78232A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B53F20D7659C4C3B98C80A39 /* PBXTargetDependency */,
				72144242003C41A08C45CE65 /* PBXTargetDependency */,
				E8C299C529604A6D8D0852C8 /* PBXTargetDependency */,
				2D646D117FA942B7937E0E3C /* PBXTargetDependency */,
			);
			name = test_suite_blowfish;
			productName = test_suite_blowfish;
			productReference = 1F5124314AAA4210B04A39A3 /* test_suite_blowfish */;
			productType = "com.apple.product-type.tool";
		};
		5F7D115795CD45C428F4F4DB /* gen_entropy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = F595458D278B4242BDFBA1FA /* Build configuration list for PBXNativeTarget "gen_entropy" */;
			buildPhases = (
				BA17D67D6D5F489F940C5853 /* Sources */,
				8CB1E6BC3C7648B2AAEFD164 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				8D558A4CDB5A4C71A123D52E /* PBXTargetDependency */,
				EB9CDBEB483C4FF09CCF1747 /* PBXTargetDependency */,
				57A9D42F28EF4E0BA050A3F1 /* PBXTargetDependency */,
				39EEA38B287545B5B57F82DB /* PBXTargetDependency */,
			);
			name = gen_entropy;
			productName = gen_entropy;
			productReference = BF242220E5EC46878534A33C /* gen_entropy */;
			productType = "com.apple.product-type.tool";
		};
		6087DEC08F506B746E586B71 /* rsa_sign */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E121B865985C4B7BA2C786D1 /* Build configuration list for PBXNativeTarget "rsa_sign" */;
			buildPhases = (
				2FAD883BED1C48DB986FB261 /* Sources */,
				CF6221D9BB2147C58F9176C3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				29786E07921147A385006FDC /* PBXTargetDependency */,
				FE8AF9CC9CD04B3980F8B480 /* PBXTargetDependency */,
				BCDBD07BC39944D6A742465A /* PBXTargetDependency */,
				AF6359836E6343488546AA46 /* PBXTargetDependency */,
			);
			name = rsa_sign;
			productName = rsa_sign;
			productReference = 4DABE23A986B49C8A98B267A /* rsa_sign */;
			productType = "com.apple.product-type.tool";
		};
		60BF7F050AB2279A4DA47C0D /* gen_key */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3FECBB9B2D5A499AAF4F7B93 /* Build configuration list for PBXNativeTarget "gen_key" */;
			buildPhases = (
				CF2CA01060134A75A140C06C /* Sources */,
				81EA23687E2243D2919BE63E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E09C3447456C4F24AE5D0396 /* PBXTargetDependency */,
				8DBA3D0F89D54734BE558CDF /* PBXTargetDependency */,
				4A5B7E89F357409D94DB58C8 /* PBXTargetDependency */,
				8EFB5904913946ADBF4277DE /* PBXTargetDependency */,
			);
			name = gen_key;
			productName = gen_key;
			productReference = 660747D63525416581BB8C80 /* gen_key */;
			productType = "com.apple.product-type.tool";
		};
		6407C0786940FEC2502CFA25 /* test_suite_mpi */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C8BA9DB9B10E4B469D3AB40F /* Build configuration list for PBXNativeTarget "test_suite_mpi" */;
			buildPhases = (
				A027338D17F9B52695B82A99 /* Generate tests/test_suite_mpi.c */,
				2175A129B30F4216A5745DBA /* Sources */,
				9BFE238955074105B270B3E8 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F7CB76472F874A3399704C6F /* PBXTargetDependency */,
				288301FF56D24EF3B78D5C1B /* PBXTargetDependency */,
				3F739E65C2634BAC8F2625F6 /* PBXTargetDependency */,
				D1ACCECBA2D7407F99F5B5B5 /* PBXTargetDependency */,
			);
			name = test_suite_mpi;
			productName = test_suite_mpi;
			productReference = BB5BD0F2C665423A92B0605D /* test_suite_mpi */;
			productType = "com.apple.product-type.tool";
		};
		653CDB6ABFF889E53981B6C8 /* pk_sign */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 050D144DF90C427489C0428F /* Build configuration list for PBXNativeTarget "pk_sign" */;
			buildPhases = (
				6AC06D17EB08412F87D5B6E8 /* Sources */,
				59CE1A3CA40F496BAD19A22C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				04EB17A82CE24F33B5851AD9 /* PBXTargetDependency */,
				1159F5527B6644AB881259F9 /* PBXTargetDependency */,
				4237F84E9E684AA788133798 /* PBXTargetDependency */,
				FEE9BD5B8C08463ABE78CF48 /* PBXTargetDependency */,
			);
			name = pk_sign;
			productName = pk_sign;
			productReference = 51F215EFAB434DEE8C8CA223 /* pk_sign */;
			productType = "com.apple.product-type.tool";
		};
		661DDB8594BD9ECB32DA30D7 /* dtls_server */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 392C9E797E554B168858113E /* Build configuration list for PBXNativeTarget "dtls_server" */;
			buildPhases = (
				25AF113EB8FC482284012259 /* Sources */,
				315F805A58D349BA84B413A7 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1AC0834566534F6FA8723236 /* PBXTargetDependency */,
				DB1AAAE8075E41CFAF71EFC8 /* PBXTargetDependency */,
				E926663E56824F778C6C482F /* PBXTargetDependency */,
				7CC2BCEF3EF64FF6B301639B /* PBXTargetDependency */,
			);
			name = dtls_server;
			productName = dtls_server;
			productReference = DF262E4598DF48DDA3FDD66F /* dtls_server */;
			productType = "com.apple.product-type.tool";
		};
		664BE17B18A2C4681B324AC6 /* test_suite_error */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 29EDAA7CECF34FA59B2F1ECF /* Build configuration list for PBXNativeTarget "test_suite_error" */;
			buildPhases = (
				F8AD7424FB2D461546792F32 /* Generate tests/test_suite_error.c */,
				FA972CDFCA3948A7A1E77390 /* Sources */,
				0E47531B2CE7436F95AF4333 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				08640248BBB246CAA5054C52 /* PBXTargetDependency */,
				190B513F0BD5486A85BBD2EC /* PBXTargetDependency */,
				C978D8D3CB8C4DF6AC082B88 /* PBXTargetDependency */,
				F749D2DC7D3F46419D075106 /* PBXTargetDependency */,
			);
			name = test_suite_error;
			productName = test_suite_error;
			productReference = 576BAE17F12C468BB0C83F0E /* test_suite_error */;
			productType = "com.apple.product-type.tool";
		};
		677E40F0A3DC36457EFCFD30 /* rsa_encrypt */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2F5E0F1CB637490BBDC35B20 /* Build configuration list for PBXNativeTarget "rsa_encrypt" */;
			buildPhases = (
				A4B0BAB206A34B3F8226D8B8 /* Sources */,
				1FBD22BE23CE4E1CBA9BE284 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				8B776AC3EF5744EFBB6AD818 /* PBXTargetDependency */,
				E591718D9E1D4E6CAE057957 /* PBXTargetDependency */,
				661772F42794461EA8D2CF4F /* PBXTargetDependency */,
				0655B95993744EE8A891F8D1 /* PBXTargetDependency */,
			);
			name = rsa_encrypt;
			productName = rsa_encrypt;
			productReference = 0702BD73F32842C7944C390F /* rsa_encrypt */;
			productType = "com.apple.product-type.tool";
		};
		67F6D13E4A82173F6F28AD20 /* test_suite_gcm.aes128_de */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 57CAFAFFF1A243E89C1404E5 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes128_de" */;
			buildPhases = (
				FE338AB30BAD906698AF6ABA /* Generate tests/test_suite_gcm.aes128_de.c */,
				C2DBFFA5D3A34E28A45E1426 /* Sources */,
				330FF00356DF45AEAB09E4B0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				A41AC8C3FA5946F09CA0E9E4 /* PBXTargetDependency */,
				74DE5EBF16F24DACAA8EF487 /* PBXTargetDependency */,
				43437B6BDD634A01A882C1F0 /* PBXTargetDependency */,
				E66705E072E640749B139060 /* PBXTargetDependency */,
			);
			name = test_suite_gcm.aes128_de;
			productName = test_suite_gcm.aes128_de;
			productReference = A4EC39F49F0D4E3BA16F02CD /* test_suite_gcm.aes128_de */;
			productType = "com.apple.product-type.tool";
		};
		6889B48630D80804EA40849D /* generic_sum */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 14851D716ED640978F6056D7 /* Build configuration list for PBXNativeTarget "generic_sum" */;
			buildPhases = (
				643D36F70969424BBDE70763 /* Sources */,
				05ADB4BD01EA4CFA84204C6E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1374F0733F7547B7B9F827D0 /* PBXTargetDependency */,
				DD2CC466FF7945CDAC7A15D5 /* PBXTargetDependency */,
				6BEB4F9E83964A1A9F8449A3 /* PBXTargetDependency */,
				C56C5F427EE4478CB63FAE97 /* PBXTargetDependency */,
			);
			name = generic_sum;
			productName = generic_sum;
			productReference = 50024BF5AADC4EF8A50AD457 /* generic_sum */;
			productType = "com.apple.product-type.tool";
		};
		6B6F9FBAACCEFE4150670DE9 /* dh_genprime */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6E327ACF5FF44946AA3B2EC2 /* Build configuration list for PBXNativeTarget "dh_genprime" */;
			buildPhases = (
				AF314E81179F466EAF94E7FF /* Sources */,
				277843CC1B1F42BEAD0557C0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				7E61641B7D254C4F836A9FD9 /* PBXTargetDependency */,
				D22BFEB992D44A7DB54CFE7E /* PBXTargetDependency */,
				A90AB9E5B7D74AE6AF42A236 /* PBXTargetDependency */,
				9B159773A0F445269757D00C /* PBXTargetDependency */,
			);
			name = dh_genprime;
			productName = dh_genprime;
			productReference = AB11A0142B2D490DBE58B748 /* dh_genprime */;
			productType = "com.apple.product-type.tool";
		};
		718C3FD6366CEF8A124A2F83 /* test_suite_cipher.gcm */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8FCED3B5502B49CDB4E3DB99 /* Build configuration list for PBXNativeTarget "test_suite_cipher.gcm" */;
			buildPhases = (
				A19F6A9C2F760D0128D922F3 /* Generate tests/test_suite_cipher.gcm.c */,
				454DD2E45C064C8896A6F5EB /* Sources */,
				4ACFEB97FFEA4E388371BA23 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E4A8621A9F184E53813507C1 /* PBXTargetDependency */,
				4F88F419F5DD49C9BBFF3A2F /* PBXTargetDependency */,
				1EA72BA3E83F4516A2998AA1 /* PBXTargetDependency */,
				6D8C54F783634E0888E0D4B8 /* PBXTargetDependency */,
			);
			name = test_suite_cipher.gcm;
			productName = test_suite_cipher.gcm;
			productReference = CF8062C79A25423494C2333B /* test_suite_cipher.gcm */;
			productType = "com.apple.product-type.tool";
		};
		736CCC5FE48E4D390E3BB9F5 /* ssl_server2 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 41F1979790054BC0911163F9 /* Build configuration list for PBXNativeTarget "ssl_server2" */;
			buildPhases = (
				3339D36FD4864826A98740EF /* Sources */,
				9D917BE79B6C42F5A2644889 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5EC9ED217109474CAE5A773D /* PBXTargetDependency */,
				6147975E1AEA4F87B8EB7746 /* PBXTargetDependency */,
				0C09F1003F2A4A5191DF9F70 /* PBXTargetDependency */,
				46213C4EB8A24FF887D12741 /* PBXTargetDependency */,
			);
			name = ssl_server2;
			productName = ssl_server2;
			productReference = 07BDF6E24548444E9ABDC140 /* ssl_server2 */;
			productType = "com.apple.product-type.tool";
		};
		77DE82126300AE680D449967 /* test_suite_cipher.camellia */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D08A0EEDC6BA4926A2354024 /* Build configuration list for PBXNativeTarget "test_suite_cipher.camellia" */;
			buildPhases = (
				4AC5B6053417FC384B44FB82 /* Generate tests/test_suite_cipher.camellia.c */,
				8BE01847DCFF402E8E755172 /* Sources */,
				BFB1F4B753AB44C6BF44E575 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				DE782A2684F14529872DD979 /* PBXTargetDependency */,
				028AAC802A164ACEAFB0E9D4 /* PBXTargetDependency */,
				674FEC2A6D40463699F17D98 /* PBXTargetDependency */,
				42122ADA46CE4427BA30B15E /* PBXTargetDependency */,
			);
			name = test_suite_cipher.camellia;
			productName = test_suite_cipher.camellia;
			productReference = 7EB8B728F31549068C9D3904 /* test_suite_cipher.camellia */;
			productType = "com.apple.product-type.tool";
		};
		78653924CA02A9609D323F5D /* rsa_sign_pss */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7227D101626A41FF9AE0C64A /* Build configuration list for PBXNativeTarget "rsa_sign_pss" */;
			buildPhases = (
				7D03310F31DF4F87A5BE15D4 /* Sources */,
				6CFBD6D0C3744F60A468DC8C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				4C0C4264E9A749E3A24AFD34 /* PBXTargetDependency */,
				4BD9599B10884F9FB15B2047 /* PBXTargetDependency */,
				71BF0218ABE14D4B98157777 /* PBXTargetDependency */,
				1047AE5A83294D178E37965A /* PBXTargetDependency */,
			);
			name = rsa_sign_pss;
			productName = rsa_sign_pss;
			productReference = 7C008597F3D943DA8A219F7A /* rsa_sign_pss */;
			productType = "com.apple.product-type.tool";
		};
		7A90C5B9C87A1D86D5D93D45 /* pem2der */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2DBB9623CCAC43DE94E49942 /* Build configuration list for PBXNativeTarget "pem2der" */;
			buildPhases = (
				F7441972FA894252931FCB5C /* Sources */,
				028B1DF3AAD34B91B30ED5B4 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				0AA99E1B82F346838F059071 /* PBXTargetDependency */,
				0E05F1EE57F04E42B67AF224 /* PBXTargetDependency */,
				715C778B46AF48C7B86C34C0 /* PBXTargetDependency */,
				9D372E9F0B414AFD99991F26 /* PBXTargetDependency */,
			);
			name = pem2der;
			productName = pem2der;
			productReference = 6F5F63FC67E24290BE513F97 /* pem2der */;
			productType = "com.apple.product-type.tool";
		};
		81477C78627B0B6AF7DD8803 /* test_suite_pkcs1_v21 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 11B84CECF5224D329522658E /* Build configuration list for PBXNativeTarget "test_suite_pkcs1_v21" */;
			buildPhases = (
				37D2F36DA8A4F9C2A16B5937 /* Generate tests/test_suite_pkcs1_v21.c */,
				68D4873BE034433DB6633AF6 /* Sources */,
				107A40D1C27F49C49B9DC1EC /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F75406689AF14E61B3A7A9B4 /* PBXTargetDependency */,
				27AF79A332F948A2A9F850DA /* PBXTargetDependency */,
				EE1BFC8F514E42AFA5A9F812 /* PBXTargetDependency */,
				9E2C9655E64447BABF4757A0 /* PBXTargetDependency */,
			);
			name = test_suite_pkcs1_v21;
			productName = test_suite_pkcs1_v21;
			productReference = 306EE3B6124345A5A3696F40 /* test_suite_pkcs1_v21 */;
			productType = "com.apple.product-type.tool";
		};
		8209F7D3813EC81518E87B8D /* mini_client */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4AFE114C1ACF4FE38EC21670 /* Build configuration list for PBXNativeTarget "mini_client" */;
			buildPhases = (
				74B9B2763D74460B81DAD1D0 /* Sources */,
				8AFE174CCB0B4323892ABB4C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6178462D6F0345F1B2674EF7 /* PBXTargetDependency */,
				F7A6C50B57484FF992790368 /* PBXTargetDependency */,
				B3C0C2BBB06C42E381B7210C /* PBXTargetDependency */,
				D7A0EF835C4446059FB942CE /* PBXTargetDependency */,
			);
			name = mini_client;
			productName = mini_client;
			productReference = B1504619C2554201B23D2E32 /* mini_client */;
			productType = "com.apple.product-type.tool";
		};
		82BB205E9D823CBE782D635B /* ssl_pthread_server */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 15189C8FBC3E4297B620467D /* Build configuration list for PBXNativeTarget "ssl_pthread_server" */;
			buildPhases = (
				22211762AD694163BAC19A24 /* Sources */,
				E092FB90664449FFBFBFEFFD /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				21E2578B48184DC086CBA5F3 /* PBXTargetDependency */,
				ACB721EF6A8E4B1484F2796F /* PBXTargetDependency */,
				BDBA5A3AB1F24649BDA3C0C4 /* PBXTargetDependency */,
				B88CB99F00D64B04912DBBB7 /* PBXTargetDependency */,
			);
			name = ssl_pthread_server;
			productName = ssl_pthread_server;
			productReference = 1CC46F04EC9C49DFA302ACFC /* ssl_pthread_server */;
			productType = "com.apple.product-type.tool";
		};
		853AC1C2F16240CB4A3EE900 /* test_suite_des */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7E2DC764848A45A388EE07DA /* Build configuration list for PBXNativeTarget "test_suite_des" */;
			buildPhases = (
				1B38A252E82464A0F851CFC8 /* Generate tests/test_suite_des.c */,
				2A515AD3ADB74F9DAA3D1D69 /* Sources */,
				C27E1934879F44B5924DB68C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				60BD29EE14164DE9A500DD4D /* PBXTargetDependency */,
				3D271EEE1D1B4D4980E31417 /* PBXTargetDependency */,
				A4E57511D4CD403DB08679B6 /* PBXTargetDependency */,
				4B0115E5308543C3A8B7DA8B /* PBXTargetDependency */,
			);
			name = test_suite_des;
			productName = test_suite_des;
			productReference = CB28AAF3D3FB4CE9AC34578E /* test_suite_des */;
			productType = "com.apple.product-type.tool";
		};
		89AC83B8E97C5C53AF04A31A /* test_suite_aes.ecb */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2AFDC1273B6B4D158636598A /* Build configuration list for PBXNativeTarget "test_suite_aes.ecb" */;
			buildPhases = (
				968A340DDEA9D5D467990EFB /* Generate tests/test_suite_aes.ecb.c */,
				2C5F938D4D4746C38432B8A1 /* Sources */,
				A71ED211C3EE449E821D665F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				7A93D00AFAA841D7A79D24AC /* PBXTargetDependency */,
				BCEA0DDA3A85493394A34F62 /* PBXTargetDependency */,
				54B46CF6E86E45DAB5FCC21B /* PBXTargetDependency */,
				0BA01F9E854E44AB9B4716FF /* PBXTargetDependency */,
			);
			name = test_suite_aes.ecb;
			productName = test_suite_aes.ecb;
			productReference = 4CD99A1DD5C94610B621A819 /* test_suite_aes.ecb */;
			productType = "com.apple.product-type.tool";
		};
		8B0B472CF5585674FACD1A0C /* test_suite_base64 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 03BB42AD5C964C1CAAEB70EB /* Build configuration list for PBXNativeTarget "test_suite_base64" */;
			buildPhases = (
				C4FB4795EC93C933720F3C12 /* Generate tests/test_suite_base64.c */,
				50068D8538FE4E73AE58D749 /* Sources */,
				7587FD20E55E47B0BFE88A4C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1DEFF404CC614FDDA5B6AB86 /* PBXTargetDependency */,
				C1689FB8876743E489B645B2 /* PBXTargetDependency */,
				3194594AD94646628EE14A18 /* PBXTargetDependency */,
				08B1CF9313584D7C969D7888 /* PBXTargetDependency */,
			);
			name = test_suite_base64;
			productName = test_suite_base64;
			productReference = 92A1CDF0EA2F4C21AD4A36A2 /* test_suite_base64 */;
			productType = "com.apple.product-type.tool";
		};
		8B5FBCA5D37095305232AC6E /* test_suite_pkparse */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5A71A20FBD3943FAB1934AA2 /* Build configuration list for PBXNativeTarget "test_suite_pkparse" */;
			buildPhases = (
				496C0F7F5A4554F2638B8B07 /* Generate tests/test_suite_pkparse.c */,
				2734FFC1BEE14BE2BDFCE8F1 /* Sources */,
				54F65F03DED842BA9AAC37C3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				414B03760BDA4EFBA93FAB19 /* PBXTargetDependency */,
				B588560DBF004D4BA7339249 /* PBXTargetDependency */,
				09B3EB0D6CBB4C4494B9B46F /* PBXTargetDependency */,
				B3465920FE154C388D0A83D2 /* PBXTargetDependency */,
			);
			name = test_suite_pkparse;
			productName = test_suite_pkparse;
			productReference = 4EF9972F49174F44A2FBEEC7 /* test_suite_pkparse */;
			productType = "com.apple.product-type.tool";
		};
		8BC88D528D77393319B6F5B7 /* test_suite_cipher.aes */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FF9940B1D5D14F1C9A664DD6 /* Build configuration list for PBXNativeTarget "test_suite_cipher.aes" */;
			buildPhases = (
				60458AA2767046C005CA3E21 /* Generate tests/test_suite_cipher.aes.c */,
				647576E60ABD495C87471283 /* Sources */,
				DC5A31771849401698791BD3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				2CCB8E9CF5D84B52B224B590 /* PBXTargetDependency */,
				47659FCC293640EAB0B1F198 /* PBXTargetDependency */,
				1CB7E970CCDC4105B6201F32 /* PBXTargetDependency */,
				5FEB565B4DAB47578B25F0B3 /* PBXTargetDependency */,
			);
			name = test_suite_cipher.aes;
			productName = test_suite_cipher.aes;
			productReference = 52B0F3EC04A447D6B9F0D88D /* test_suite_cipher.aes */;
			productType = "com.apple.product-type.tool";
		};
		8C377CE5BA566D937D6EE1A2 /* benchmark */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 92E82F5D140A416EA09A882A /* Build configuration list for PBXNativeTarget "benchmark" */;
			buildPhases = (
				B0D13D8A9E004A4FB4AFAE58 /* Sources */,
				C2698C79549E49C1BC89CAD7 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				A4683B630F3942D0AB76E84B /* PBXTargetDependency */,
				5E9A223E24FA4A42A33CAD95 /* PBXTargetDependency */,
				F66897C33CDF4C1181E8959F /* PBXTargetDependency */,
				53D4D3A3A3674B5985065B67 /* PBXTargetDependency */,
			);
			name = benchmark;
			productName = benchmark;
			productReference = 3C1A1242701F429DB4880E20 /* benchmark */;
			productType = "com.apple.product-type.tool";
		};
		8E9A07A641F7D1A660DC9E51 /* test_suite_cipher.blowfish */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1A36803E25AE44BB90315EC4 /* Build configuration list for PBXNativeTarget "test_suite_cipher.blowfish" */;
			buildPhases = (
				DF5A8823D842088418344E4A /* Generate tests/test_suite_cipher.blowfish.c */,
				4F766EAD174F452FBC28F2C7 /* Sources */,
				C70EEFECD2184486A8294BB3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				F743D54B5523483D8866B6DF /* PBXTargetDependency */,
				90B0143BBA7348469D9F7234 /* PBXTargetDependency */,
				616ECCA3B1304BFEAA0ED1D6 /* PBXTargetDependency */,
				50FEF67E38D64232935631EB /* PBXTargetDependency */,
			);
			name = test_suite_cipher.blowfish;
			productName = test_suite_cipher.blowfish;
			productReference = 7E8F2E1336A94995B37BFA74 /* test_suite_cipher.blowfish */;
			productType = "com.apple.product-type.tool";
		};
		8FA0E8E898CFED17F83F73E2 /* test_suite_pkwrite */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B6B708CAF9694B80BAD478C5 /* Build configuration list for PBXNativeTarget "test_suite_pkwrite" */;
			buildPhases = (
				EFFF48A331F88CE64593339C /* Generate tests/test_suite_pkwrite.c */,
				B15D552A0E3B49A79F882920 /* Sources */,
				9B19F03BBFA840ECAB161467 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				68AFED59805249CDB3400F18 /* PBXTargetDependency */,
				2153814108CF4ABDA0C3E282 /* PBXTargetDependency */,
				26547317B4BE4C6E90ACE1DD /* PBXTargetDependency */,
				9B2A1F8AD5AA40128A25EE54 /* PBXTargetDependency */,
			);
			name = test_suite_pkwrite;
			productName = test_suite_pkwrite;
			productReference = 7A1F00AACD2246A99BF61DBE /* test_suite_pkwrite */;
			productType = "com.apple.product-type.tool";
		};
		8FEB76854011AF773AF35D11 /* mbedtls */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 45FD6EA2BADC42D58FA0A5DC /* Build configuration list for PBXNativeTarget "mbedtls" */;
			buildPhases = (
				97CD464B7BF9445AAA4F512F /* Sources */,
				A8E2B9ACB44D43C2A78DE48C /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C39AA7E87AE84A3492D13870 /* PBXTargetDependency */,
				3F791C579F784C9C82520EB4 /* PBXTargetDependency */,
				2A220E3CFBC746959B0B455B /* PBXTargetDependency */,
			);
			name = mbedtls;
			productName = mbedtls;
			productReference = BE731BA7F98F4666959A4A0C /* libmbedtls.a */;
			productType = "com.apple.product-type.library.static";
		};
		9214018542B5E981EE3AB7AE /* test_suite_memory_buffer_alloc */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 1F2448AB054A41B1A7FA31C1 /* Build configuration list for PBXNativeTarget "test_suite_memory_buffer_alloc" */;
			buildPhases = (
				756C6E17B49D65F94164E220 /* Generate tests/test_suite_memory_buffer_alloc.c */,
				30971355CE6446608B719FAE /* Sources */,
				F12BBE2085B6458289FAF369 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				070E5C60A93541E390C4AEB4 /* PBXTargetDependency */,
				5791C077186E45C79920BF0D /* PBXTargetDependency */,
				CD174F617C9340888482060A /* PBXTargetDependency */,
				3B7AE7E9F8874F43B9EAED8A /* PBXTargetDependency */,
			);
			name = test_suite_memory_buffer_alloc;
			productName = test_suite_memory_buffer_alloc;
			productReference = 596B3F6DD9D94E0FA04F05EA /* test_suite_memory_buffer_alloc */;
			productType = "com.apple.product-type.tool";
		};
		94E69B4EB3FCA610727DF2B9 /* test_suite_pem */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 26878B778DC248EC9E95CFE2 /* Build configuration list for PBXNativeTarget "test_suite_pem" */;
			buildPhases = (
				F6A1F17C28ED96367D459F7D /* Generate tests/test_suite_pem.c */,
				DA884352C72D40D5BA07A1B1 /* Sources */,
				F9FA21B6AE7D4006A6F59CEE /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3EE7F760BF3D4555A254EAAD /* PBXTargetDependency */,
				6309D8AF228C4F48A65DAC62 /* PBXTargetDependency */,
				F3846C7B591A4F24B4F72F0D /* PBXTargetDependency */,
				112FF334C7124519B2753F4A /* PBXTargetDependency */,
			);
			name = test_suite_pem;
			productName = test_suite_pem;
			productReference = DCD8BC4A63F24CFAB059B6DD /* test_suite_pem */;
			productType = "com.apple.product-type.tool";
		};
		A125441CCCFBDD264EB9B08B /* test_suite_dhm */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E3E669C59E674DEDAE461644 /* Build configuration list for PBXNativeTarget "test_suite_dhm" */;
			buildPhases = (
				A84FB5DD25422D5E8920DE32 /* Generate tests/test_suite_dhm.c */,
				C46A0220598D49C18D25BC6B /* Sources */,
				77D81DB4D7FD4E58A0845BC0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3704B164DE234C7DA62D7676 /* PBXTargetDependency */,
				6FAECDC6FB4D40E59BFECBE0 /* PBXTargetDependency */,
				58374159065D477DAFFFC045 /* PBXTargetDependency */,
				927A654A436547E8AD132509 /* PBXTargetDependency */,
			);
			name = test_suite_dhm;
			productName = test_suite_dhm;
			productReference = 23D10C9BC4D84F0C9762F2A4 /* test_suite_dhm */;
			productType = "com.apple.product-type.tool";
		};
		A1DD15E66ABB6EBE447C0A2F /* test_suite_cipher.des */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = FA2B0C46F43E443DA2ACE3D7 /* Build configuration list for PBXNativeTarget "test_suite_cipher.des" */;
			buildPhases = (
				6B28668F297D3D867E008FCC /* Generate tests/test_suite_cipher.des.c */,
				FFA1201630904C9BA7D0AA96 /* Sources */,
				ACCE15EFF86940ACB0B0F154 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				ADE1DDBA30D2418699B425A5 /* PBXTargetDependency */,
				2F230BD36CEA42798A25D0BD /* PBXTargetDependency */,
				C0A75A5A77BF4D7082B8101C /* PBXTargetDependency */,
				DA20473751414DFCA2BF99D4 /* PBXTargetDependency */,
			);
			name = test_suite_cipher.des;
			productName = test_suite_cipher.des;
			productReference = 7DB064CC67F643BAA765228D /* test_suite_cipher.des */;
			productType = "com.apple.product-type.tool";
		};
		A3B27EF55CEDB0FDCEF93E5B /* crypt_and_hash */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CBD97FC5390342B7A9705401 /* Build configuration list for PBXNativeTarget "crypt_and_hash" */;
			buildPhases = (
				9D9D4290A745464082025FC8 /* Sources */,
				42E445EE78904371AB19F2B0 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				53CC356BB1CA4F1E91D32831 /* PBXTargetDependency */,
				48FE8EC59BA84E64BDA66D81 /* PBXTargetDependency */,
				5A1B4F2F0194414E80D12633 /* PBXTargetDependency */,
				149688D5B07A40E0AF2BC268 /* PBXTargetDependency */,
			);
			name = crypt_and_hash;
			productName = crypt_and_hash;
			productReference = A80EDC134A094301939B5E87 /* crypt_and_hash */;
			productType = "com.apple.product-type.tool";
		};
		A3F38B10EB6FB926A3674B77 /* test_suite_md */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8F9B292EADAE4EC49E9B0D48 /* Build configuration list for PBXNativeTarget "test_suite_md" */;
			buildPhases = (
				D3BEB42287F2840853B70B2E /* Generate tests/test_suite_md.c */,
				21F0E54CE96446208FB94743 /* Sources */,
				D25A955308EA419E9C08325A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C14D3EF6A2EA4652BBB98F2C /* PBXTargetDependency */,
				152B4219795E4C3B8B44A227 /* PBXTargetDependency */,
				2BA996EF97334EFA83AE7173 /* PBXTargetDependency */,
				9DE01E98D61C46539CE804EC /* PBXTargetDependency */,
			);
			name = test_suite_md;
			productName = test_suite_md;
			productReference = D4AD98F4EA0C4240A0270B4D /* test_suite_md */;
			productType = "com.apple.product-type.tool";
		};
		A40B70678473DC9140F25711 /* strerror */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4052BA4F192F4F74B6291F20 /* Build configuration list for PBXNativeTarget "strerror" */;
			buildPhases = (
				577F996DC79E4F9F89C4EFAB /* Sources */,
				56760582E81F4E7B87E15737 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				A9080BAC20354F27AB18BAE6 /* PBXTargetDependency */,
				1ED11358D0D645719861D67E /* PBXTargetDependency */,
				6319432FA39E4CE3A14E89FC /* PBXTargetDependency */,
				AA227E8428BB4C58A819DB17 /* PBXTargetDependency */,
			);
			name = strerror;
			productName = strerror;
			productReference = FB2621E1D8C140D9A8939829 /* strerror */;
			productType = "com.apple.product-type.tool";
		};
		A7CC9C8E9C07E5F9B89D49F0 /* crl_app */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B314ADFC6AF44CC4A06F0AA6 /* Build configuration list for PBXNativeTarget "crl_app" */;
			buildPhases = (
				8208C894064E4F8B81CD0470 /* Sources */,
				207F5380899244BA959DE8F8 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				87F334E503444E3988A8E8A8 /* PBXTargetDependency */,
				FE893E63976C48E18A6C9E62 /* PBXTargetDependency */,
				39CEEF4C3F834B0D9CEE2CD5 /* PBXTargetDependency */,
				FED225DB95914F16B87F6245 /* PBXTargetDependency */,
			);
			name = crl_app;
			productName = crl_app;
			productReference = D7C78C244F054270AAA7F29C /* crl_app */;
			productType = "com.apple.product-type.tool";
		};
		AD062B77985D3CD6896FCB37 /* aescrypt2 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DD4B3A3861B949C5A3DE96D4 /* Build configuration list for PBXNativeTarget "aescrypt2" */;
			buildPhases = (
				EACC0A243ACD4DDA80989584 /* Sources */,
				B40C5DC759EB4DD994E4D807 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				5F52554A721D4614867D750B /* PBXTargetDependency */,
				8A7809431C18436BB59D2F61 /* PBXTargetDependency */,
				EC58B143C2E443AE88A99F6E /* PBXTargetDependency */,
				93517E9DCABC47748738328D /* PBXTargetDependency */,
			);
			name = aescrypt2;
			productName = aescrypt2;
			productReference = C8D7D0CDF95F4F0EA6BF6D47 /* aescrypt2 */;
			productType = "com.apple.product-type.tool";
		};
		B028E59B3085A25389F965DA /* key_app_writer */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 6C70D02FA51C4B6A8083004B /* Build configuration list for PBXNativeTarget "key_app_writer" */;
			buildPhases = (
				643C0F4BCFD846C8A109D339 /* Sources */,
				6E7391FB7EA34FCB9712D8ED /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				7BA802AA4C3F4A009F5DA43E /* PBXTargetDependency */,
				349B66517AB44F019F8E4E0C /* PBXTargetDependency */,
				66AB6FF95CE341149E412FA8 /* PBXTargetDependency */,
				D5A8AF43317A49379D1231E6 /* PBXTargetDependency */,
			);
			name = key_app_writer;
			productName = key_app_writer;
			productReference = 9F4F1F8999224651AFAFCFEB /* key_app_writer */;
			productType = "com.apple.product-type.tool";
		};
		B372663E30C8F6BFDBBE43F3 /* test_suite_x509write */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DE72E3CAA7BE4A10990DB0F6 /* Build configuration list for PBXNativeTarget "test_suite_x509write" */;
			buildPhases = (
				90A374ACD5D3C66F8A3F58D1 /* Generate tests/test_suite_x509write.c */,
				1A6AFF97C7CF459A92EAD8DD /* Sources */,
				3648A1020B8C442E80C26126 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				9724D56E16334731B36E6688 /* PBXTargetDependency */,
				248CF68415CE4D7DAB6C5ACA /* PBXTargetDependency */,
				5083E4D5EF11403C96350F24 /* PBXTargetDependency */,
				F4E933B2ACFD414EBEA8B030 /* PBXTargetDependency */,
			);
			name = test_suite_x509write;
			productName = test_suite_x509write;
			productReference = 8E8B05F77DE94B689A84AD02 /* test_suite_x509write */;
			productType = "com.apple.product-type.tool";
		};
		B59BB71A65DC6CC337C9F91C /* test_suite_gcm.aes128_en */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A5E574DBB8594A24BB4A2516 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes128_en" */;
			buildPhases = (
				C34E089E544777474C55D659 /* Generate tests/test_suite_gcm.aes128_en.c */,
				FE169D6BEFBC43E1A4A97664 /* Sources */,
				805B2F7F84FF469680C4BF26 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				D25AABC302564035A670B6FB /* PBXTargetDependency */,
				9C4F258CF2A248589F0828A9 /* PBXTargetDependency */,
				69430D9A8B224C8CBC85EC4B /* PBXTargetDependency */,
				67CDA671321F4BABB5C6C200 /* PBXTargetDependency */,
			);
			name = test_suite_gcm.aes128_en;
			productName = test_suite_gcm.aes128_en;
			productReference = 37BC8214ACF8433DA010A575 /* test_suite_gcm.aes128_en */;
			productType = "com.apple.product-type.tool";
		};
		B708867B26E4A59B73B534D6 /* dh_client */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = EB1297048BEB434DBBAF0670 /* Build configuration list for PBXNativeTarget "dh_client" */;
			buildPhases = (
				13CC49BF83E642D18C63D8C3 /* Sources */,
				8546AA77A68047B2AAF3585F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C2F855CDFB274614BB0362AA /* PBXTargetDependency */,
				3BDD149D1E0C452B95F165CE /* PBXTargetDependency */,
				E383EA3733264DF6A2D2F4D7 /* PBXTargetDependency */,
				62DB2ADA26A14F20B30A5FF9 /* PBXTargetDependency */,
			);
			name = dh_client;
			productName = dh_client;
			productReference = A5CBB36B560B4F8B8D375DB3 /* dh_client */;
			productType = "com.apple.product-type.tool";
		};
		B7A9DDC810729B5A599C494B /* test_suite_gcm.aes192_de */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 82FBA2A950024181B52DCEA3 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes192_de" */;
			buildPhases = (
				943BC10859A1354B6D32A04D /* Generate tests/test_suite_gcm.aes192_de.c */,
				8E7C0FD34AB742B2ABC8BE24 /* Sources */,
				D046EFCE7DE941FABD8A7A55 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				EEB0DCDBDF6D4118AC04DA61 /* PBXTargetDependency */,
				31DA463B6E584894ADEE990C /* PBXTargetDependency */,
				714093547EA8453BACD45610 /* PBXTargetDependency */,
				58E865CF69E248E58A4DD26D /* PBXTargetDependency */,
			);
			name = test_suite_gcm.aes192_de;
			productName = test_suite_gcm.aes192_de;
			productReference = 5F085A71EC52428380BF15E9 /* test_suite_gcm.aes192_de */;
			productType = "com.apple.product-type.tool";
		};
		BA6EAC531C05691C65120E7A /* test_suite_aes.cbc */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = D2A59CE744FE4A038A2A76F2 /* Build configuration list for PBXNativeTarget "test_suite_aes.cbc" */;
			buildPhases = (
				45A86A72445DB71660B9C3C7 /* Generate tests/test_suite_aes.cbc.c */,
				EE44FC34699E443186F8E203 /* Sources */,
				976FBB9105C5438DBBFF032E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3ABA46EDCEBC4D5394E87AAC /* PBXTargetDependency */,
				EC86CA28B90E4C13AC09679F /* PBXTargetDependency */,
				1F2D471213474C33BB76D8FE /* PBXTargetDependency */,
				859EA9FFB9D64D5FB2C2B83A /* PBXTargetDependency */,
			);
			name = test_suite_aes.cbc;
			productName = test_suite_aes.cbc;
			productReference = 143B325AE9294E38B26E2427 /* test_suite_aes.cbc */;
			productType = "com.apple.product-type.tool";
		};
		BB7F0C6FDF2ABBCA2BD18BDB /* test_suite_pkcs5 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = A9BEBA0727D04EF2826694B3 /* Build configuration list for PBXNativeTarget "test_suite_pkcs5" */;
			buildPhases = (
				A72FA44D9BCFA83623802904 /* Generate tests/test_suite_pkcs5.c */,
				D5AFDCF955D94E38AD65A51E /* Sources */,
				A1C0CE68D3EF480BAE4303D3 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				37A8B12E8F3C4B4F92E36D53 /* PBXTargetDependency */,
				5B2303AE126B40709C7AF903 /* PBXTargetDependency */,
				DA85193DBFAD4ABF89C50B58 /* PBXTargetDependency */,
				FA77F3CC793E435AA4EA23AF /* PBXTargetDependency */,
			);
			name = test_suite_pkcs5;
			productName = test_suite_pkcs5;
			productReference = 4ECDB44651684DB0B3340DDD /* test_suite_pkcs5 */;
			productType = "com.apple.product-type.tool";
		};
		BFE762409D8FDA3EED808F63 /* test_suite_debug */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 31D0929F40F54F52B6D4C1B8 /* Build configuration list for PBXNativeTarget "test_suite_debug" */;
			buildPhases = (
				6E7126E4D74318B6CD7CCD6C /* Generate tests/test_suite_debug.c */,
				7E84A0A05BF743369526E6D6 /* Sources */,
				18F39D6D483545F4800DF3B4 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				8FB6084EFEDC4A8AA3DCFBC3 /* PBXTargetDependency */,
				26173CA026344764A9B1F36C /* PBXTargetDependency */,
				FE93AC6C03C746F6AB33A230 /* PBXTargetDependency */,
				03A40BC8A2A44A7BBE761330 /* PBXTargetDependency */,
			);
			name = test_suite_debug;
			productName = test_suite_debug;
			productReference = 8F598658032848628FE981AB /* test_suite_debug */;
			productType = "com.apple.product-type.tool";
		};
		C11323151749CE256D03B25F /* test_suite_gcm.aes256_de */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13DB4DC35C444E93BBA9FDA2 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes256_de" */;
			buildPhases = (
				DDFCB468508C32D5447DA796 /* Generate tests/test_suite_gcm.aes256_de.c */,
				285A12AA705842D19CB6652E /* Sources */,
				552B0FF1E83E456C86A4A895 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				DAE3561EA4ED4730BC9522AB /* PBXTargetDependency */,
				AD242C3C9E4944809871910F /* PBXTargetDependency */,
				991A755E29AD4B84AE6265F2 /* PBXTargetDependency */,
				EDBAC461493A4C4E9ACA8052 /* PBXTargetDependency */,
			);
			name = test_suite_gcm.aes256_de;
			productName = test_suite_gcm.aes256_de;
			productReference = 217DC98C3AD947A2AC7088D6 /* test_suite_gcm.aes256_de */;
			productType = "com.apple.product-type.tool";
		};
		C13B0399EDD813D5F9BAE270 /* udp_proxy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5716F40875304ACDA915437B /* Build configuration list for PBXNativeTarget "udp_proxy" */;
			buildPhases = (
				FB5ED51E2BBD46CDBBD00122 /* Sources */,
				EF28C28E57864861A3EADE0A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6F1C2D29A5F146ABB530ACBC /* PBXTargetDependency */,
				030C531CE6E44042868A114A /* PBXTargetDependency */,
				FE10E48797FE448EB6B7003F /* PBXTargetDependency */,
				94A60E0D8851486C906C7E31 /* PBXTargetDependency */,
			);
			name = udp_proxy;
			productName = udp_proxy;
			productReference = 7C17987A6C004B09BF4FA727 /* udp_proxy */;
			productType = "com.apple.product-type.tool";
		};
		C414B53A8A1727614D19D1E2 /* test_suite_hmac_drbg.nopr */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 17065A2F4D0E41FBBF13AACE /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.nopr" */;
			buildPhases = (
				3C2CF337F59D1766AE7C56EF /* Generate tests/test_suite_hmac_drbg.nopr.c */,
				8A5DDA90DFCA41D797AD75B5 /* Sources */,
				17F59F589AA84485B7EA6A1B /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				799EB684F36E40B592080CF1 /* PBXTargetDependency */,
				5A4B79AF1F624DD39F188CD7 /* PBXTargetDependency */,
				D30E84C6C7CE498D8C0E9567 /* PBXTargetDependency */,
				07B6699147B84AA3996C7E39 /* PBXTargetDependency */,
			);
			name = test_suite_hmac_drbg.nopr;
			productName = test_suite_hmac_drbg.nopr;
			productReference = 399EBEE336754F53B7DEBACF /* test_suite_hmac_drbg.nopr */;
			productType = "com.apple.product-type.tool";
		};
		C46A77CB84E3F02E0C7B8C05 /* test_suite_xtea */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3B1AB4CD7A7E4AC7BD081FE7 /* Build configuration list for PBXNativeTarget "test_suite_xtea" */;
			buildPhases = (
				A36D0B368956B6900059CC35 /* Generate tests/test_suite_xtea.c */,
				8CF567DD4AE948829EF84ADE /* Sources */,
				FBC4EFD4CBB34355BBF3B7A8 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				BB9F5C37232A4821843AF27A /* PBXTargetDependency */,
				4A3310E3909A4E2FB2E4D595 /* PBXTargetDependency */,
				045A472E91004C6CAAAF21CF /* PBXTargetDependency */,
				0F6031F4D7C0453DA8477248 /* PBXTargetDependency */,
			);
			name = test_suite_xtea;
			productName = test_suite_xtea;
			productReference = 5F686B1BAC244565AB459880 /* test_suite_xtea */;
			productType = "com.apple.product-type.tool";
		};
		C4C14FA10710C27B2ED4631D /* test_suite_hmac_drbg.no_reseed */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C2C80B666D334DF48DA27641 /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.no_reseed" */;
			buildPhases = (
				2F8244EE4030FD3709305490 /* Generate tests/test_suite_hmac_drbg.no_reseed.c */,
				D98EE294CCF84BA3A0EF19BE /* Sources */,
				288C1600F8B34EA89A8D8933 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				915CCDD2777E45438AABA0BD /* PBXTargetDependency */,
				3B751576FEAC46A59A0CCDBC /* PBXTargetDependency */,
				FE9477AF8E4B4443BCF72D78 /* PBXTargetDependency */,
				3308D9780DBD4BC3A182C608 /* PBXTargetDependency */,
			);
			name = test_suite_hmac_drbg.no_reseed;
			productName = test_suite_hmac_drbg.no_reseed;
			productReference = 0B56103A02DB41F4919ACD5E /* test_suite_hmac_drbg.no_reseed */;
			productType = "com.apple.product-type.tool";
		};
		C7E42F3F7E824047465303C7 /* rsa_verify_pss */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2D07747A7FBA43D98D765F5B /* Build configuration list for PBXNativeTarget "rsa_verify_pss" */;
			buildPhases = (
				CD17FC2AF41D4708BE074BB3 /* Sources */,
				30D3E9170E1F42A4B5061335 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				78B1C7CC5CE742E997039CC6 /* PBXTargetDependency */,
				2E70E74A296A4235821D1CC0 /* PBXTargetDependency */,
				BA25C45D5D284EE49E3EA4B8 /* PBXTargetDependency */,
				4A6704E1BB2E4FCFA9B0DCA6 /* PBXTargetDependency */,
			);
			name = rsa_verify_pss;
			productName = rsa_verify_pss;
			productReference = 2B684563732148BAB5569E47 /* rsa_verify_pss */;
			productType = "com.apple.product-type.tool";
		};
		CFB10AF112FA6572E3109F42 /* test_suite_ssl */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B1C31770FB14475A8FDC9000 /* Build configuration list for PBXNativeTarget "test_suite_ssl" */;
			buildPhases = (
				BB3B7922EBCFBADABA0AF168 /* Generate tests/test_suite_ssl.c */,
				3C2F3B527F4B4290BAA403F1 /* Sources */,
				461DF4435BE24F8BBF4BBA3D /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				165D2940B6634353B70AFACA /* PBXTargetDependency */,
				ED3DA0621CE34C319074B0E3 /* PBXTargetDependency */,
				C28718B2B2A848BB8FB0AA25 /* PBXTargetDependency */,
				3DE810CF189A4A2F847CC225 /* PBXTargetDependency */,
			);
			name = test_suite_ssl;
			productName = test_suite_ssl;
			productReference = FAD44B45F0214DF6A18D80A2 /* test_suite_ssl */;
			productType = "com.apple.product-type.tool";
		};
		CFFE51E1BA6ECF2B52B6FF7B /* test_suite_gcm.aes256_en */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 16DC8B303AD0435C84055E07 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes256_en" */;
			buildPhases = (
				7AE00039FDF4E32784A90EB6 /* Generate tests/test_suite_gcm.aes256_en.c */,
				B3E78DF27A87475AB1654B19 /* Sources */,
				D544AFCD1743491C853CE58F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				6B62372CB7414BAAAC1F5D33 /* PBXTargetDependency */,
				A426EA53235546ED89ECE8B0 /* PBXTargetDependency */,
				2F92113F8F4E48588B55FCBE /* PBXTargetDependency */,
				8D905528BA1D47B19FFF2CB0 /* PBXTargetDependency */,
			);
			name = test_suite_gcm.aes256_en;
			productName = test_suite_gcm.aes256_en;
			productReference = 838D89478A5F4C768237EA75 /* test_suite_gcm.aes256_en */;
			productType = "com.apple.product-type.tool";
		};
		D28BD8E78CA9E80AFF81273F /* ecdh_curve25519 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7AC29435A72E44ECB13834BB /* Build configuration list for PBXNativeTarget "ecdh_curve25519" */;
			buildPhases = (
				A4C43660A80E4F808F87E0AD /* Sources */,
				12BE50B319444B229A0069D5 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				0581419A8CAE4545A37ACF0E /* PBXTargetDependency */,
				4317989770984B19BEE7D27B /* PBXTargetDependency */,
				D46C78238831458BBEA809A4 /* PBXTargetDependency */,
				EC37E4A0C2BB4636B4DB3041 /* PBXTargetDependency */,
			);
			name = ecdh_curve25519;
			productName = ecdh_curve25519;
			productReference = 693084299B85488594F051FD /* ecdh_curve25519 */;
			productType = "com.apple.product-type.tool";
		};
		D3220840E123713147FC830A /* rsa_genkey */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3A20BF57640E45A29F380D98 /* Build configuration list for PBXNativeTarget "rsa_genkey" */;
			buildPhases = (
				BEDE2D5450B945F8942CBD00 /* Sources */,
				DB509135E75B4C22BDD3D17E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				3C85143996D247C6AB8C0D22 /* PBXTargetDependency */,
				F6993C52C5174F2188685ED3 /* PBXTargetDependency */,
				DE024E3D0B3340558A786110 /* PBXTargetDependency */,
				4489D7BD000F465F9FFF29B0 /* PBXTargetDependency */,
			);
			name = rsa_genkey;
			productName = rsa_genkey;
			productReference = DCF8932662D542C2BEA108B1 /* rsa_genkey */;
			productType = "com.apple.product-type.tool";
		};
		D3A4B154E07F5FC0044866BB /* pk_verify */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C886DDB5F5EC4771B965EA46 /* Build configuration list for PBXNativeTarget "pk_verify" */;
			buildPhases = (
				72E5632651A24CBEA9D34E11 /* Sources */,
				2A5625CA844D466D8A504971 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				259591963718409080FD8CF0 /* PBXTargetDependency */,
				1EC80F672CAE4FA4A2826E37 /* PBXTargetDependency */,
				46FD4200A20F45E9B0032BB2 /* PBXTargetDependency */,
				3EEFC833559146C091E45945 /* PBXTargetDependency */,
			);
			name = pk_verify;
			productName = pk_verify;
			productReference = D1273332224448EC8736E180 /* pk_verify */;
			productType = "com.apple.product-type.tool";
		};
		D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3A18317715934023B604268F /* Build configuration list for PBXNativeTarget "mbedcrypto" */;
			buildPhases = (
				09CDF961A0A54B0E8CF4385F /* Sources */,
				6FF0439CE1024D1D9EBBBCE9 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				EF5385ECF35040BFAF81C03B /* PBXTargetDependency */,
			);
			name = mbedcrypto;
			productName = mbedcrypto;
			productReference = 5F59E7BBA0E64F5A8D59D383 /* libmbedcrypto.a */;
			productType = "com.apple.product-type.library.static";
		};
		D4BAC9F7BFAB881657519796 /* test_suite_gcm.aes192_en */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8463547A255B426B94BA0823 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes192_en" */;
			buildPhases = (
				723BB69A637437EE90D8E6A0 /* Generate tests/test_suite_gcm.aes192_en.c */,
				2DAED5E6DC1445448606214D /* Sources */,
				6DAE575D695542AEAA120906 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E75BABC7BAD14D3A9B3A7972 /* PBXTargetDependency */,
				AB60418985CC49B1AD7091F2 /* PBXTargetDependency */,
				A43B4E948E05423CA3E8B747 /* PBXTargetDependency */,
				753ADEE1F6904979B43F6D55 /* PBXTargetDependency */,
			);
			name = test_suite_gcm.aes192_en;
			productName = test_suite_gcm.aes192_en;
			productReference = C392103CA09444BC946AF408 /* test_suite_gcm.aes192_en */;
			productType = "com.apple.product-type.tool";
		};
		D604253125427149818B6FAE /* test_suite_hmac_drbg.misc */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 4C6CE9BBA5D04404A466BF2C /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.misc" */;
			buildPhases = (
				87F8FE2F30D082FE30C6AD33 /* Generate tests/test_suite_hmac_drbg.misc.c */,
				0F6DA0C06EF442D39E85DF0C /* Sources */,
				C61CB307C26C4D1DA33A675A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				015D118899124C4C85CAF5DB /* PBXTargetDependency */,
				9DFBD135BB0946A590069923 /* PBXTargetDependency */,
				70004243D8D14BECB8E81585 /* PBXTargetDependency */,
				FA636AB16CF943D3B39D3C20 /* PBXTargetDependency */,
			);
			name = test_suite_hmac_drbg.misc;
			productName = test_suite_hmac_drbg.misc;
			productReference = FD1E7E2C5F0F4A7282DE3F71 /* test_suite_hmac_drbg.misc */;
			productType = "com.apple.product-type.tool";
		};
		DF501219B3B23533AF8A6509 /* pk_encrypt */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = DAC8FC190032403CAC3536FD /* Build configuration list for PBXNativeTarget "pk_encrypt" */;
			buildPhases = (
				BD700091A5924ABA854D11C8 /* Sources */,
				ECB0AB78C72B4F85957828E5 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				1C4DEAAFA41440EC81C1A472 /* PBXTargetDependency */,
				1C2BDA22B1904CDBB038F01E /* PBXTargetDependency */,
				8177669EDB6948DCAD53AB90 /* PBXTargetDependency */,
				8B9061CAD3854D3AA4674230 /* PBXTargetDependency */,
			);
			name = pk_encrypt;
			productName = pk_encrypt;
			productReference = 4739A311703A45B8A9BAEACC /* pk_encrypt */;
			productType = "com.apple.product-type.tool";
		};
		E159797A3E811F9C851B9709 /* test_suite_gcm.camellia */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 0F2B00DB256243818C95CA0D /* Build configuration list for PBXNativeTarget "test_suite_gcm.camellia" */;
			buildPhases = (
				7014FCF3BB6F2E7CB9F7CE76 /* Generate tests/test_suite_gcm.camellia.c */,
				2D887223C15F48EEBC930EF3 /* Sources */,
				2E0AF20D45BC42BAB21DFB61 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				04093280477441F2B6E98897 /* PBXTargetDependency */,
				D52B4F24F4AA4DA4BD6FA2AF /* PBXTargetDependency */,
				CA031AFB3D894E77AF2BE629 /* PBXTargetDependency */,
				3DD680FF75A14817B87D6D7B /* PBXTargetDependency */,
			);
			name = test_suite_gcm.camellia;
			productName = test_suite_gcm.camellia;
			productReference = D706A0FED6464D4986336D0B /* test_suite_gcm.camellia */;
			productType = "com.apple.product-type.tool";
		};
		E68F3F272FEF0F293219DFFC /* test_suite_entropy */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 649EFF6E6BE84B7F8654E8CE /* Build configuration list for PBXNativeTarget "test_suite_entropy" */;
			buildPhases = (
				CD12F41B9FFE415561B9E442 /* Generate tests/test_suite_entropy.c */,
				A5F3073CE31D44CCB381BC96 /* Sources */,
				D2F22805E8194EE8A625E3AB /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				81706FBD2ABA4EBCAEA2C451 /* PBXTargetDependency */,
				92B20C3C590D4079A8B910C4 /* PBXTargetDependency */,
				B7EABDA3AEC64CAB810AC721 /* PBXTargetDependency */,
				6B49E21A6A8844E9AA64000D /* PBXTargetDependency */,
			);
			name = test_suite_entropy;
			productName = test_suite_entropy;
			productReference = 05B41BA11EE84C62B2F8A6FF /* test_suite_entropy */;
			productType = "com.apple.product-type.tool";
		};
		E76DA26A151FCAB9E0D1A119 /* cert_write */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C526B5E607CC469EBE64C6F4 /* Build configuration list for PBXNativeTarget "cert_write" */;
			buildPhases = (
				BCBA9B07757343CA93104791 /* Sources */,
				0C77761556BB454EBF75AE31 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				832C598082934876916BD85A /* PBXTargetDependency */,
				DDDC1D85DC034BF1A4CA957F /* PBXTargetDependency */,
				70A64EBE68A4444DBD73AFBA /* PBXTargetDependency */,
				BD83E76B76C541CAB3F86CDA /* PBXTargetDependency */,
			);
			name = cert_write;
			productName = cert_write;
			productReference = 63113D3E7F1A4170BC874A1C /* cert_write */;
			productType = "com.apple.product-type.tool";
		};
		EA0FAF6A3AD69B898A442136 /* test_suite_version */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 793C5FE8A4B94E439830759F /* Build configuration list for PBXNativeTarget "test_suite_version" */;
			buildPhases = (
				59470948155E3F118808B61B /* Generate tests/test_suite_version.c */,
				E8E5A76BBBBA4DF7A4F860FB /* Sources */,
				3C21AD29A3EB4C2D8398C75A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				BC4799FF6B9D4E7591664EF8 /* PBXTargetDependency */,
				B4889FA8D7C24492A1D0C77B /* PBXTargetDependency */,
				E654ACC8BC704EC4B8568C33 /* PBXTargetDependency */,
				7CED39655C3C43F4AC434793 /* PBXTargetDependency */,
			);
			name = test_suite_version;
			productName = test_suite_version;
			productReference = D2384EC4BBF14B328859F6AF /* test_suite_version */;
			productType = "com.apple.product-type.tool";
		};
		EA2D6EFB9EDC427585DD87C4 /* dtls_client */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C5ABCFF677FA4E2AAD4049C9 /* Build configuration list for PBXNativeTarget "dtls_client" */;
			buildPhases = (
				34670186210546E7B9FE3F46 /* Sources */,
				757CBC714B9A45C2B38C6823 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C4E4F318683D4513A4BA5E06 /* PBXTargetDependency */,
				F1ED66F9672446E9B7F7410E /* PBXTargetDependency */,
				AFCDD444A300452095FB4396 /* PBXTargetDependency */,
				5ADAF09B2EA0473B8BEBE0CD /* PBXTargetDependency */,
			);
			name = dtls_client;
			productName = dtls_client;
			productReference = 8739254C705C41EC953BDBD7 /* dtls_client */;
			productType = "com.apple.product-type.tool";
		};
		ECDAA9AF5189F6419839989B /* test_suite_ecdh */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CAA12E2DE549498CA24A0FA5 /* Build configuration list for PBXNativeTarget "test_suite_ecdh" */;
			buildPhases = (
				84EEF02C14ACF4D2324C32AC /* Generate tests/test_suite_ecdh.c */,
				78EAAA0B7F0C4717A7BD1768 /* Sources */,
				5D884E1DA82F4E44BA3CA118 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				885BB0F134A841D39C754751 /* PBXTargetDependency */,
				08DB6D1BAE3349E88BA67B6C /* PBXTargetDependency */,
				C9CBB064842D458EAD132EDC /* PBXTargetDependency */,
				A5560781BC2E460AA580A59C /* PBXTargetDependency */,
			);
			name = test_suite_ecdh;
			productName = test_suite_ecdh;
			productReference = BC5F90F7C2FA49B181D4892B /* test_suite_ecdh */;
			productType = "com.apple.product-type.tool";
		};
		F23AF31B94E6C62B4DB47481 /* test_suite_pk */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 5F31CDFAB1464663AA5C6D52 /* Build configuration list for PBXNativeTarget "test_suite_pk" */;
			buildPhases = (
				281C2921797DA9EBE006A517 /* Generate tests/test_suite_pk.c */,
				4722B0C5B4674D2DBAC94F99 /* Sources */,
				1A7DAB313D8747C5B7310DC2 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				50936D710EDE44B5B9A80FAF /* PBXTargetDependency */,
				25163BCF22FB43F29F296F9A /* PBXTargetDependency */,
				03CCF4D2439048C6B8C68DA3 /* PBXTargetDependency */,
				CF24E43C04C34C5A88B4FFEC /* PBXTargetDependency */,
			);
			name = test_suite_pk;
			productName = test_suite_pk;
			productReference = 02167C6C4441441E80EC8D4C /* test_suite_pk */;
			productType = "com.apple.product-type.tool";
		};
		FB48AF52AB945695FD505187 /* test_suite_hmac_drbg.pr */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = E3B005B92B2D492EAC57384F /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.pr" */;
			buildPhases = (
				7FE7912CFD1A0BDD68486BCB /* Generate tests/test_suite_hmac_drbg.pr.c */,
				23D141905FB24B6E8A3F374D /* Sources */,
				B6581928B9394A6AA80D5A8E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				00A607917B64461CB8FA1BEA /* PBXTargetDependency */,
				B9A6CF63E6DB404F9321C0E3 /* PBXTargetDependency */,
				D527799701D548338ABC620F /* PBXTargetDependency */,
				5206AF8638204A9790CC1DEB /* PBXTargetDependency */,
			);
			name = test_suite_hmac_drbg.pr;
			productName = test_suite_hmac_drbg.pr;
			productReference = 7ACBBBF62DAF4B0CAB4E6DBC /* test_suite_hmac_drbg.pr */;
			productType = "com.apple.product-type.tool";
		};
		FC4BCA4214B11E34D81ED1EC /* test_suite_shax */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 7AAE787F9E484860AD7514E0 /* Build configuration list for PBXNativeTarget "test_suite_shax" */;
			buildPhases = (
				3AEC50338D59859A0934E901 /* Generate tests/test_suite_shax.c */,
				2B2CB16CD4A44120BEFAE148 /* Sources */,
				BCEC3B81F6D949AAA492938E /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B99A51031AC84515922249F4 /* PBXTargetDependency */,
				315F9C813C584A48A81B50AF /* PBXTargetDependency */,
				F72EE72CCA98468BBA75DBFB /* PBXTargetDependency */,
				3B2ADA6F2AA24211817C7FD0 /* PBXTargetDependency */,
			);
			name = test_suite_shax;
			productName = test_suite_shax;
			productReference = FBC3DA9CD3934752A00B10B9 /* test_suite_shax */;
			productType = "com.apple.product-type.tool";
		};
		FDD9F01D3BAD296EAE2FC004 /* test_suite_ecp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 64D4BEC35EC74DEFA5DF9F5C /* Build configuration list for PBXNativeTarget "test_suite_ecp" */;
			buildPhases = (
				1D7551D1317E6B2EBAD03B29 /* Generate tests/test_suite_ecp.c */,
				4613AA4B368E4B14B1298BFD /* Sources */,
				BED748079EDC4B998064265F /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				03567232A8554C4491A70201 /* PBXTargetDependency */,
				F3E162A476AC464CB93185C0 /* PBXTargetDependency */,
				66569FA0188B4DA78F835059 /* PBXTargetDependency */,
				7B753E5CC17548A1AFF2C3D1 /* PBXTargetDependency */,
			);
			name = test_suite_ecp;
			productName = test_suite_ecp;
			productReference = 857B4BD51648433E98CD97F7 /* test_suite_ecp */;
			productType = "com.apple.product-type.tool";
		};
		FDF3AAC86D61F1ECA3FA3A2C /* ssl_client1 */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 861336D15A1545CD8285442F /* Build configuration list for PBXNativeTarget "ssl_client1" */;
			buildPhases = (
				A9FAF5C4F7CA4E34B9F2FFD9 /* Sources */,
				10943DC53B564B1B8409330A /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				DC991E767C1B4427860780D5 /* PBXTargetDependency */,
				2C0B67BE976E4893AC0708A4 /* PBXTargetDependency */,
				980B0E3D0DD14F82B0166440 /* PBXTargetDependency */,
				BAFDE547EE65498692D22F7D /* PBXTargetDependency */,
			);
			name = ssl_client1;
			productName = ssl_client1;
			productReference = FF698AE74E034FE79A6E06F0 /* ssl_client1 */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		DB66AD163D444739BEFC5D1F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1540;
			};
			buildConfigurationList = 94B1CFD72C844E87923C4F42 /* Build configuration list for PBXProject "mbed TLS" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 6B8162867B6F474FAFEE1CF3;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				6F6DA67F34C070F08125A803 /* ALL_BUILD */,
				60222090283F134E7F4292E5 /* RUN_TESTS */,
				7759261DA31821E0140A5015 /* ZERO_CHECK */,
				AD062B77985D3CD6896FCB37 /* aescrypt2 */,
				B10EA1B56A3E4F318BACE8BE /* apidoc */,
				8C377CE5BA566D937D6EE1A2 /* benchmark */,
				2B25EA0FDBF429F2B1FE1CD1 /* cert_app */,
				48C61CF1678F4F793728C80F /* cert_req */,
				E76DA26A151FCAB9E0D1A119 /* cert_write */,
				42312B05A9769174701FD09E /* covtest */,
				A7CC9C8E9C07E5F9B89D49F0 /* crl_app */,
				A3B27EF55CEDB0FDCEF93E5B /* crypt_and_hash */,
				B708867B26E4A59B73B534D6 /* dh_client */,
				6B6F9FBAACCEFE4150670DE9 /* dh_genprime */,
				0D70FB16A98363CE6F52832B /* dh_server */,
				EA2D6EFB9EDC427585DD87C4 /* dtls_client */,
				661DDB8594BD9ECB32DA30D7 /* dtls_server */,
				D28BD8E78CA9E80AFF81273F /* ecdh_curve25519 */,
				0A017AD8134DD8776A6E53C5 /* ecdsa */,
				5F7D115795CD45C428F4F4DB /* gen_entropy */,
				60BF7F050AB2279A4DA47C0D /* gen_key */,
				1528D30F8C106F5845A3A178 /* gen_random_ctr_drbg */,
				3EE77B0EFDD135BC246B8BC4 /* gen_random_havege */,
				6889B48630D80804EA40849D /* generic_sum */,
				594B6126DD23767E1DFA5F65 /* hello */,
				F5B05637593BBB92D286044E /* install */,
				32EE733876C8BA491B41ECDE /* key_app */,
				B028E59B3085A25389F965DA /* key_app_writer */,
				BDF91746C131D23CEB70927E /* lcov */,
				F1CE8A4F146284118E02CDC0 /* lib */,
				D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */,
				8FEB76854011AF773AF35D11 /* mbedtls */,
				55E0753594CD91FBA837EC69 /* mbedx509 */,
				1155F10B4C175C4FA7F28190 /* memcheck */,
				8209F7D3813EC81518E87B8D /* mini_client */,
				55C40BCD2F68C1BF2E8A271B /* mpi_demo */,
				7A90C5B9C87A1D86D5D93D45 /* pem2der */,
				4E6344849A6B5BB6DDE9BB85 /* pk_decrypt */,
				DF501219B3B23533AF8A6509 /* pk_encrypt */,
				653CDB6ABFF889E53981B6C8 /* pk_sign */,
				D3A4B154E07F5FC0044866BB /* pk_verify */,
				419A1319A6D41E062579921D /* req_app */,
				136E46FB73D7A21210B142F3 /* rsa_decrypt */,
				677E40F0A3DC36457EFCFD30 /* rsa_encrypt */,
				D3220840E123713147FC830A /* rsa_genkey */,
				6087DEC08F506B746E586B71 /* rsa_sign */,
				78653924CA02A9609D323F5D /* rsa_sign_pss */,
				0A215FCBFCBE27F4EDE16C33 /* rsa_verify */,
				C7E42F3F7E824047465303C7 /* rsa_verify_pss */,
				0FB7C2E8279DFF9ABD38E2F7 /* selftest */,
				14A4C602FAE16D0524B04982 /* ssl_cert_test */,
				FDF3AAC86D61F1ECA3FA3A2C /* ssl_client1 */,
				542D9811FC63CEB162FEE1CE /* ssl_client2 */,
				4E2B702CA1606D2D041BAAE7 /* ssl_fork_server */,
				476B1AB22BB1928A5C450AA9 /* ssl_mail_client */,
				82BB205E9D823CBE782D635B /* ssl_pthread_server */,
				5020FC08C3A1B85FCB44C3CA /* ssl_server */,
				736CCC5FE48E4D390E3BB9F5 /* ssl_server2 */,
				A40B70678473DC9140F25711 /* strerror */,
				BA6EAC531C05691C65120E7A /* test_suite_aes.cbc */,
				008A9E384E8DA4A85DFF13C9 /* test_suite_aes.cfb */,
				89AC83B8E97C5C53AF04A31A /* test_suite_aes.ecb */,
				32B8EA173E25FBFC6E9C01E2 /* test_suite_aes.rest */,
				3809E3A3FE5BF094EEABDA55 /* test_suite_arc4 */,
				47E1F789F1A86F5114C29A71 /* test_suite_asn1write */,
				8B0B472CF5585674FACD1A0C /* test_suite_base64 */,
				5E260C1BC30341AE36184657 /* test_suite_blowfish */,
				4F12C44F3F8D4428F96BD424 /* test_suite_camellia */,
				1330062EFA274740C37DF730 /* test_suite_ccm */,
				8BC88D528D77393319B6F5B7 /* test_suite_cipher.aes */,
				18E37844854DC1695D909C74 /* test_suite_cipher.arc4 */,
				8E9A07A641F7D1A660DC9E51 /* test_suite_cipher.blowfish */,
				77DE82126300AE680D449967 /* test_suite_cipher.camellia */,
				42BB226F579504137717614A /* test_suite_cipher.ccm */,
				A1DD15E66ABB6EBE447C0A2F /* test_suite_cipher.des */,
				718C3FD6366CEF8A124A2F83 /* test_suite_cipher.gcm */,
				5C2941308E1B2503F15EC675 /* test_suite_cipher.null */,
				21072FB096193A28C3836D0E /* test_suite_cipher.padding */,
				291F11BC75D230E75C5C0176 /* test_suite_cmac */,
				2D4919BE5807630ED568CF83 /* test_suite_ctr_drbg */,
				BFE762409D8FDA3EED808F63 /* test_suite_debug */,
				853AC1C2F16240CB4A3EE900 /* test_suite_des */,
				A125441CCCFBDD264EB9B08B /* test_suite_dhm */,
				ECDAA9AF5189F6419839989B /* test_suite_ecdh */,
				4C8CC82D7F7DCD8D42888FDA /* test_suite_ecdsa */,
				1CBC5D71370311E6C7800DF3 /* test_suite_ecjpake */,
				FDD9F01D3BAD296EAE2FC004 /* test_suite_ecp */,
				E68F3F272FEF0F293219DFFC /* test_suite_entropy */,
				664BE17B18A2C4681B324AC6 /* test_suite_error */,
				67F6D13E4A82173F6F28AD20 /* test_suite_gcm.aes128_de */,
				B59BB71A65DC6CC337C9F91C /* test_suite_gcm.aes128_en */,
				B7A9DDC810729B5A599C494B /* test_suite_gcm.aes192_de */,
				D4BAC9F7BFAB881657519796 /* test_suite_gcm.aes192_en */,
				C11323151749CE256D03B25F /* test_suite_gcm.aes256_de */,
				CFFE51E1BA6ECF2B52B6FF7B /* test_suite_gcm.aes256_en */,
				E159797A3E811F9C851B9709 /* test_suite_gcm.camellia */,
				D604253125427149818B6FAE /* test_suite_hmac_drbg.misc */,
				C4C14FA10710C27B2ED4631D /* test_suite_hmac_drbg.no_reseed */,
				C414B53A8A1727614D19D1E2 /* test_suite_hmac_drbg.nopr */,
				FB48AF52AB945695FD505187 /* test_suite_hmac_drbg.pr */,
				A3F38B10EB6FB926A3674B77 /* test_suite_md */,
				453330CCFAE45684805B9B21 /* test_suite_mdx */,
				9214018542B5E981EE3AB7AE /* test_suite_memory_buffer_alloc */,
				6407C0786940FEC2502CFA25 /* test_suite_mpi */,
				94E69B4EB3FCA610727DF2B9 /* test_suite_pem */,
				F23AF31B94E6C62B4DB47481 /* test_suite_pk */,
				4D2298E3D55708D846A03638 /* test_suite_pkcs1_v15 */,
				81477C78627B0B6AF7DD8803 /* test_suite_pkcs1_v21 */,
				BB7F0C6FDF2ABBCA2BD18BDB /* test_suite_pkcs5 */,
				8B5FBCA5D37095305232AC6E /* test_suite_pkparse */,
				8FA0E8E898CFED17F83F73E2 /* test_suite_pkwrite */,
				29BA59437D681954609AE5BA /* test_suite_rsa */,
				FC4BCA4214B11E34D81ED1EC /* test_suite_shax */,
				CFB10AF112FA6572E3109F42 /* test_suite_ssl */,
				1EB1C7A69382063DD1DFBAAE /* test_suite_timing */,
				EA0FAF6A3AD69B898A442136 /* test_suite_version */,
				3066306EE06D0EB955CC8466 /* test_suite_x509parse */,
				B372663E30C8F6BFDBBE43F3 /* test_suite_x509write */,
				C46A77CB84E3F02E0C7B8C05 /* test_suite_xtea */,
				C13B0399EDD813D5F9BAE270 /* udp_proxy */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		003C8D08B0008F35F218E126 /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/ctest --force-new-ctest-process -C $CONFIGURATION$EFFECTIVE_PLATFORM_NAME\nfi\n";
			showEnvVarsInLog = 0;
		};
		01323177FD2E5C580F4D38DE /* Generate CMakeFiles/lcov */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/lcov";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeFiles/lcov",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  rm -rf Coverage\n  lcov --capture --initial --directory library/CMakeFiles/mbedtls.dir -o files.info\n  lcov --capture --directory library/CMakeFiles/mbedtls.dir -o tests.info\n  lcov --add-tracefile files.info --add-tracefile tests.info -o all.info\n  lcov --remove all.info -o final.info '*.h'\n  gendesc tests/Descriptions.txt -o descriptions\n  genhtml --title mbed\\ TLS --description-file descriptions --keep-descriptions --legend --no-branch-coverage -o Coverage final.info\n  rm -f files.info tests.info all.info final.info descriptions\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  rm -rf Coverage\n  lcov --capture --initial --directory library/CMakeFiles/mbedtls.dir -o files.info\n  lcov --capture --directory library/CMakeFiles/mbedtls.dir -o tests.info\n  lcov --add-tracefile files.info --add-tracefile tests.info -o all.info\n  lcov --remove all.info -o final.info '*.h'\n  gendesc tests/Descriptions.txt -o descriptions\n  genhtml --title mbed\\ TLS --description-file descriptions --keep-descriptions --legend --no-branch-coverage -o Coverage final.info\n  rm -f files.info tests.info all.info final.info descriptions\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  rm -rf Coverage\n  lcov --capture --initial --directory library/CMakeFiles/mbedtls.dir -o files.info\n  lcov --capture --directory library/CMakeFiles/mbedtls.dir -o tests.info\n  lcov --add-tracefile files.info --add-tracefile tests.info -o all.info\n  lcov --remove all.info -o final.info '*.h'\n  gendesc tests/Descriptions.txt -o descriptions\n  genhtml --title mbed\\ TLS --description-file descriptions --keep-descriptions --legend --no-branch-coverage -o Coverage final.info\n  rm -f files.info tests.info all.info final.info descriptions\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  rm -rf Coverage\n  lcov --capture --initial --directory library/CMakeFiles/mbedtls.dir -o files.info\n  lcov --capture --directory library/CMakeFiles/mbedtls.dir -o tests.info\n  lcov --add-tracefile files.info --add-tracefile tests.info -o all.info\n  lcov --remove all.info -o final.info '*.h'\n  gendesc tests/Descriptions.txt -o descriptions\n  genhtml --title mbed\\ TLS --description-file descriptions --keep-descriptions --legend --no-branch-coverage -o Coverage final.info\n  rm -f files.info tests.info all.info final.info descriptions\nfi\n";
			showEnvVarsInLog = 0;
		};
		02F7ECF74579F457FB8880B4 /* Generate tests/test_suite_blowfish.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_blowfish.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_blowfish.function",
			);
			name = "Generate tests/test_suite_blowfish.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_blowfish.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_blowfish test_suite_blowfish\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_blowfish test_suite_blowfish\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_blowfish test_suite_blowfish\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_blowfish test_suite_blowfish\nfi\n";
			showEnvVarsInLog = 0;
		};
		06D1F9E0414E9B181711CA66 /* Generate tests/test_suite_cipher.null.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.null.data",
			);
			name = "Generate tests/test_suite_cipher.null.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.null.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.null\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.null\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.null\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.null\nfi\n";
			showEnvVarsInLog = 0;
		};
		0E9C92FE640135A8A58E42C2 /* Generate tests/test_suite_ecjpake.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecjpake.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecjpake.function",
			);
			name = "Generate tests/test_suite_ecjpake.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ecjpake.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecjpake test_suite_ecjpake\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecjpake test_suite_ecjpake\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecjpake test_suite_ecjpake\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecjpake test_suite_ecjpake\nfi\n";
			showEnvVarsInLog = 0;
		};
		107156E0549AA579654FEFD2 /* Generate tests/test_suite_ccm.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ccm.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ccm.function",
			);
			name = "Generate tests/test_suite_ccm.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ccm.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ccm test_suite_ccm\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ccm test_suite_ccm\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ccm test_suite_ccm\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ccm test_suite_ccm\nfi\n";
			showEnvVarsInLog = 0;
		};
		1ABA9C12EBC9E2F46C4FC710 /* Generate tests/test_suite_ecdsa.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecdsa.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecdsa.function",
			);
			name = "Generate tests/test_suite_ecdsa.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ecdsa.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdsa test_suite_ecdsa\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdsa test_suite_ecdsa\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdsa test_suite_ecdsa\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdsa test_suite_ecdsa\nfi\n";
			showEnvVarsInLog = 0;
		};
		1B07BFD17BB926CAC66417CF /* Generate tests/test_suite_aes.rest.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.rest.data",
			);
			name = "Generate tests/test_suite_aes.rest.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_aes.rest.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.rest\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.rest\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.rest\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.rest\nfi\n";
			showEnvVarsInLog = 0;
		};
		1B38A252E82464A0F851CFC8 /* Generate tests/test_suite_des.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_des.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_des.function",
			);
			name = "Generate tests/test_suite_des.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_des.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_des test_suite_des\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_des test_suite_des\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_des test_suite_des\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_des test_suite_des\nfi\n";
			showEnvVarsInLog = 0;
		};
		1D7551D1317E6B2EBAD03B29 /* Generate tests/test_suite_ecp.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecp.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecp.function",
			);
			name = "Generate tests/test_suite_ecp.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ecp.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecp test_suite_ecp\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecp test_suite_ecp\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecp test_suite_ecp\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecp test_suite_ecp\nfi\n";
			showEnvVarsInLog = 0;
		};
		281C2921797DA9EBE006A517 /* Generate tests/test_suite_pk.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pk.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pk.function",
			);
			name = "Generate tests/test_suite_pk.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pk.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pk test_suite_pk\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pk test_suite_pk\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pk test_suite_pk\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pk test_suite_pk\nfi\n";
			showEnvVarsInLog = 0;
		};
		2B8CD53BFCC8AD5E91490795 /* Generate tests/test_suite_aes.cfb.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.cfb.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.function",
			);
			name = "Generate tests/test_suite_aes.cfb.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_aes.cfb.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cfb\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cfb\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cfb\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cfb\nfi\n";
			showEnvVarsInLog = 0;
		};
		2F8244EE4030FD3709305490 /* Generate tests/test_suite_hmac_drbg.no_reseed.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.no_reseed.data",
			);
			name = "Generate tests/test_suite_hmac_drbg.no_reseed.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_hmac_drbg.no_reseed.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.no_reseed\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.no_reseed\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.no_reseed\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.no_reseed\nfi\n";
			showEnvVarsInLog = 0;
		};
		37D2F36DA8A4F9C2A16B5937 /* Generate tests/test_suite_pkcs1_v21.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkcs1_v21.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkcs1_v21.function",
			);
			name = "Generate tests/test_suite_pkcs1_v21.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pkcs1_v21.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v21 test_suite_pkcs1_v21\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v21 test_suite_pkcs1_v21\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v21 test_suite_pkcs1_v21\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v21 test_suite_pkcs1_v21\nfi\n";
			showEnvVarsInLog = 0;
		};
		3A834B9BE8AF543450A4715D /* Generate tests/test_suite_cipher.arc4.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.arc4.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
			);
			name = "Generate tests/test_suite_cipher.arc4.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.arc4.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.arc4\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.arc4\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.arc4\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.arc4\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AEC50338D59859A0934E901 /* Generate tests/test_suite_shax.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_shax.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_shax.function",
			);
			name = "Generate tests/test_suite_shax.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_shax.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_shax test_suite_shax\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_shax test_suite_shax\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_shax test_suite_shax\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_shax test_suite_shax\nfi\n";
			showEnvVarsInLog = 0;
		};
		3C2CF337F59D1766AE7C56EF /* Generate tests/test_suite_hmac_drbg.nopr.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.nopr.data",
			);
			name = "Generate tests/test_suite_hmac_drbg.nopr.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_hmac_drbg.nopr.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.nopr\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.nopr\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.nopr\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.nopr\nfi\n";
			showEnvVarsInLog = 0;
		};
		45A86A72445DB71660B9C3C7 /* Generate tests/test_suite_aes.cbc.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.cbc.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.function",
			);
			name = "Generate tests/test_suite_aes.cbc.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_aes.cbc.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cbc\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cbc\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cbc\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.cbc\nfi\n";
			showEnvVarsInLog = 0;
		};
		496C0F7F5A4554F2638B8B07 /* Generate tests/test_suite_pkparse.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkparse.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkparse.function",
			);
			name = "Generate tests/test_suite_pkparse.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pkparse.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkparse test_suite_pkparse\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkparse test_suite_pkparse\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkparse test_suite_pkparse\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkparse test_suite_pkparse\nfi\n";
			showEnvVarsInLog = 0;
		};
		4AC5B6053417FC384B44FB82 /* Generate tests/test_suite_cipher.camellia.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.camellia.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
			);
			name = "Generate tests/test_suite_cipher.camellia.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.camellia.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.camellia\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.camellia\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.camellia\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.camellia\nfi\n";
			showEnvVarsInLog = 0;
		};
		501DDEA4C4331BA17BFE880A /* Generate tests/test_suite_mdx.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_mdx.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_mdx.function",
			);
			name = "Generate tests/test_suite_mdx.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_mdx.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mdx test_suite_mdx\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mdx test_suite_mdx\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mdx test_suite_mdx\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mdx test_suite_mdx\nfi\n";
			showEnvVarsInLog = 0;
		};
		549724ACF6176521CD8576FA /* Generate CMakeFiles/ZERO_CHECK */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ZERO_CHECK";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeFiles/ZERO_CHECK",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make -f /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make -f /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make -f /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeScripts/ReRunCMake.make\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make -f /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeScripts/ReRunCMake.make\nfi\n";
			showEnvVarsInLog = 0;
		};
		59470948155E3F118808B61B /* Generate tests/test_suite_version.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_version.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_version.function",
			);
			name = "Generate tests/test_suite_version.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_version.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_version test_suite_version\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_version test_suite_version\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_version test_suite_version\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_version test_suite_version\nfi\n";
			showEnvVarsInLog = 0;
		};
		60458AA2767046C005CA3E21 /* Generate tests/test_suite_cipher.aes.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.aes.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
			);
			name = "Generate tests/test_suite_cipher.aes.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.aes.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.aes\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.aes\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.aes\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.aes\nfi\n";
			showEnvVarsInLog = 0;
		};
		6A3219299A15656317EBC074 /* Generate tests/test_suite_cipher.ccm.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.ccm.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
			);
			name = "Generate tests/test_suite_cipher.ccm.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.ccm.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.ccm\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.ccm\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.ccm\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.ccm\nfi\n";
			showEnvVarsInLog = 0;
		};
		6B28668F297D3D867E008FCC /* Generate tests/test_suite_cipher.des.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.des.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
			);
			name = "Generate tests/test_suite_cipher.des.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.des.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.des\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.des\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.des\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.des\nfi\n";
			showEnvVarsInLog = 0;
		};
		6E7126E4D74318B6CD7CCD6C /* Generate tests/test_suite_debug.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_debug.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_debug.function",
			);
			name = "Generate tests/test_suite_debug.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_debug.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_debug test_suite_debug\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_debug test_suite_debug\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_debug test_suite_debug\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_debug test_suite_debug\nfi\n";
			showEnvVarsInLog = 0;
		};
		7014FCF3BB6F2E7CB9F7CE76 /* Generate tests/test_suite_gcm.camellia.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.camellia.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.camellia.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.camellia.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.camellia\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.camellia\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.camellia\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.camellia\nfi\n";
			showEnvVarsInLog = 0;
		};
		71E460D44E90C41E4B39052A /* Generate tests/test_suite_arc4.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_arc4.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_arc4.function",
			);
			name = "Generate tests/test_suite_arc4.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_arc4.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_arc4 test_suite_arc4\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_arc4 test_suite_arc4\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_arc4 test_suite_arc4\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_arc4 test_suite_arc4\nfi\n";
			showEnvVarsInLog = 0;
		};
		723BB69A637437EE90D8E6A0 /* Generate tests/test_suite_gcm.aes192_en.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.aes192_en.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.aes192_en.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.aes192_en.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_en\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_en\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_en\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_en\nfi\n";
			showEnvVarsInLog = 0;
		};
		756C6E17B49D65F94164E220 /* Generate tests/test_suite_memory_buffer_alloc.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_memory_buffer_alloc.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_memory_buffer_alloc.function",
			);
			name = "Generate tests/test_suite_memory_buffer_alloc.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_memory_buffer_alloc.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_memory_buffer_alloc test_suite_memory_buffer_alloc\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_memory_buffer_alloc test_suite_memory_buffer_alloc\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_memory_buffer_alloc test_suite_memory_buffer_alloc\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_memory_buffer_alloc test_suite_memory_buffer_alloc\nfi\n";
			showEnvVarsInLog = 0;
		};
		7AE00039FDF4E32784A90EB6 /* Generate tests/test_suite_gcm.aes256_en.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.aes256_en.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.aes256_en.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.aes256_en.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_en\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_en\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_en\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_en\nfi\n";
			showEnvVarsInLog = 0;
		};
		7FE7912CFD1A0BDD68486BCB /* Generate tests/test_suite_hmac_drbg.pr.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.pr.data",
			);
			name = "Generate tests/test_suite_hmac_drbg.pr.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_hmac_drbg.pr.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.pr\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.pr\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.pr\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.pr\nfi\n";
			showEnvVarsInLog = 0;
		};
		84EEF02C14ACF4D2324C32AC /* Generate tests/test_suite_ecdh.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecdh.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ecdh.function",
			);
			name = "Generate tests/test_suite_ecdh.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ecdh.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdh test_suite_ecdh\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdh test_suite_ecdh\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdh test_suite_ecdh\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ecdh test_suite_ecdh\nfi\n";
			showEnvVarsInLog = 0;
		};
		87F8FE2F30D082FE30C6AD33 /* Generate tests/test_suite_hmac_drbg.misc.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_hmac_drbg.misc.data",
			);
			name = "Generate tests/test_suite_hmac_drbg.misc.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_hmac_drbg.misc.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.misc\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.misc\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.misc\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_hmac_drbg test_suite_hmac_drbg.misc\nfi\n";
			showEnvVarsInLog = 0;
		};
		90A374ACD5D3C66F8A3F58D1 /* Generate tests/test_suite_x509write.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_x509write.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_x509write.function",
			);
			name = "Generate tests/test_suite_x509write.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_x509write.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509write test_suite_x509write\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509write test_suite_x509write\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509write test_suite_x509write\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509write test_suite_x509write\nfi\n";
			showEnvVarsInLog = 0;
		};
		917886938E3AB1660E3E4760 /* Generate CMakeFiles/apidoc */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/apidoc";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeFiles/apidoc",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  doxygen doxygen/mbedtls.doxyfile\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  doxygen doxygen/mbedtls.doxyfile\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  doxygen doxygen/mbedtls.doxyfile\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  doxygen doxygen/mbedtls.doxyfile\nfi\n";
			showEnvVarsInLog = 0;
		};
		92CA67109A5DF2E1D5F27A50 /* Generate tests/test_suite_x509parse.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_x509parse.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_x509parse.function",
			);
			name = "Generate tests/test_suite_x509parse.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_x509parse.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509parse test_suite_x509parse\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509parse test_suite_x509parse\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509parse test_suite_x509parse\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_x509parse test_suite_x509parse\nfi\n";
			showEnvVarsInLog = 0;
		};
		93426DA6A4AC2C2AC9CE883C /* CMake PostBuild Rules */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			name = "CMake PostBuild Rules";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  /opt/homebrew/Cellar/cmake/3.30.3/bin/cmake -DBUILD_TYPE=$CONFIGURATION$EFFECTIVE_PLATFORM_NAME -P cmake_install.cmake\nfi\n";
			showEnvVarsInLog = 0;
		};
		943BC10859A1354B6D32A04D /* Generate tests/test_suite_gcm.aes192_de.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.aes192_de.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.aes192_de.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.aes192_de.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_de\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_de\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_de\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes192_de\nfi\n";
			showEnvVarsInLog = 0;
		};
		968A340DDEA9D5D467990EFB /* Generate tests/test_suite_aes.ecb.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.ecb.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_aes.function",
			);
			name = "Generate tests/test_suite_aes.ecb.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_aes.ecb.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.ecb\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.ecb\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.ecb\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_aes test_suite_aes.ecb\nfi\n";
			showEnvVarsInLog = 0;
		};
		975D401E8614B1EF1B9D2CC7 /* Generate tests/test_suite_timing.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_timing.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_timing.function",
			);
			name = "Generate tests/test_suite_timing.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_timing.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_timing test_suite_timing\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_timing test_suite_timing\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_timing test_suite_timing\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_timing test_suite_timing\nfi\n";
			showEnvVarsInLog = 0;
		};
		9B6C21DC069C210D1C2CAAC8 /* Generate tests/test_suite_asn1write.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_asn1write.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_asn1write.function",
			);
			name = "Generate tests/test_suite_asn1write.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_asn1write.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_asn1write test_suite_asn1write\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_asn1write test_suite_asn1write\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_asn1write test_suite_asn1write\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_asn1write test_suite_asn1write\nfi\n";
			showEnvVarsInLog = 0;
		};
		A027338D17F9B52695B82A99 /* Generate tests/test_suite_mpi.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_mpi.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_mpi.function",
			);
			name = "Generate tests/test_suite_mpi.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_mpi.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mpi test_suite_mpi\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mpi test_suite_mpi\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mpi test_suite_mpi\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_mpi test_suite_mpi\nfi\n";
			showEnvVarsInLog = 0;
		};
		A1409B5CABED1EEC8B14DEA2 /* Generate tests/test_suite_ctr_drbg.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ctr_drbg.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ctr_drbg.function",
			);
			name = "Generate tests/test_suite_ctr_drbg.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ctr_drbg.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ctr_drbg test_suite_ctr_drbg\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ctr_drbg test_suite_ctr_drbg\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ctr_drbg test_suite_ctr_drbg\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ctr_drbg test_suite_ctr_drbg\nfi\n";
			showEnvVarsInLog = 0;
		};
		A19F6A9C2F760D0128D922F3 /* Generate tests/test_suite_cipher.gcm.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.gcm.data",
			);
			name = "Generate tests/test_suite_cipher.gcm.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.gcm.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.gcm\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.gcm\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.gcm\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.gcm\nfi\n";
			showEnvVarsInLog = 0;
		};
		A3152CC78B803E910EB8FEB4 /* Generate tests/test_suite_pkcs1_v15.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkcs1_v15.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkcs1_v15.function",
			);
			name = "Generate tests/test_suite_pkcs1_v15.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pkcs1_v15.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v15 test_suite_pkcs1_v15\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v15 test_suite_pkcs1_v15\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v15 test_suite_pkcs1_v15\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs1_v15 test_suite_pkcs1_v15\nfi\n";
			showEnvVarsInLog = 0;
		};
		A36D0B368956B6900059CC35 /* Generate tests/test_suite_xtea.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_xtea.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_xtea.function",
			);
			name = "Generate tests/test_suite_xtea.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_xtea.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_xtea test_suite_xtea\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_xtea test_suite_xtea\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_xtea test_suite_xtea\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_xtea test_suite_xtea\nfi\n";
			showEnvVarsInLog = 0;
		};
		A72FA44D9BCFA83623802904 /* Generate tests/test_suite_pkcs5.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkcs5.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkcs5.function",
			);
			name = "Generate tests/test_suite_pkcs5.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pkcs5.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs5 test_suite_pkcs5\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs5 test_suite_pkcs5\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs5 test_suite_pkcs5\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkcs5 test_suite_pkcs5\nfi\n";
			showEnvVarsInLog = 0;
		};
		A8394FA46A89E93E3F70C7CC /* Generate tests/test_suite_camellia.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_camellia.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_camellia.function",
			);
			name = "Generate tests/test_suite_camellia.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_camellia.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_camellia test_suite_camellia\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_camellia test_suite_camellia\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_camellia test_suite_camellia\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_camellia test_suite_camellia\nfi\n";
			showEnvVarsInLog = 0;
		};
		A84FB5DD25422D5E8920DE32 /* Generate tests/test_suite_dhm.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_dhm.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_dhm.function",
			);
			name = "Generate tests/test_suite_dhm.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_dhm.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_dhm test_suite_dhm\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_dhm test_suite_dhm\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_dhm test_suite_dhm\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_dhm test_suite_dhm\nfi\n";
			showEnvVarsInLog = 0;
		};
		A8FC303B31014D13E92E94AA /* Generate CMakeFiles/covtest */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/covtest";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeFiles/covtest",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make test\n  programs/test/selftest\n  tests/compat.sh\n  tests/ssl-opt.sh\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make test\n  programs/test/selftest\n  tests/compat.sh\n  tests/ssl-opt.sh\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make test\n  programs/test/selftest\n  tests/compat.sh\n  tests/ssl-opt.sh\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  make test\n  programs/test/selftest\n  tests/compat.sh\n  tests/ssl-opt.sh\nfi\n";
			showEnvVarsInLog = 0;
		};
		AE13C821CD1F5963E9AF51CB /* Generate CMakeFiles/memcheck */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/memcheck";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeFiles/memcheck",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  sed -i.bak s+/usr/bin/valgrind+`which valgrind`+ DartConfiguration.tcl\n  ctest -O memcheck.log -D ExperimentalMemCheck\n  tail -n1 memcheck.log | grep 'Memory checking results:' > /dev/null\n  rm -f memcheck.log\n  mv DartConfiguration.tcl.bak DartConfiguration.tcl\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  sed -i.bak s+/usr/bin/valgrind+`which valgrind`+ DartConfiguration.tcl\n  ctest -O memcheck.log -D ExperimentalMemCheck\n  tail -n1 memcheck.log | grep 'Memory checking results:' > /dev/null\n  rm -f memcheck.log\n  mv DartConfiguration.tcl.bak DartConfiguration.tcl\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  sed -i.bak s+/usr/bin/valgrind+`which valgrind`+ DartConfiguration.tcl\n  ctest -O memcheck.log -D ExperimentalMemCheck\n  tail -n1 memcheck.log | grep 'Memory checking results:' > /dev/null\n  rm -f memcheck.log\n  mv DartConfiguration.tcl.bak DartConfiguration.tcl\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  sed -i.bak s+/usr/bin/valgrind+`which valgrind`+ DartConfiguration.tcl\n  ctest -O memcheck.log -D ExperimentalMemCheck\n  tail -n1 memcheck.log | grep 'Memory checking results:' > /dev/null\n  rm -f memcheck.log\n  mv DartConfiguration.tcl.bak DartConfiguration.tcl\nfi\n";
			showEnvVarsInLog = 0;
		};
		BB3B7922EBCFBADABA0AF168 /* Generate tests/test_suite_ssl.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ssl.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_ssl.function",
			);
			name = "Generate tests/test_suite_ssl.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_ssl.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ssl test_suite_ssl\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ssl test_suite_ssl\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ssl test_suite_ssl\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_ssl test_suite_ssl\nfi\n";
			showEnvVarsInLog = 0;
		};
		C34E089E544777474C55D659 /* Generate tests/test_suite_gcm.aes128_en.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.aes128_en.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.aes128_en.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.aes128_en.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_en\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_en\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_en\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_en\nfi\n";
			showEnvVarsInLog = 0;
		};
		C4FB4795EC93C933720F3C12 /* Generate tests/test_suite_base64.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_base64.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_base64.function",
			);
			name = "Generate tests/test_suite_base64.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_base64.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_base64 test_suite_base64\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_base64 test_suite_base64\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_base64 test_suite_base64\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_base64 test_suite_base64\nfi\n";
			showEnvVarsInLog = 0;
		};
		CD12F41B9FFE415561B9E442 /* Generate tests/test_suite_entropy.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_entropy.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_entropy.function",
			);
			name = "Generate tests/test_suite_entropy.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_entropy.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_entropy test_suite_entropy\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_entropy test_suite_entropy\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_entropy test_suite_entropy\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_entropy test_suite_entropy\nfi\n";
			showEnvVarsInLog = 0;
		};
		D3BEB42287F2840853B70B2E /* Generate tests/test_suite_md.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_md.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_md.function",
			);
			name = "Generate tests/test_suite_md.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_md.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_md test_suite_md\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_md test_suite_md\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_md test_suite_md\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_md test_suite_md\nfi\n";
			showEnvVarsInLog = 0;
		};
		D4BE68328987800B995C92A8 /* Generate tests/test_suite_cmac.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cmac.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cmac.function",
			);
			name = "Generate tests/test_suite_cmac.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cmac.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cmac test_suite_cmac\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cmac test_suite_cmac\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cmac test_suite_cmac\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cmac test_suite_cmac\nfi\n";
			showEnvVarsInLog = 0;
		};
		D5D83D609150F868752E4569 /* Generate library/CMakeFiles/lib */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
			);
			name = "Generate library/CMakeFiles/lib";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/CMakeFiles/lib",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library\nfi\n";
			showEnvVarsInLog = 0;
		};
		D9328AD99FD2F4963EFCA6A4 /* Generate CMakeFiles/ALL_BUILD */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Generate CMakeFiles/ALL_BUILD";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/CMakeFiles/ALL_BUILD",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  echo Build\\ all\\ projects\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0\n  echo Build\\ all\\ projects\nfi\n";
			showEnvVarsInLog = 0;
		};
		DDFCB468508C32D5447DA796 /* Generate tests/test_suite_gcm.aes256_de.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.aes256_de.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.aes256_de.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.aes256_de.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_de\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_de\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_de\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes256_de\nfi\n";
			showEnvVarsInLog = 0;
		};
		DF5A8823D842088418344E4A /* Generate tests/test_suite_cipher.blowfish.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.blowfish.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
			);
			name = "Generate tests/test_suite_cipher.blowfish.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.blowfish.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.blowfish\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.blowfish\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.blowfish\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.blowfish\nfi\n";
			showEnvVarsInLog = 0;
		};
		E2111E822DDE8E978C67FFDD /* Generate tests/test_suite_rsa.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_rsa.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_rsa.function",
			);
			name = "Generate tests/test_suite_rsa.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_rsa.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_rsa test_suite_rsa\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_rsa test_suite_rsa\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_rsa test_suite_rsa\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_rsa test_suite_rsa\nfi\n";
			showEnvVarsInLog = 0;
		};
		EFFF48A331F88CE64593339C /* Generate tests/test_suite_pkwrite.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkwrite.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pkwrite.function",
			);
			name = "Generate tests/test_suite_pkwrite.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pkwrite.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkwrite test_suite_pkwrite\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkwrite test_suite_pkwrite\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkwrite test_suite_pkwrite\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pkwrite test_suite_pkwrite\nfi\n";
			showEnvVarsInLog = 0;
		};
		F6A1F17C28ED96367D459F7D /* Generate tests/test_suite_pem.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pem.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_pem.function",
			);
			name = "Generate tests/test_suite_pem.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_pem.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pem test_suite_pem\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pem test_suite_pem\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pem test_suite_pem\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_pem test_suite_pem\nfi\n";
			showEnvVarsInLog = 0;
		};
		F8AD7424FB2D461546792F32 /* Generate tests/test_suite_error.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_error.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_error.function",
			);
			name = "Generate tests/test_suite_error.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_error.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_error test_suite_error\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_error test_suite_error\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_error test_suite_error\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_error test_suite_error\nfi\n";
			showEnvVarsInLog = 0;
		};
		FE338AB30BAD906698AF6ABA /* Generate tests/test_suite_gcm.aes128_de.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.aes128_de.data",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_gcm.function",
			);
			name = "Generate tests/test_suite_gcm.aes128_de.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_gcm.aes128_de.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_de\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_de\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_de\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_gcm test_suite_gcm.aes128_de\nfi\n";
			showEnvVarsInLog = 0;
		};
		FF1EDB2F2F23EDA6C8705A18 /* Generate tests/test_suite_cipher.padding.c */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/helpers.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/main_test.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.function",
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites/test_suite_cipher.padding.data",
			);
			name = "Generate tests/test_suite_cipher.padding.c";
			outputPaths = (
				"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/test_suite_cipher.padding.c",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "set -e\nif test \"$CONFIGURATION\" = \"Debug\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.padding\nfi\nif test \"$CONFIGURATION\" = \"Release\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.padding\nfi\nif test \"$CONFIGURATION\" = \"MinSizeRel\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.padding\nfi\nif test \"$CONFIGURATION\" = \"RelWithDebInfo\"; then :\n  cd /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests\n  /usr/bin/perl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/scripts/generate_code.pl /Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/suites test_suite_cipher test_suite_cipher.padding\nfi\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		0055A5423A0248DDB92A96AA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A4A849884CDD42B5B92A5D00 /* test_suite_aes.rest.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		09CDF961A0A54B0E8CF4385F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				25F970C09112477D8943280B /* aes.c in Sources */,
				E335AD6C1FF040CBA01C6CB3 /* aesni.c in Sources */,
				FA46E54FA1AF4E5FBAF41CF8 /* arc4.c in Sources */,
				C7FB4E2A2A924EF5A01C5C32 /* asn1parse.c in Sources */,
				598ED5DE5BB5403FADE2DBA3 /* asn1write.c in Sources */,
				59C3895BC3744399AE2B130F /* base64.c in Sources */,
				99C5F67CF9CB451E8630C1AA /* bignum.c in Sources */,
				C7EA8859D62445859B52411E /* blowfish.c in Sources */,
				CE81A544D17B4E9D98CC6C12 /* camellia.c in Sources */,
				67B6BB05D58D425A9543F94D /* ccm.c in Sources */,
				BFE5B3E2947F4B8AA170E91B /* cipher.c in Sources */,
				435EB2F6AB7E4C56A1561020 /* cipher_wrap.c in Sources */,
				45D258EBFFE54FA2A4966AF6 /* cmac.c in Sources */,
				912E6E0E0BFB497F942E8971 /* ctr_drbg.c in Sources */,
				2BFF792A6D5544E8BA2B7467 /* des.c in Sources */,
				FB13292839044095AA8C0786 /* dhm.c in Sources */,
				FA126D5CF62D420EB75B22EA /* ecdh.c in Sources */,
				71CE1EADAE8540D58F2AD588 /* ecdsa.c in Sources */,
				3702808DC1404E6FAEF1216E /* ecjpake.c in Sources */,
				530720B545534AEE8A7BDF41 /* ecp.c in Sources */,
				150FDFCC3B314C37949CD120 /* ecp_curves.c in Sources */,
				361C8692D4BD462AABF967A0 /* entropy.c in Sources */,
				BA2CE02822904B3DA0A105A1 /* entropy_poll.c in Sources */,
				70EB58CF62B542AB9061193A /* error.c in Sources */,
				C64F751ED4C3469F9EC6587A /* gcm.c in Sources */,
				25471790EB954FE19D33BB5D /* havege.c in Sources */,
				9EA65099637F47709804CCA8 /* hmac_drbg.c in Sources */,
				DCDB52D5AEEA43118F99B6AB /* md.c in Sources */,
				00D5DFC1E2EC46BC9404BE5C /* md2.c in Sources */,
				3822C68FE01F4781969630B7 /* md4.c in Sources */,
				1A51539CC50649B9BD96E869 /* md5.c in Sources */,
				A98A5E44A9D745DC906B6E0E /* md_wrap.c in Sources */,
				D55C1C9CB6AC421380DBE1D9 /* memory_buffer_alloc.c in Sources */,
				D49291F85AE847AAA9FF2530 /* oid.c in Sources */,
				93D7E56DC66C430AAA520340 /* padlock.c in Sources */,
				8E5ADC93486646B28BF98393 /* pem.c in Sources */,
				86E8B093B99148E48329BE0A /* pk.c in Sources */,
				F712F84E73374C3299ED0CAE /* pk_wrap.c in Sources */,
				6089F535D20144C08519BBF6 /* pkcs12.c in Sources */,
				969FC14FDD9D4696B1467E5E /* pkcs5.c in Sources */,
				20DA8C99F39B442E801CF9EF /* pkparse.c in Sources */,
				6E19438B816D46D1B0719257 /* pkwrite.c in Sources */,
				9940C064343E45899CDE4DE3 /* platform.c in Sources */,
				E2C3417FFF3F4FA0A63F39DF /* ripemd160.c in Sources */,
				7F143E217D954DF18FB58DD2 /* rsa.c in Sources */,
				8B18330EB88D4ACE8A62BFBD /* sha1.c in Sources */,
				18E28F216D77400888850BEE /* sha256.c in Sources */,
				6F86D5585338479FA83D27B3 /* sha512.c in Sources */,
				69F49AC5D56849E8BC7C42D4 /* threading.c in Sources */,
				2576806039AB43CD98DCE7E6 /* timing.c in Sources */,
				9AF5DAF1E4CC445AA2371B05 /* version.c in Sources */,
				0C278EF9320C476686124E0E /* version_features.c in Sources */,
				919CFC7D16734D2A9D46D415 /* xtea.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		09F5B3FFE60943DF98EA3A5E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8F90E3624CE450083B6F108 /* ecdsa.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0C934FD226E04A068BECA19A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AA94AABF2DC47E69654C83A /* cert_req.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0F4A691A7FE74C8CAA155454 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1BC9390F4A194B83B6A8D5BD /* test_suite_ctr_drbg.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0F6DA0C06EF442D39E85DF0C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8370DEAC57AF432A88A949CF /* test_suite_hmac_drbg.misc.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		12A103CDF0FF4E809517B3CA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D3050FF7B0394BD1A5AA0312 /* test_suite_ccm.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13CC49BF83E642D18C63D8C3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AFC76EB9D4C9444A82355BA9 /* dh_client.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1A6AFF97C7CF459A92EAD8DD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0F683E14A4E14FAA9021182C /* test_suite_x509write.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		1FACAB8FCB09435993BDD0EB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5E69F112A8B94A2CACC6EE39 /* test_suite_aes.cfb.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2175A129B30F4216A5745DBA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				29F363FFD45B4D3F91331967 /* test_suite_mpi.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		21F0E54CE96446208FB94743 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				59B128FCEFBC4A328D04D984 /* test_suite_md.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		22211762AD694163BAC19A24 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6575FA0EC92F47F58CFC070D /* ssl_pthread_server.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		23D141905FB24B6E8A3F374D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CF0F2A552B57441897E1F992 /* test_suite_hmac_drbg.pr.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		24064387FF4F4085AE4C512A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				094FA90B3AA44B0D919D3108 /* test_suite_cipher.null.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		25AF113EB8FC482284012259 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0531F55AB57448B4B598F2CF /* dtls_server.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		26C50A630FC943829DC644D2 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				34601E7C062C4B3984C4E255 /* cert_app.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2734FFC1BEE14BE2BDFCE8F1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6771A6F049A7434C9E82FB15 /* test_suite_pkparse.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		285A12AA705842D19CB6652E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				499E429B1A3A47E48ADFD71D /* test_suite_gcm.aes256_de.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2A515AD3ADB74F9DAA3D1D69 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E63BDD7B2DFA4940B6F82DEE /* test_suite_des.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2B2CB16CD4A44120BEFAE148 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6F9DD955B930409898E64676 /* test_suite_shax.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2C5F938D4D4746C38432B8A1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A52EC4FFB1BC4559806ED5CD /* test_suite_aes.ecb.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D887223C15F48EEBC930EF3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2B82AB0A08724E23B50D64AE /* test_suite_gcm.camellia.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2DAED5E6DC1445448606214D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				ABE25EC2B80A4837AB65E5AC /* test_suite_gcm.aes192_en.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2FAD883BED1C48DB986FB261 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				94889A6DD1EF46FC9A76D7D0 /* rsa_sign.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		30971355CE6446608B719FAE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				17521D201A43430AA87B60E8 /* test_suite_memory_buffer_alloc.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3339D36FD4864826A98740EF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3E26061B9AEB48E4BD631F42 /* ssl_server2.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		34670186210546E7B9FE3F46 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B7005638B1844B1EA6500A78 /* dtls_client.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3C2F3B527F4B4290BAA403F1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F64AFC1EE18A467F9D47F6C0 /* test_suite_ssl.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3DD55B4D1E67420CBBFB1D32 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BB55D7C2F70B48BDB125F09E /* ssl_client2.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4238301CDFE44C0E8AECAEDA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B62598C21B524D0DA4524898 /* test_suite_cipher.arc4.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4372A7F7CAAB49628576F6F1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D56B102856474738821B1A7D /* req_app.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		454DD2E45C064C8896A6F5EB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2E1AED14997D45A89066A952 /* test_suite_cipher.gcm.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		45EF82A8CD0144EA8B4D7BF8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3E0A8CFFF6CD40779AA3C726 /* test_suite_rsa.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4613AA4B368E4B14B1298BFD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35347BCC7B71406D8BE8619A /* test_suite_ecp.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4722B0C5B4674D2DBAC94F99 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1DB241F320224C4996D752B4 /* test_suite_pk.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		48914301C648471F8861D4CA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9A355A62BA7A43CC88360C8B /* selftest.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4A2286B8950740C38AA9DCA6 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				314CB4E9189F4478A4AA47E2 /* test_suite_pkcs1_v15.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4CE1F7D43A28495198EDC2D9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E4543C44BC184F2397865D08 /* mpi_demo.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		4F766EAD174F452FBC28F2C7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D76121DF199149A3996C676B /* test_suite_cipher.blowfish.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		50068D8538FE4E73AE58D749 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				EAD0389979D049F688429395 /* test_suite_base64.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		52B0F25EE63843A59DD3F1D3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0619110045194730B44E0AC4 /* test_suite_x509parse.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		577F996DC79E4F9F89C4EFAB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C3A75C6EAA44400391B6909C /* strerror.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		64209FF21BB6491BAA057F26 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0EACD412FFD54094A3C01431 /* key_app.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		643C0F4BCFD846C8A109D339 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				655174430D3A43F8B29FE53D /* key_app_writer.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		643D36F70969424BBDE70763 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				34E738E97C7742EF91E11A93 /* generic_sum.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		647576E60ABD495C87471283 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				72AEE55D565042AAB81C9607 /* test_suite_cipher.aes.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		65CA4A4BFC38461897ADF2B2 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				49E4363B4E6B4FF2B5AB62F2 /* pk_decrypt.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		68D4873BE034433DB6633AF6 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				925EB13A30664BD899BE70AF /* test_suite_pkcs1_v21.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6AC06D17EB08412F87D5B6E8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1948C54D3373410C999AACF4 /* pk_sign.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6EAA7ED41F024083B5EA3D8D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BF1FF761656E452A89F2BB24 /* ssl_server.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		6EEC07DC67484B89A067C757 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5BD4B2C230E341F6913371BC /* ssl_cert_test.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		72E5632651A24CBEA9D34E11 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7646482FD1624186AF47F982 /* pk_verify.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		74B9B2763D74460B81DAD1D0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3075A2A7269142278D88339D /* mini_client.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		76722468E0C9446390F54BD0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9A256BD351164908894E1EA8 /* test_suite_asn1write.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		78EAAA0B7F0C4717A7BD1768 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				FD6F0C7062EB44998C0777A5 /* test_suite_ecdh.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7D03310F31DF4F87A5BE15D4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				75B3A1168E0446CBAA34CF79 /* rsa_sign_pss.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		7E84A0A05BF743369526E6D6 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F29E4DB4F81E4B6090B2C38A /* test_suite_debug.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8208C894064E4F8B81CD0470 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				317198616D3647E59DFA243C /* crl_app.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8657272B5E9E4B7592607F92 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				655484AAC52046A09D47A563 /* gen_random_ctr_drbg.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		88B02458A5714E7EBFD26615 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13AA674258C34B1DBCD81947 /* hello.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8A5A3E3F4E394C3C94587373 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F6CA22DA98674E6FAC5390A3 /* test_suite_cipher.padding.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8A5DDA90DFCA41D797AD75B5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A958C8941E294503822382FA /* test_suite_hmac_drbg.nopr.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8B4064A81CA74781AA2E103E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7BCFC9FBEDEC483293241D62 /* rsa_verify.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8BE01847DCFF402E8E755172 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2E63A642631E45AFB159293F /* test_suite_cipher.camellia.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8CF567DD4AE948829EF84ADE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A0ED02CD790F4D0DB84AB888 /* test_suite_xtea.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8E7C0FD34AB742B2ABC8BE24 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9D192A2026C749DA82B49AAE /* test_suite_gcm.aes192_de.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8F69DA11FC6146D598D0674B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				38CAC40D8C1B482D8C9613B5 /* test_suite_mdx.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		97CD464B7BF9445AAA4F512F /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				96C9DAA17B2A458EA7AAFE12 /* debug.c in Sources */,
				BAAD874A41D646A691D3AE7F /* net_sockets.c in Sources */,
				92608A5B5D854B7CA9CEABB9 /* ssl_cache.c in Sources */,
				EEDBA41A99B94429B88D68BF /* ssl_ciphersuites.c in Sources */,
				EF638EB6D1CE459F83323AFA /* ssl_cli.c in Sources */,
				35F51C5F2D9147639675F144 /* ssl_cookie.c in Sources */,
				41C592D8C4194BCF9BC9AB71 /* ssl_srv.c in Sources */,
				4C660C4CB4E94B738258B362 /* ssl_ticket.c in Sources */,
				DDFC895DF9414E3FB98E1D6D /* ssl_tls.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9B513C24458241AC8D651DD0 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				148C8DFF28FC4F70BFE3FEE8 /* test_suite_timing.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9CE6F1C4DE434AA8B1F413DF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AFF2AB2DDE8F4BC68A0F83B6 /* rsa_decrypt.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		9D9D4290A745464082025FC8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4EF36FE9B620418E91146983 /* crypt_and_hash.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A2284979D572441285264494 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3DAC1EBA2D284A198AD0A891 /* test_suite_cipher.ccm.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A3C046D3A8D74D208640DEF5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F78A55AF29DF4C2BBEA54C4B /* dh_server.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A4B0BAB206A34B3F8226D8B8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				ED976DE2725E417C83CC30CE /* rsa_encrypt.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A4C43660A80E4F808F87E0AD /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				A973A86C81F24B14BC7A9B32 /* ecdh_curve25519.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A5F3073CE31D44CCB381BC96 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				781D56D62D07491E8BFD0406 /* test_suite_entropy.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A7F800C90BFD48A3A66DCEC1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0712189E5608468BB6B1A3CE /* test_suite_arc4.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A88A64AA023C462CACF52C6D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6E7018569861418F8630FD30 /* test_suite_ecdsa.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A8B8FCDF493C46ADAA67D724 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C8091A4AE69143F092D16ADE /* test_suite_ecjpake.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		A9FAF5C4F7CA4E34B9F2FFD9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				06A3CA28725A4CBD9C51579A /* ssl_client1.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		AF314E81179F466EAF94E7FF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				DB1A0D60A5234CA68D9FEAFF /* dh_genprime.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B0D13D8A9E004A4FB4AFAE58 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B2887316E029428BB39DD9F5 /* benchmark.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B15D552A0E3B49A79F882920 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5F4986AF8C6C49B689D60DE0 /* test_suite_pkwrite.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B3E78DF27A87475AB1654B19 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AE6951FEB58845FDA4A35066 /* test_suite_gcm.aes256_en.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BA17D67D6D5F489F940C5853 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				77EA5C970FFF448A9E17F8CE /* gen_entropy.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BCBA9B07757343CA93104791 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7E4F6D43395B417E8FA0D145 /* cert_write.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BD700091A5924ABA854D11C8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				AAC488C3FA274922AB358242 /* pk_encrypt.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		BEDE2D5450B945F8942CBD00 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2061A8286CE04F72B201773C /* rsa_genkey.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C2DBFFA5D3A34E28A45E1426 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				37AA903BD7AF48F99AA87418 /* test_suite_gcm.aes128_de.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C46A0220598D49C18D25BC6B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				69C0BA8999DF4C9CBFF2EB02 /* test_suite_dhm.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CD17FC2AF41D4708BE074BB3 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				4A3063715BFB40C4B1877E0E /* rsa_verify_pss.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CF2CA01060134A75A140C06C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				832B750A74AD4EE798351EF1 /* gen_key.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CF9DA2D9DF3A47F888EB155C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				20170FA7DAC046DA968E3E7A /* ssl_fork_server.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D4D0E6BF741743AF9D9089A4 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				064F5B3A9A4A43A184CA9A44 /* ssl_mail_client.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D5AFDCF955D94E38AD65A51E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				5DE4790A04B3492E8E5B1536 /* test_suite_pkcs5.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		D98EE294CCF84BA3A0EF19BE /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				558F8B859A8A48D8AE974843 /* test_suite_hmac_drbg.no_reseed.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DA884352C72D40D5BA07A1B1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				37C5272E831646AC9C0458ED /* test_suite_pem.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		DCB319782D144FC690182ECF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E7986CEE84FD4D72B70AFBEC /* certs.c in Sources */,
				B0A9CE33830942FD958F1E31 /* pkcs11.c in Sources */,
				8E6072C79F2243BCA385E430 /* x509.c in Sources */,
				C9FD298B5C694B74A626C31A /* x509_create.c in Sources */,
				656EB8545BC549DA8F0B8110 /* x509_crl.c in Sources */,
				E2B638307812408FACBE493D /* x509_crt.c in Sources */,
				051BE8B896EE4DABB29861F4 /* x509_csr.c in Sources */,
				42AAC765B9EC4594877DE1C5 /* x509write_crt.c in Sources */,
				8D465A3E8951487FABD9810B /* x509write_csr.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E062D27FB6D94C0D9CE63118 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1D8E08B1BA9E45CE9B486C7D /* gen_random_havege.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E58445667E3E42278F13080D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8F15E76231EE40E492C607D6 /* test_suite_camellia.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		E8E5A76BBBBA4DF7A4F860FB /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				488B5CBA9AF441179C22D53B /* test_suite_version.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EACC0A243ACD4DDA80989584 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				7B863CDCAA4649BB9E41FA82 /* aescrypt2.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EE44FC34699E443186F8E203 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				136E6AE715E74E56B4562F6C /* test_suite_aes.cbc.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		EEEF71319C4B4520BB0048C8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0EE6EE693565403E99140838 /* test_suite_blowfish.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F41BF254EDCA451DB7306D03 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0FB048B1C27D4D3AA2F9AB6D /* test_suite_cmac.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		F7441972FA894252931FCB5C /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9E02AC25B8DD410AB36B7A9B /* pem2der.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FA972CDFCA3948A7A1E77390 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				D2483247EF274C8CA5304761 /* test_suite_error.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FB5ED51E2BBD46CDBBD00122 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				225742C992814DA68119BA7F /* udp_proxy.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FE169D6BEFBC43E1A4A97664 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				07F86E60472F4D0398CAD7EA /* test_suite_gcm.aes128_en.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		FFA1201630904C9BA7D0AA96 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6FD7AD35C9644BF6B0296DAA /* test_suite_cipher.des.c in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		0081AB4D30A44BC3BBB90199 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0A215FCBFCBE27F4EDE16C33 /* rsa_verify */;
			targetProxy = C58AC0857BE348E2A4A5DD04 /* PBXContainerItemProxy */;
		};
		00A607917B64461CB8FA1BEA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = CC7D859ABEC74B9FAE897E9B /* PBXContainerItemProxy */;
		};
		00B0DC97503F4F62A1316549 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 14A4C602FAE16D0524B04982 /* ssl_cert_test */;
			targetProxy = 37B995F5025B4CF88E6BB69F /* PBXContainerItemProxy */;
		};
		015D118899124C4C85CAF5DB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 2543D6A8869A4EC0915CF935 /* PBXContainerItemProxy */;
		};
		02632CA8BB9E4841A3A3833A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1F3C3420C27A40ADB02F893A /* PBXContainerItemProxy */;
		};
		028AAC802A164ACEAFB0E9D4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 262EA55F6C6E476585EE8B8C /* PBXContainerItemProxy */;
		};
		030C531CE6E44042868A114A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = CAA9136F34664043A53ED5A7 /* PBXContainerItemProxy */;
		};
		0350E340FC454B579000DD18 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 34E34FFABCCD4DA6825A53D6 /* PBXContainerItemProxy */;
		};
		03567232A8554C4491A70201 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 26080C0C08A64744B7DCA545 /* PBXContainerItemProxy */;
		};
		03A40BC8A2A44A7BBE761330 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 7081669B491B4A3CA393FF37 /* PBXContainerItemProxy */;
		};
		03CCF4D2439048C6B8C68DA3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = EA922A63AD1F4BD9B21AAD12 /* PBXContainerItemProxy */;
		};
		03D97274A094460EA97BB9A9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4F12C44F3F8D4428F96BD424 /* test_suite_camellia */;
			targetProxy = 340920F0C2E24C9285E1C553 /* PBXContainerItemProxy */;
		};
		04093280477441F2B6E98897 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = DEB85D8824F941F488B3E3EF /* PBXContainerItemProxy */;
		};
		045A472E91004C6CAAAF21CF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = C88784EA23F94E2BAAC82896 /* PBXContainerItemProxy */;
		};
		04EB17A82CE24F33B5851AD9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 3C15AAEE4A73412C835CF294 /* PBXContainerItemProxy */;
		};
		0581419A8CAE4545A37ACF0E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F1AA7CB38CFF46688E8C83C8 /* PBXContainerItemProxy */;
		};
		05A05E3E232048CD81EBE76B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1330062EFA274740C37DF730 /* test_suite_ccm */;
			targetProxy = A354EB4E8B244292B62DEEB5 /* PBXContainerItemProxy */;
		};
		0655B95993744EE8A891F8D1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 88A8369FED0A4FABAE72ABB4 /* PBXContainerItemProxy */;
		};
		070E5C60A93541E390C4AEB4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 06F73ABD86DF45FEACE7BBF4 /* PBXContainerItemProxy */;
		};
		071C1C9C85FD4D0E94217666 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = BD329E6DC9D24507A24C044C /* PBXContainerItemProxy */;
		};
		07B6699147B84AA3996C7E39 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 168AC87E1A0F4114B1376751 /* PBXContainerItemProxy */;
		};
		07E09CD27CBF419CA26D83F7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 9FAEF9918436464E83C6CD4C /* PBXContainerItemProxy */;
		};
		08640248BBB246CAA5054C52 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 4CF980C56836431B950EB261 /* PBXContainerItemProxy */;
		};
		08B1CF9313584D7C969D7888 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = D292B50A93CD4EEBACF31945 /* PBXContainerItemProxy */;
		};
		08DB6D1BAE3349E88BA67B6C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = AD33409A606946D2AD266849 /* PBXContainerItemProxy */;
		};
		09B3EB0D6CBB4C4494B9B46F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = BF172CC28CF14C4B85D569FC /* PBXContainerItemProxy */;
		};
		09F8A3EFF00640278280B57C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EA0FAF6A3AD69B898A442136 /* test_suite_version */;
			targetProxy = B77BCBDABFAB4FC4878DBE8D /* PBXContainerItemProxy */;
		};
		0AA99E1B82F346838F059071 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = AE758C9C8CAA488B9580C898 /* PBXContainerItemProxy */;
		};
		0BA01F9E854E44AB9B4716FF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = BB8C7D15047A4A7BAD7FD55B /* PBXContainerItemProxy */;
		};
		0BB72972D74B460599939092 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = FB79D172AF6F4F8AA7EF7923 /* PBXContainerItemProxy */;
		};
		0C09F1003F2A4A5191DF9F70 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 48824D329E7A435B9E787DFF /* PBXContainerItemProxy */;
		};
		0C27761A1C0948C3A46447BB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = B5AE2009113548BB994ABF1D /* PBXContainerItemProxy */;
		};
		0C659A790C4A4709BD7DFE6A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 6F4DC249BA1145729DF1EBC1 /* PBXContainerItemProxy */;
		};
		0DB259DEDD0C4B278DB72446 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 41EB55247820453E8A42A4E9 /* PBXContainerItemProxy */;
		};
		0DEA16F2225D4B639F799B2F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 6B1632D7564F426CAF9B210B /* PBXContainerItemProxy */;
		};
		0E05F1EE57F04E42B67AF224 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5FFB1AE4A4C54C869E16F899 /* PBXContainerItemProxy */;
		};
		0F6031F4D7C0453DA8477248 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 35F682F8083D4A7596596005 /* PBXContainerItemProxy */;
		};
		1047AE5A83294D178E37965A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 7EB70E0070DD480F87F719DF /* PBXContainerItemProxy */;
		};
		112FF334C7124519B2753F4A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = F1B855199527472FA6DB969F /* PBXContainerItemProxy */;
		};
		1159F5527B6644AB881259F9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = B4C81879BFF3442788100D00 /* PBXContainerItemProxy */;
		};
		118C58A3DF50496E86B15497 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E68F3F272FEF0F293219DFFC /* test_suite_entropy */;
			targetProxy = AAD3E082F1224A9B8699D870 /* PBXContainerItemProxy */;
		};
		1374F0733F7547B7B9F827D0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = DA7BF2FC628C4522BBA76551 /* PBXContainerItemProxy */;
		};
		149688D5B07A40E0AF2BC268 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 40FCCA3B67E8498EBE65C6D6 /* PBXContainerItemProxy */;
		};
		152B4219795E4C3B8B44A227 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = DBB40CEB8C1C47BABD2782B0 /* PBXContainerItemProxy */;
		};
		165D2940B6634353B70AFACA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F223DE7E83C447B0893EA6B8 /* PBXContainerItemProxy */;
		};
		18397DE755D740689D9B2D50 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3E576BCAC60B4C5FA00F4930 /* PBXContainerItemProxy */;
		};
		190B513F0BD5486A85BBD2EC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = BA9E1546406B410EA2B0661F /* PBXContainerItemProxy */;
		};
		19CE86BCB61B448B88184BF5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 107077B383F640D299391D40 /* PBXContainerItemProxy */;
		};
		1A1ABBC54F534E1A905884BF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3BD99991DDEB410E9B253711 /* PBXContainerItemProxy */;
		};
		1AC0834566534F6FA8723236 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F8184D827EEB47FF85BD5FD1 /* PBXContainerItemProxy */;
		};
		1C225138B90A47C6AC74EBFB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = DF501219B3B23533AF8A6509 /* pk_encrypt */;
			targetProxy = 697ACAEF1B324C61BE3C46FA /* PBXContainerItemProxy */;
		};
		1C2BDA22B1904CDBB038F01E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 196A78EA4F0C489E8EDFEEA3 /* PBXContainerItemProxy */;
		};
		1C4DEAAFA41440EC81C1A472 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 72C8FFF3096E43A59CFC9866 /* PBXContainerItemProxy */;
		};
		1CB7E970CCDC4105B6201F32 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1C378F5352A64B828B4A15C3 /* PBXContainerItemProxy */;
		};
		1CD91E3DDA8B4C959202EECA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 419A1319A6D41E062579921D /* req_app */;
			targetProxy = 4E89DDEBA1FF4F8CB1B1CA03 /* PBXContainerItemProxy */;
		};
		1CE34CDEFD2644B784123136 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D4BAC9F7BFAB881657519796 /* test_suite_gcm.aes192_en */;
			targetProxy = F0FD16E24A6745868406030C /* PBXContainerItemProxy */;
		};
		1D1929CA222E4A4FA30D0E36 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 1D8D4D605C8345BC8C9ECE08 /* PBXContainerItemProxy */;
		};
		1D459489E7714FF296CA9DD7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 8E9FB077834D4036AD0DB33F /* PBXContainerItemProxy */;
		};
		1D4FD084DDBC484CB908DC51 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BB7F0C6FDF2ABBCA2BD18BDB /* test_suite_pkcs5 */;
			targetProxy = 7EBE570733214FF4850108BA /* PBXContainerItemProxy */;
		};
		1DEFF404CC614FDDA5B6AB86 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F288A82BCB3F4693B2D6A691 /* PBXContainerItemProxy */;
		};
		1E100B0A599B4C59B70B4697 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1AAA85E98BE7487DA2F5FD1A /* PBXContainerItemProxy */;
		};
		1EA72BA3E83F4516A2998AA1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = BBB0E4B7CE704AAD922EAD99 /* PBXContainerItemProxy */;
		};
		1EC80F672CAE4FA4A2826E37 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 9B24D9549C164A07BA8F8126 /* PBXContainerItemProxy */;
		};
		1ED11358D0D645719861D67E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 3DFBB400E6574D83802DF7AC /* PBXContainerItemProxy */;
		};
		1F2D471213474C33BB76D8FE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 183608E446DB4E8FB636EC0A /* PBXContainerItemProxy */;
		};
		202908ACECD14F0085DAFB75 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 84104E71C28D4E3CBB19DB41 /* PBXContainerItemProxy */;
		};
		2153814108CF4ABDA0C3E282 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E1499349A65A45DC8AB5F35F /* PBXContainerItemProxy */;
		};
		21E2578B48184DC086CBA5F3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 4954B7DAEFD649C29A1DFFA3 /* PBXContainerItemProxy */;
		};
		22DFB99F321346B8BEBD97DD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2B25EA0FDBF429F2B1FE1CD1 /* cert_app */;
			targetProxy = 9EB0999E16194019A53D6FCE /* PBXContainerItemProxy */;
		};
		23A363168751480891BCCBF7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = F5BD24826E02486B8BB596F8 /* PBXContainerItemProxy */;
		};
		248CF68415CE4D7DAB6C5ACA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 4C11D2C5B33F41DB80932B0B /* PBXContainerItemProxy */;
		};
		25033BC71E83412DB2552E48 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = EB40BF022AD945F4A1F2C24E /* PBXContainerItemProxy */;
		};
		25163BCF22FB43F29F296F9A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = D5E25F124D1340718E9B251A /* PBXContainerItemProxy */;
		};
		259591963718409080FD8CF0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = C71F268B0DC542B2A4D833FD /* PBXContainerItemProxy */;
		};
		259AC3F801C0468FA33652A0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 594B6126DD23767E1DFA5F65 /* hello */;
			targetProxy = 5354EBDE8DA7478F8C936020 /* PBXContainerItemProxy */;
		};
		26173CA026344764A9B1F36C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 2E4C25EC84A74152AD996546 /* PBXContainerItemProxy */;
		};
		2636DE8845AF4C1AA7304778 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 2EB3A4B3FBA74E6AABDADF15 /* PBXContainerItemProxy */;
		};
		26547317B4BE4C6E90ACE1DD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = F76C387B03B94878A394BC2B /* PBXContainerItemProxy */;
		};
		2659AEC9B65D4F40AD3A988F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = FBCFA4C424C54998A41579AD /* PBXContainerItemProxy */;
		};
		27AF79A332F948A2A9F850DA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 292AE2AC9E484B088936FD50 /* PBXContainerItemProxy */;
		};
		27BA1A19B3BE449FBCFE6D81 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5C4BDD321036461E9E6C3B64 /* PBXContainerItemProxy */;
		};
		27C4584905E742C699CC407A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 76F4E808EA66405FB5FD331E /* PBXContainerItemProxy */;
		};
		288301FF56D24EF3B78D5C1B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = C5D20961167D4C18B78CC252 /* PBXContainerItemProxy */;
		};
		29786E07921147A385006FDC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = A65916B9AEB44C9692D3867A /* PBXContainerItemProxy */;
		};
		2A220E3CFBC746959B0B455B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 68F0512575B141A59CA9CF4B /* PBXContainerItemProxy */;
		};
		2A64D7BB8CA546ECA100357F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 70292DE1679A42B1B498EFCC /* PBXContainerItemProxy */;
		};
		2AD7470ABCE4441FA87D74BA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A3F38B10EB6FB926A3674B77 /* test_suite_md */;
			targetProxy = DEFEAB7A2574445A906DB4A0 /* PBXContainerItemProxy */;
		};
		2BA996EF97334EFA83AE7173 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 679592C35FCF4FBC9BCDF79C /* PBXContainerItemProxy */;
		};
		2C0B67BE976E4893AC0708A4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = C8EC0A7ECF68497BB611A3ED /* PBXContainerItemProxy */;
		};
		2C69579AF27E4A8EB1620E2A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = B95ECA3EF8054964A801D526 /* PBXContainerItemProxy */;
		};
		2CCB8E9CF5D84B52B224B590 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F515769D069040D2981B901B /* PBXContainerItemProxy */;
		};
		2D646D117FA942B7937E0E3C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3D79312BA3DB4488AB3A348F /* PBXContainerItemProxy */;
		};
		2E3D379838DE48CEAE863E62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4C8CC82D7F7DCD8D42888FDA /* test_suite_ecdsa */;
			targetProxy = F0462EBBFE3D4804BB801C40 /* PBXContainerItemProxy */;
		};
		2E3FF9B6BD464187B54562B1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 18E37844854DC1695D909C74 /* test_suite_cipher.arc4 */;
			targetProxy = 46B9526C855740DCB617D77B /* PBXContainerItemProxy */;
		};
		2E70E74A296A4235821D1CC0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 59D50CFAC4274E1CA20B795B /* PBXContainerItemProxy */;
		};
		2F230BD36CEA42798A25D0BD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = CCCDAB99004540CB87F92778 /* PBXContainerItemProxy */;
		};
		2F92113F8F4E48588B55FCBE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = AB0B092807594FC6B80277D8 /* PBXContainerItemProxy */;
		};
		2FE03B0950CE4B5D97284914 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 8E7A365290F847909C8FA3F5 /* PBXContainerItemProxy */;
		};
		3030DACC9F424665A362B80B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8C377CE5BA566D937D6EE1A2 /* benchmark */;
			targetProxy = 4101A46EBE88448A8453A87B /* PBXContainerItemProxy */;
		};
		30E596F21AC049018C5D45D2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0FB7C2E8279DFF9ABD38E2F7 /* selftest */;
			targetProxy = 7C859774127D4DF7AC6A0D27 /* PBXContainerItemProxy */;
		};
		315F9C813C584A48A81B50AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = ACD87690D9AB49BFA04D016B /* PBXContainerItemProxy */;
		};
		3194594AD94646628EE14A18 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 511F8E16762B489E90EA7D0B /* PBXContainerItemProxy */;
		};
		31973C4B44F0492B9EE34C4F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 32EE733876C8BA491B41ECDE /* key_app */;
			targetProxy = E1D379B4A3BA4CBB88174F80 /* PBXContainerItemProxy */;
		};
		31DA463B6E584894ADEE990C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 664DFDA94C1348DFBAAFF16C /* PBXContainerItemProxy */;
		};
		3206F91B2E214387998BF947 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 8B06B598616B463FA41DEACD /* PBXContainerItemProxy */;
		};
		3308D9780DBD4BC3A182C608 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = A0E8892EF0B74DF0A3BE78A6 /* PBXContainerItemProxy */;
		};
		33425B1D22E3460D88B2DB77 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A1DD15E66ABB6EBE447C0A2F /* test_suite_cipher.des */;
			targetProxy = 56A5DEEC319940B9B32A1569 /* PBXContainerItemProxy */;
		};
		349B66517AB44F019F8E4E0C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 2BABC9724511492D9F81A301 /* PBXContainerItemProxy */;
		};
		3575F33F3E634909BFCDF5DC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 4485E96EE3204477AC680DC8 /* PBXContainerItemProxy */;
		};
		3655A78D215B412F9CEC660E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55C40BCD2F68C1BF2E8A271B /* mpi_demo */;
			targetProxy = F2E364FB2A81488AB3B3AC1F /* PBXContainerItemProxy */;
		};
		36C18C8257014F8882279A55 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0D70FB16A98363CE6F52832B /* dh_server */;
			targetProxy = E23FD1F865514BFBA6DC0F3F /* PBXContainerItemProxy */;
		};
		3704B164DE234C7DA62D7676 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = CC11E58D88C94E94804C19EC /* PBXContainerItemProxy */;
		};
		37A8B12E8F3C4B4F92E36D53 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = E503CB5C968B46298FAF0B48 /* PBXContainerItemProxy */;
		};
		3926426B68A8497795ECD5A4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 008A9E384E8DA4A85DFF13C9 /* test_suite_aes.cfb */;
			targetProxy = 74F3FC74CE7241A082E88546 /* PBXContainerItemProxy */;
		};
		395E3F72B0F2462895C4C18F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B7A9DDC810729B5A599C494B /* test_suite_gcm.aes192_de */;
			targetProxy = 013FE57F6C0F4797A160E9E1 /* PBXContainerItemProxy */;
		};
		39CEEF4C3F834B0D9CEE2CD5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 6A3127186FF44C8992DEF3A3 /* PBXContainerItemProxy */;
		};
		39EEA38B287545B5B57F82DB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 9C68C2BBA39641BDB84D5506 /* PBXContainerItemProxy */;
		};
		3ABA46EDCEBC4D5394E87AAC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = E49599AEE0E141E4AF86682C /* PBXContainerItemProxy */;
		};
		3AED2AD19E3C4135B5D6F6EF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 853AC1C2F16240CB4A3EE900 /* test_suite_des */;
			targetProxy = E5BAD136E79D495C99AAE1F3 /* PBXContainerItemProxy */;
		};
		3AF25974587C456196097F61 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = AFFD8FB22FFD4E3B8B5FBA7B /* PBXContainerItemProxy */;
		};
		3B10C55F26094E48B40877CE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = B9FBBCD8CC904602A02579E5 /* PBXContainerItemProxy */;
		};
		3B2ADA6F2AA24211817C7FD0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = AEA653457270441FA50B9055 /* PBXContainerItemProxy */;
		};
		3B751576FEAC46A59A0CCDBC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 1219B3B844AC48EFBB631FF5 /* PBXContainerItemProxy */;
		};
		3B7AE7E9F8874F43B9EAED8A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 28D2B493866F4765B1D360CF /* PBXContainerItemProxy */;
		};
		3BDD149D1E0C452B95F165CE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E5A545844E33487D803BAD77 /* PBXContainerItemProxy */;
		};
		3C046E2A4C684A3AB30F92F5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 9BF3F8B1D787471F9B592342 /* PBXContainerItemProxy */;
		};
		3C85143996D247C6AB8C0D22 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 00F3AC59895E4CFCB668A895 /* PBXContainerItemProxy */;
		};
		3D271EEE1D1B4D4980E31417 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 764647897D59416AB8C87CB1 /* PBXContainerItemProxy */;
		};
		3D6AAB5CBE0444B4918FBED3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = DF487F274E6A4947B53C387A /* PBXContainerItemProxy */;
		};
		3DA383242AD84ADBA921CC59 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8209F7D3813EC81518E87B8D /* mini_client */;
			targetProxy = 7ABDE75458074956A4B86F6C /* PBXContainerItemProxy */;
		};
		3DD680FF75A14817B87D6D7B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 2AB7A2F136554C6090125C8E /* PBXContainerItemProxy */;
		};
		3DE810CF189A4A2F847CC225 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 91AE1CB5BD404A37B5FFA3AC /* PBXContainerItemProxy */;
		};
		3E51C0FE66F54BF68ED95930 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = A22B880ECB0240A3818AEA2C /* PBXContainerItemProxy */;
		};
		3EE748532371454BA2A8B8AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 0DBCC7F50E7B41A3B80F5765 /* PBXContainerItemProxy */;
		};
		3EE7F760BF3D4555A254EAAD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 3B54BA9EB9E44FCE87B04FF9 /* PBXContainerItemProxy */;
		};
		3EEFC833559146C091E45945 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = C53C187EFDAF47A1B8DC09C2 /* PBXContainerItemProxy */;
		};
		3F73865D48714E6B89CF385C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 06C3248BF43F4B14820F72A7 /* PBXContainerItemProxy */;
		};
		3F739E65C2634BAC8F2625F6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 6E35036DC95C47DCB51061DB /* PBXContainerItemProxy */;
		};
		3F791C579F784C9C82520EB4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = BB0B2EA85C8B4435A775CF99 /* PBXContainerItemProxy */;
		};
		414B03760BDA4EFBA93FAB19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F1928AB6AFD5479ABD3AD37A /* PBXContainerItemProxy */;
		};
		41B69E83DD9B4120A2E54152 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E159797A3E811F9C851B9709 /* test_suite_gcm.camellia */;
			targetProxy = 5F2BC48F9F164CB7B305F707 /* PBXContainerItemProxy */;
		};
		42122ADA46CE4427BA30B15E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 756FEC12F8384F1AA18D4CC0 /* PBXContainerItemProxy */;
		};
		4237F84E9E684AA788133798 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = ED494743CC364C07ABCB63BA /* PBXContainerItemProxy */;
		};
		426F6F016A5840F09FE3BE5D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 8BBEF74825064D2CB92E20A2 /* PBXContainerItemProxy */;
		};
		42A6EB259A1E40D8887CE75A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 1881B46607D540EFA45C3A31 /* PBXContainerItemProxy */;
		};
		4317989770984B19BEE7D27B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E40C0531DC0F4ACBB55BEFF5 /* PBXContainerItemProxy */;
		};
		4340D65359B44CDFB825EE82 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4E6344849A6B5BB6DDE9BB85 /* pk_decrypt */;
			targetProxy = 4C4183633FC0434D960D3B9A /* PBXContainerItemProxy */;
		};
		43437B6BDD634A01A882C1F0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1C9789855A83425B94AE6DFD /* PBXContainerItemProxy */;
		};
		4489D7BD000F465F9FFF29B0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3A2B07E247464EF5B51CAEF8 /* PBXContainerItemProxy */;
		};
		44C999BCD1E445A088B1D15C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 81477C78627B0B6AF7DD8803 /* test_suite_pkcs1_v21 */;
			targetProxy = 3F607BB3FB894D42A5D88F68 /* PBXContainerItemProxy */;
		};
		46213C4EB8A24FF887D12741 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = BA5411517A154356A5D8FFEF /* PBXContainerItemProxy */;
		};
		46FD4200A20F45E9B0032BB2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = D32E02BC744141A2A5219EFC /* PBXContainerItemProxy */;
		};
		47476EE09B9C41F9A4111500 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 8B4E59DDEA394F94B8CDFB02 /* PBXContainerItemProxy */;
		};
		47659FCC293640EAB0B1F198 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 315E6487BE8045AB86604971 /* PBXContainerItemProxy */;
		};
		479FD99B9A204765A312D783 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = AC502CC8F7C048788F42DEDF /* PBXContainerItemProxy */;
		};
		47DBD58BC02645DCAB98AD54 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 736CCC5FE48E4D390E3BB9F5 /* ssl_server2 */;
			targetProxy = 5CAA554DBD2B4F678C930191 /* PBXContainerItemProxy */;
		};
		48FE8EC59BA84E64BDA66D81 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 29CE24D5EED5494EB87FB640 /* PBXContainerItemProxy */;
		};
		4A13A6997BB94EB8BC2193C7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = EA2C9267F1DD4E8B966227DC /* PBXContainerItemProxy */;
		};
		4A3310E3909A4E2FB2E4D595 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 947A60F31C014EF3A564684A /* PBXContainerItemProxy */;
		};
		4A5B7E89F357409D94DB58C8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 38D5521828164E709CFF10C5 /* PBXContainerItemProxy */;
		};
		4A6704E1BB2E4FCFA9B0DCA6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 7CFEFCEBC30D4A6A876A9518 /* PBXContainerItemProxy */;
		};
		4B0115E5308543C3A8B7DA8B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = F646B58650D74673B41BB738 /* PBXContainerItemProxy */;
		};
		4BB5C2EE4D214EA0B2176333 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 61D0788597854EF18FFDD850 /* PBXContainerItemProxy */;
		};
		4BD9599B10884F9FB15B2047 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = AB83E272857441ABAB753C5B /* PBXContainerItemProxy */;
		};
		4C0C4264E9A749E3A24AFD34 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = B4BF135DD0E74E4E958D6D42 /* PBXContainerItemProxy */;
		};
		4C2D670951A646EDAE606505 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = B649086A727D4FF691232BFD /* PBXContainerItemProxy */;
		};
		4C3F6E39FAF14B1CB75858E7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = CD828CEF5013434AAAD60A2F /* PBXContainerItemProxy */;
		};
		4E21D91EB89A4644A9409B9D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B028E59B3085A25389F965DA /* key_app_writer */;
			targetProxy = 67782D5776ED455BA88303CF /* PBXContainerItemProxy */;
		};
		4E225CCBE9B24EA4803BF118 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 245635E3BF014F3BB79A6AFC /* PBXContainerItemProxy */;
		};
		4E8178D9A6904DBFB2BE802B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8B5FBCA5D37095305232AC6E /* test_suite_pkparse */;
			targetProxy = BBD1D2E6E8264B498A6E8A92 /* PBXContainerItemProxy */;
		};
		4EB223B27CF641B0A2D704C0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 8FA9E00E3B0B475BB7FF1633 /* PBXContainerItemProxy */;
		};
		4F662C74290243208D826B24 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 49E11E7A24264AAD90EC23E8 /* PBXContainerItemProxy */;
		};
		4F88F419F5DD49C9BBFF3A2F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E641D94624704ABA8CDFB426 /* PBXContainerItemProxy */;
		};
		5083E4D5EF11403C96350F24 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = EB7F8A87971946F2A54A7561 /* PBXContainerItemProxy */;
		};
		50936D710EDE44B5B9A80FAF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 19C5C2D91E504D79A58780A6 /* PBXContainerItemProxy */;
		};
		50CBD6A336EC4EFBB1EC0A03 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = B458F7C38DDD4877ADFB2447 /* PBXContainerItemProxy */;
		};
		50FEF67E38D64232935631EB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 224D1A10D78D41A796BDA66A /* PBXContainerItemProxy */;
		};
		519D177C208E4637A0D1E006 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 87BAE80A6F8B4AD19371146C /* PBXContainerItemProxy */;
		};
		51AF83E222E640FA915B6842 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 476B1AB22BB1928A5C450AA9 /* ssl_mail_client */;
			targetProxy = C560675BE72449AD9AE0FDAB /* PBXContainerItemProxy */;
		};
		5206AF8638204A9790CC1DEB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = ECC8A40097D24C04B3908188 /* PBXContainerItemProxy */;
		};
		5213B4BA6BBF4CC281A33ACF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = EC3362B6173F41A3B03F3B23 /* PBXContainerItemProxy */;
		};
		525338D9AC144B2F8A90E2B0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 0A017AD8134DD8776A6E53C5 /* ecdsa */;
			targetProxy = 572480B0AF8E4C9692DEBBF9 /* PBXContainerItemProxy */;
		};
		52F05EB0D1AE4AB5B9EE1DAE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = DBA4FB0B790E40F38F51D23F /* PBXContainerItemProxy */;
		};
		53CC356BB1CA4F1E91D32831 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 4CD0734D6F80492ABED609F1 /* PBXContainerItemProxy */;
		};
		53D4D3A3A3674B5985065B67 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 9166BAA24193438899278638 /* PBXContainerItemProxy */;
		};
		54B46CF6E86E45DAB5FCC21B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 36E12DBA14DC435387292981 /* PBXContainerItemProxy */;
		};
		5601211CCEEF4BEABAC81ADD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 35F3463F90624206B55A1F86 /* PBXContainerItemProxy */;
		};
		56BB393B32594A23A995609A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 163D96AB54664D0396B32B6F /* PBXContainerItemProxy */;
		};
		5791C077186E45C79920BF0D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 63F182ACF1BA4C15B1CEF7BB /* PBXContainerItemProxy */;
		};
		57A9D42F28EF4E0BA050A3F1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 6DBD6E33B60344D89B2B4222 /* PBXContainerItemProxy */;
		};
		58374159065D477DAFFFC045 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 8D9D2056903B46D9A2CC4CCB /* PBXContainerItemProxy */;
		};
		58E865CF69E248E58A4DD26D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 854BF313541D45A48E0C3DF3 /* PBXContainerItemProxy */;
		};
		5991DD3B3A8F4AB696E58401 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = CBE5970F446B4AC496F05300 /* PBXContainerItemProxy */;
		};
		5A1B4F2F0194414E80D12633 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 617111CBD8E949049BF58F3E /* PBXContainerItemProxy */;
		};
		5A3A9246A45B423C92395315 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = E00A3D323FAD4611BABE2076 /* PBXContainerItemProxy */;
		};
		5A4B79AF1F624DD39F188CD7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = D65992324584464FBD5A56BD /* PBXContainerItemProxy */;
		};
		5ADAF09B2EA0473B8BEBE0CD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = C0876E5DC4244D5FB6347B58 /* PBXContainerItemProxy */;
		};
		5B2303AE126B40709C7AF903 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E979BB1589DB488A9F13D109 /* PBXContainerItemProxy */;
		};
		5BF88A15B25148548FAD2E62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = C7307A53CA4541FFA2BA87F4 /* PBXContainerItemProxy */;
		};
		5C93582F700A4171901B01E9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 28BC004376374549BD5AFC01 /* PBXContainerItemProxy */;
		};
		5D182E0A3860426199C98AAB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D28BD8E78CA9E80AFF81273F /* ecdh_curve25519 */;
			targetProxy = 91E35FAC4F13495698D1E51D /* PBXContainerItemProxy */;
		};
		5D588675015E4A34A43215DA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5E557150F43249D09401BCB0 /* PBXContainerItemProxy */;
		};
		5E80A1CD051E4B58B45CDE1D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 8FA7F83FA6854637B9AE3DBC /* PBXContainerItemProxy */;
		};
		5E9A223E24FA4A42A33CAD95 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5E4615BA9363468287338D1B /* PBXContainerItemProxy */;
		};
		5EC9ED217109474CAE5A773D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = EBB8AA608E574FB8A19F70BB /* PBXContainerItemProxy */;
		};
		5EE9BAEEAD614514B2F0E931 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 364E9702585F458883DDCD46 /* PBXContainerItemProxy */;
		};
		5F52554A721D4614867D750B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = E79FCAB316DD4A4F9FBC393C /* PBXContainerItemProxy */;
		};
		5FAD957458834400A32EAE92 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = A2D800E489AC4774B7C10C76 /* PBXContainerItemProxy */;
		};
		5FEB565B4DAB47578B25F0B3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 5B7661B8DA99400D82447BAC /* PBXContainerItemProxy */;
		};
		60BD29EE14164DE9A500DD4D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 27FEB26FCAA5486DAD4A1FFD /* PBXContainerItemProxy */;
		};
		6146CD95158D47F69D75606E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 136E46FB73D7A21210B142F3 /* rsa_decrypt */;
			targetProxy = 50E29B61E88D44B99B5B6677 /* PBXContainerItemProxy */;
		};
		6147975E1AEA4F87B8EB7746 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E9ECF62A7C464DF08F5648D7 /* PBXContainerItemProxy */;
		};
		616ECCA3B1304BFEAA0ED1D6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 6229E05097C34E98B3000BDE /* PBXContainerItemProxy */;
		};
		6178462D6F0345F1B2674EF7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 9E6B093AA9D74465BB770AE3 /* PBXContainerItemProxy */;
		};
		62DB2ADA26A14F20B30A5FF9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3FD6C4FE59DF421983080DAB /* PBXContainerItemProxy */;
		};
		6309D8AF228C4F48A65DAC62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = C954B44711544F82BDD5C993 /* PBXContainerItemProxy */;
		};
		6319432FA39E4CE3A14E89FC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 32132EE3B730495E998D9803 /* PBXContainerItemProxy */;
		};
		63FD2C92ADB440969E17EC93 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8BC88D528D77393319B6F5B7 /* test_suite_cipher.aes */;
			targetProxy = C1CF8AF41FD3409EB3C0AFC4 /* PBXContainerItemProxy */;
		};
		648FD5BD95F744738FA71990 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = B63CA38EF9C74BD9B0E3767A /* PBXContainerItemProxy */;
		};
		6519154AE34F4F379C7A6AB6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 661DDB8594BD9ECB32DA30D7 /* dtls_server */;
			targetProxy = C0B99CBDA0D84CA8867E29EA /* PBXContainerItemProxy */;
		};
		661772F42794461EA8D2CF4F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 45B5833644974263993C2045 /* PBXContainerItemProxy */;
		};
		66569FA0188B4DA78F835059 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 03EEC18C2DDE4B25ABDD54B9 /* PBXContainerItemProxy */;
		};
		66AB6FF95CE341149E412FA8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = D7419668CA4745F6944395F6 /* PBXContainerItemProxy */;
		};
		66FC897848024F93A37C30EB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CAD1DBE4E4814C53861B0568 /* PBXContainerItemProxy */;
		};
		674FEC2A6D40463699F17D98 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = F510C5A5760748F58A065643 /* PBXContainerItemProxy */;
		};
		67CDA671321F4BABB5C6C200 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = FF4451F088B64FE7AA3C0D16 /* PBXContainerItemProxy */;
		};
		68AFED59805249CDB3400F18 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = D35497C5018441BA9296B2CE /* PBXContainerItemProxy */;
		};
		693B3544D59547C9A59E018B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4D2298E3D55708D846A03638 /* test_suite_pkcs1_v15 */;
			targetProxy = BD15A5677FF049128C5096AB /* PBXContainerItemProxy */;
		};
		6941862C60484BD99A3C9195 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C7E42F3F7E824047465303C7 /* rsa_verify_pss */;
			targetProxy = F8C3C1407C79492E9B0340B6 /* PBXContainerItemProxy */;
		};
		69430D9A8B224C8CBC85EC4B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 3C0D674EC14D4B8B8BEC03B6 /* PBXContainerItemProxy */;
		};
		6A137AC6A00045FC9E0AA2C3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 94FE227C58E54E3685C1DAEC /* PBXContainerItemProxy */;
		};
		6A7A096CA27F4E72B4BB4EFB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 6D735950C56540E0A068AE5E /* PBXContainerItemProxy */;
		};
		6B49E21A6A8844E9AA64000D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 9EF4744B8D534319A0F670AE /* PBXContainerItemProxy */;
		};
		6B62372CB7414BAAAC1F5D33 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 97BEA360A37A44878DD435B0 /* PBXContainerItemProxy */;
		};
		6B7AD562963945E697F209D9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0E341325B3AE43AEA6138193 /* PBXContainerItemProxy */;
		};
		6BB9AB6ED1CC445AAB354BDD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = AD50E71C1D9244D695D21B1C /* PBXContainerItemProxy */;
		};
		6BC1F599FF4D493DB99AC0D6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5C2941308E1B2503F15EC675 /* test_suite_cipher.null */;
			targetProxy = 300FFAEA45FE4F7CB65841B8 /* PBXContainerItemProxy */;
		};
		6BEB4F9E83964A1A9F8449A3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = DAD85AAB85A740B5B92A35DF /* PBXContainerItemProxy */;
		};
		6C59D686A17C4771AD504972 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 4D2759E1FAC042D5B1771EE9 /* PBXContainerItemProxy */;
		};
		6D8C54F783634E0888E0D4B8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 64F15213BD2040BC981327B6 /* PBXContainerItemProxy */;
		};
		6DCB3ED233EB4BAD96056FB1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = AC6AC995E61F4297BEDF2716 /* PBXContainerItemProxy */;
		};
		6F1C2D29A5F146ABB530ACBC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 075AF5D745CC41BB8D99BF97 /* PBXContainerItemProxy */;
		};
		6FAECDC6FB4D40E59BFECBE0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 18A7DC3CF3D5432FB7060A0F /* PBXContainerItemProxy */;
		};
		70004243D8D14BECB8E81585 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = C81C2DC4DFF7416FB41BF173 /* PBXContainerItemProxy */;
		};
		70A64EBE68A4444DBD73AFBA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = A0ABF53846844494B9FCD5BB /* PBXContainerItemProxy */;
		};
		714093547EA8453BACD45610 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = F300DA896524456493AD81CC /* PBXContainerItemProxy */;
		};
		715C778B46AF48C7B86C34C0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 382969DE00C64B908C51F269 /* PBXContainerItemProxy */;
		};
		71BF0218ABE14D4B98157777 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E53977293DB34F01BFE79D8A /* PBXContainerItemProxy */;
		};
		72144242003C41A08C45CE65 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 1ACCDBFA4D954E689428898F /* PBXContainerItemProxy */;
		};
		72966AAD4CFC49AC9CFDF36B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 7665AD4553CE4F6AB6A5BD47 /* PBXContainerItemProxy */;
		};
		741EFAE715A04D59A215DE62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = C35157E2F0954EC586F238C6 /* PBXContainerItemProxy */;
		};
		74DE5EBF16F24DACAA8EF487 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = DE54BCBAC5E3440D8122E48A /* PBXContainerItemProxy */;
		};
		753ADEE1F6904979B43F6D55 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 5082AA94FC1049958D8845FD /* PBXContainerItemProxy */;
		};
		75545857E9914BB48BA47C1E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 5665B08D84A9452DBDDA86DA /* PBXContainerItemProxy */;
		};
		7554FE36CEAE4F4398B3CE9D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 0D056917267F4501AE974D72 /* PBXContainerItemProxy */;
		};
		76F47546F4A6430F9D1F8D3F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 03A8D57A9FB5455980C66342 /* PBXContainerItemProxy */;
		};
		7722BB48A15E48CA9ADD708F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 01A882A74C6C4846B68EC547 /* PBXContainerItemProxy */;
		};
		7790C44601784D3BBAF0B065 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 5732034065014CDA82D8487C /* PBXContainerItemProxy */;
		};
		77A9B1602EE941E1A0E6F222 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 89530B785C5241AD85909F3E /* PBXContainerItemProxy */;
		};
		77B3960A8D424411A941328D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 7A9B479BCD1243C98B76085A /* PBXContainerItemProxy */;
		};
		780B7FC2205442A0BE4CA5E8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2D4919BE5807630ED568CF83 /* test_suite_ctr_drbg */;
			targetProxy = F06FB5DA616D438481B65CA8 /* PBXContainerItemProxy */;
		};
		787D37AEABA94507B199D458 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5F7D115795CD45C428F4F4DB /* gen_entropy */;
			targetProxy = 1585B01FFC904716B0B86B70 /* PBXContainerItemProxy */;
		};
		78B1C7CC5CE742E997039CC6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = AC6426743BF142179819DDFE /* PBXContainerItemProxy */;
		};
		799EB684F36E40B592080CF1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 45120F46C87B4EB888A7ABB2 /* PBXContainerItemProxy */;
		};
		7A224B57A14C434E9CBEF3D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E301C3D3F2204AD98832DC22 /* PBXContainerItemProxy */;
		};
		7A93D00AFAA841D7A79D24AC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 6740349B8FD34E959543D3F1 /* PBXContainerItemProxy */;
		};
		7B64668A8486405A93FE1F8F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C13B0399EDD813D5F9BAE270 /* udp_proxy */;
			targetProxy = 5BDFB456CB934B26BD2AE3A4 /* PBXContainerItemProxy */;
		};
		7B753E5CC17548A1AFF2C3D1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 9CDD200F3C134ADE95341CA0 /* PBXContainerItemProxy */;
		};
		7BA802AA4C3F4A009F5DA43E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 8EF744DAE15C40F193FFE851 /* PBXContainerItemProxy */;
		};
		7C3F1EB5D7E44E65A3496F69 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = E7A22462B34D4FBD835AE077 /* PBXContainerItemProxy */;
		};
		7CAA5AFCEFDD4AD38F40BA2F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 77F2037517D744599F33C2E9 /* PBXContainerItemProxy */;
		};
		7CC2BCEF3EF64FF6B301639B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 533D941A001B4248A525A80A /* PBXContainerItemProxy */;
		};
		7CED39655C3C43F4AC434793 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = F1115AC419754622B3F46A69 /* PBXContainerItemProxy */;
		};
		7D6EDD25818441EEAB38718F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = E9516F73E85A4BCF87B6A596 /* PBXContainerItemProxy */;
		};
		7E1818E922E348EEB66E99AC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 82BB205E9D823CBE782D635B /* ssl_pthread_server */;
			targetProxy = 34BE6DC98DC24E0C8C04A462 /* PBXContainerItemProxy */;
		};
		7E61641B7D254C4F836A9FD9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 9DD643ADCF1544A3BDCC6BBE /* PBXContainerItemProxy */;
		};
		807A78D7A07E4D379626C68E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 6BCF7CC7E0844AAB90821B8C /* PBXContainerItemProxy */;
		};
		80B4E1B16ADE4F6DA815C19D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C11323151749CE256D03B25F /* test_suite_gcm.aes256_de */;
			targetProxy = A5AFBB66BF9640DC8D46F300 /* PBXContainerItemProxy */;
		};
		80F6108809E0486EA55C8254 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 8CBF16C9D85D40C2964C9047 /* PBXContainerItemProxy */;
		};
		811B43F1D66442DB9C3D1D78 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6B6F9FBAACCEFE4150670DE9 /* dh_genprime */;
			targetProxy = 341809BE1A444F6F8F9BF28E /* PBXContainerItemProxy */;
		};
		81706FBD2ABA4EBCAEA2C451 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = BF71E267D1354E32A1D8BB0D /* PBXContainerItemProxy */;
		};
		8177669EDB6948DCAD53AB90 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = F826D59D928E4C85B61B3335 /* PBXContainerItemProxy */;
		};
		8182E54EB0A54CDE941E299B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 8611F9E8D0134D2BA8B76955 /* PBXContainerItemProxy */;
		};
		81DE36376C5B4915B115C87B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D604253125427149818B6FAE /* test_suite_hmac_drbg.misc */;
			targetProxy = 10DF6914E1944575998619FA /* PBXContainerItemProxy */;
		};
		8210909D3C264C15A9CEEA76 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D3220840E123713147FC830A /* rsa_genkey */;
			targetProxy = 904047602E764439B56544DF /* PBXContainerItemProxy */;
		};
		82E59255B394478E9BC46DF7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = F06CC8E073A2423D9DB614E2 /* PBXContainerItemProxy */;
		};
		832C598082934876916BD85A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 00DD0A0216234F4F84065058 /* PBXContainerItemProxy */;
		};
		839316592C2B4B8C99780950 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A40B70678473DC9140F25711 /* strerror */;
			targetProxy = 1596995B79E744C9A7FC1212 /* PBXContainerItemProxy */;
		};
		859EA9FFB9D64D5FB2C2B83A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0D15D89C44004FA0858305A0 /* PBXContainerItemProxy */;
		};
		85F9283988BC4A149CEF24D6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A125441CCCFBDD264EB9B08B /* test_suite_dhm */;
			targetProxy = 8FB1552BC4914A71AA3B621F /* PBXContainerItemProxy */;
		};
		8716BD9D1F1642C383B3262B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 291F11BC75D230E75C5C0176 /* test_suite_cmac */;
			targetProxy = 20D8F906841B4EEEA4DECE43 /* PBXContainerItemProxy */;
		};
		872E1EAD03B34A0DAD048D3E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = A80E117C160946468B5E3AD2 /* PBXContainerItemProxy */;
		};
		87B60B037F844E94B66FD5D2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E76DA26A151FCAB9E0D1A119 /* cert_write */;
			targetProxy = E1E3257D5F94412CA4A9B7AA /* PBXContainerItemProxy */;
		};
		87F334E503444E3988A8E8A8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = B286DE6DF1984FB3B2D21E51 /* PBXContainerItemProxy */;
		};
		885BB0F134A841D39C754751 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 76A510E6A86448FEB9B9E5F3 /* PBXContainerItemProxy */;
		};
		88AC8BEDAC4D44B6B69C52D7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 44A468FE44AD493EA8B49BC9 /* PBXContainerItemProxy */;
		};
		89CAE4E54775498484412A6F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1EB1C7A69382063DD1DFBAAE /* test_suite_timing */;
			targetProxy = 755FE870E5F743B29C685B9F /* PBXContainerItemProxy */;
		};
		89D5A4DC0E834C19A7CACCFA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 9214018542B5E981EE3AB7AE /* test_suite_memory_buffer_alloc */;
			targetProxy = FEF0F3D9E11E4C6585B31EA6 /* PBXContainerItemProxy */;
		};
		8A2CA5B2422647639DF2D544 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 32B8EA173E25FBFC6E9C01E2 /* test_suite_aes.rest */;
			targetProxy = 54784684C7FC4180BCC5DC48 /* PBXContainerItemProxy */;
		};
		8A7809431C18436BB59D2F61 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = C77B40E268FC462590005F81 /* PBXContainerItemProxy */;
		};
		8B776AC3EF5744EFBB6AD818 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 72F389206AF74A1A9100B8B6 /* PBXContainerItemProxy */;
		};
		8B9061CAD3854D3AA4674230 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = E2C46F3EB3CC495F89453064 /* PBXContainerItemProxy */;
		};
		8C2A8505AA3147B8AC17B976 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 453330CCFAE45684805B9B21 /* test_suite_mdx */;
			targetProxy = 6281C5A4350B466D8B0D72BC /* PBXContainerItemProxy */;
		};
		8C34FD05B5A149DF98726032 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 77DE82126300AE680D449967 /* test_suite_cipher.camellia */;
			targetProxy = C03FB6524F7B42BAAD37487C /* PBXContainerItemProxy */;
		};
		8C9A9DA674F74F878D426AB9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B708867B26E4A59B73B534D6 /* dh_client */;
			targetProxy = 86410C0314A54E17B6596C3E /* PBXContainerItemProxy */;
		};
		8D4D2D57DBDD4FE78E34BD2D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 525956A3086F405597D91BEB /* PBXContainerItemProxy */;
		};
		8D558A4CDB5A4C71A123D52E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 673EAF182FD347ED9300A3FD /* PBXContainerItemProxy */;
		};
		8D905528BA1D47B19FFF2CB0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 215E8AD63CF14580B18AF018 /* PBXContainerItemProxy */;
		};
		8DBA3D0F89D54734BE558CDF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = AF488F37FC534999905842AA /* PBXContainerItemProxy */;
		};
		8EFB5904913946ADBF4277DE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = C46BFC73768342A4A3EC3142 /* PBXContainerItemProxy */;
		};
		8F7CAE4492CC4D64AF6493B2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B59BB71A65DC6CC337C9F91C /* test_suite_gcm.aes128_en */;
			targetProxy = 5D0D53829E5F49AD897B2ADE /* PBXContainerItemProxy */;
		};
		8FA5DCBFB64A47269A95D856 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = F23AF31B94E6C62B4DB47481 /* test_suite_pk */;
			targetProxy = 52164BD7F00046A2A0640498 /* PBXContainerItemProxy */;
		};
		8FB6084EFEDC4A8AA3DCFBC3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 2C6ED3F3D6D74BD38C6D3854 /* PBXContainerItemProxy */;
		};
		903A4B53D94C48A2AD29C4FE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = B83C3347E6C74E6B9983FB55 /* PBXContainerItemProxy */;
		};
		90B0143BBA7348469D9F7234 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 0AE3496513CE414CA716C5D2 /* PBXContainerItemProxy */;
		};
		9110910997104D76B9BDAB22 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 85AFB276379E45978FBAB816 /* PBXContainerItemProxy */;
		};
		915CCDD2777E45438AABA0BD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 26014936BC124C30B576AA85 /* PBXContainerItemProxy */;
		};
		9216D74EBE9240EABD39C2CB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = C557DE39DDC3446A85FDAC81 /* PBXContainerItemProxy */;
		};
		927461B2D7554E7A97298A20 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C414B53A8A1727614D19D1E2 /* test_suite_hmac_drbg.nopr */;
			targetProxy = 4871C3C79760414583702C0E /* PBXContainerItemProxy */;
		};
		927A654A436547E8AD132509 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 25FF28B01CA348A584337157 /* PBXContainerItemProxy */;
		};
		92B20C3C590D4079A8B910C4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 67E79673A788416BA23393A4 /* PBXContainerItemProxy */;
		};
		9342D1C39303466F9894BCB5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 8CE6126237A84E90A07242F4 /* PBXContainerItemProxy */;
		};
		93517E9DCABC47748738328D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 410C61D01C8847ADB6CC65F8 /* PBXContainerItemProxy */;
		};
		93EB514FA4B34371B1A04C1E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 568D701C09C04A73A24935A6 /* PBXContainerItemProxy */;
		};
		94A60E0D8851486C906C7E31 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 1D2189B8A8FE4DED809FF239 /* PBXContainerItemProxy */;
		};
		94B9EA163AF44986A95FC694 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 18DBC42768A14C93978A2789 /* PBXContainerItemProxy */;
		};
		94F7BD86C0EF4EFBA9D0836E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 7987571BF5114276A4414BA6 /* PBXContainerItemProxy */;
		};
		9704DF4BF626415B83F8E02E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 60BF7F050AB2279A4DA47C0D /* gen_key */;
			targetProxy = F6D2EC0C7BBD4500A4D42B61 /* PBXContainerItemProxy */;
		};
		9724D56E16334731B36E6688 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = BFDF018078A24FCD86D41C8C /* PBXContainerItemProxy */;
		};
		975BE5FEE06049BC989874D0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C46A77CB84E3F02E0C7B8C05 /* test_suite_xtea */;
			targetProxy = 2DD28995ED6946AB8462E94E /* PBXContainerItemProxy */;
		};
		980B0E3D0DD14F82B0166440 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 0F45435251CE467B85F4F79C /* PBXContainerItemProxy */;
		};
		985267E004A14DE9B1BD9B92 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 89AC83B8E97C5C53AF04A31A /* test_suite_aes.ecb */;
			targetProxy = C76C93C21BD04627B3C0977A /* PBXContainerItemProxy */;
		};
		991A755E29AD4B84AE6265F2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CA2188740AB340DB80D042F4 /* PBXContainerItemProxy */;
		};
		9A342F210FB546EEB45F6F63 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1A0C9B85FE0540128B4ECE3E /* PBXContainerItemProxy */;
		};
		9AB3CCEAE6E44A76924B00A6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C4C14FA10710C27B2ED4631D /* test_suite_hmac_drbg.no_reseed */;
			targetProxy = 837D376FA72347B48424A156 /* PBXContainerItemProxy */;
		};
		9AB6565DEA054F099732FF87 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5E260C1BC30341AE36184657 /* test_suite_blowfish */;
			targetProxy = 6AF23AB4EA294BF5B32310AB /* PBXContainerItemProxy */;
		};
		9B159773A0F445269757D00C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 1F6ADFD31A104E1B80562C65 /* PBXContainerItemProxy */;
		};
		9B2A1F8AD5AA40128A25EE54 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 6F2D034368144024A5052784 /* PBXContainerItemProxy */;
		};
		9BD2A81ACB1E4D08A7EF7E56 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 167AD28B42BB46829BF5C195 /* PBXContainerItemProxy */;
		};
		9C4F258CF2A248589F0828A9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = A187BE3216384D8487799888 /* PBXContainerItemProxy */;
		};
		9D0D0EA90C2A475DBC58BBCB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E59BBFF8DB244C4EAAFDE76C /* PBXContainerItemProxy */;
		};
		9D372E9F0B414AFD99991F26 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = D2C0CB1174A64310B991EFC7 /* PBXContainerItemProxy */;
		};
		9DE01E98D61C46539CE804EC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 8F132B6016F04F0AA96BB4D0 /* PBXContainerItemProxy */;
		};
		9DFBD135BB0946A590069923 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 49A31A6B3E10431CBDB60479 /* PBXContainerItemProxy */;
		};
		9E2C9655E64447BABF4757A0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 7941F085D15447A884751F02 /* PBXContainerItemProxy */;
		};
		9F6BE829C4E54C44A2C7F5D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 0508AE6AF3CA4EBDA8E1B674 /* PBXContainerItemProxy */;
		};
		9F88A4562A8E47228A9FDC55 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D3A4B154E07F5FC0044866BB /* pk_verify */;
			targetProxy = 2E830413DDB04767A158A82F /* PBXContainerItemProxy */;
		};
		9FE0FBCF8B3A46C3B6E588EC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E694DAC7A62D4312935E9312 /* PBXContainerItemProxy */;
		};
		A0A5E602E73F45729CD17F70 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 677E40F0A3DC36457EFCFD30 /* rsa_encrypt */;
			targetProxy = 8B2E5B1640B94BFFAB31458E /* PBXContainerItemProxy */;
		};
		A109D3EB7CB74F4C858F9B59 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CFFE51E1BA6ECF2B52B6FF7B /* test_suite_gcm.aes256_en */;
			targetProxy = DA9C375EB633451C989D1B4D /* PBXContainerItemProxy */;
		};
		A39CEAE54477471898221761 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 6AFFB9ECFD664CF9AAB024D8 /* PBXContainerItemProxy */;
		};
		A41AC8C3FA5946F09CA0E9E4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 63D8470C29A943A4BB645A4B /* PBXContainerItemProxy */;
		};
		A426EA53235546ED89ECE8B0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 0760A6917F194826AE0907B9 /* PBXContainerItemProxy */;
		};
		A43B4E948E05423CA3E8B747 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = A02090F6E86949538B19A67C /* PBXContainerItemProxy */;
		};
		A4683B630F3942D0AB76E84B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = ABF059D715394C8A87AB6D55 /* PBXContainerItemProxy */;
		};
		A4E57511D4CD403DB08679B6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 30C69D113BF84116847812E0 /* PBXContainerItemProxy */;
		};
		A5560781BC2E460AA580A59C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 72874F09DFC6470DB7991B67 /* PBXContainerItemProxy */;
		};
		A635F62428EC42EEBB7DB2C5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = CFB10AF112FA6572E3109F42 /* test_suite_ssl */;
			targetProxy = 57C4DD34DC99412783F46DC4 /* PBXContainerItemProxy */;
		};
		A7A254B37D884A3BA07A2CDF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 83E651D178C14B4C852D0574 /* PBXContainerItemProxy */;
		};
		A89AE662304C420EACD6C8E6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A7CC9C8E9C07E5F9B89D49F0 /* crl_app */;
			targetProxy = 7D8E49C3000F4A4699567BD6 /* PBXContainerItemProxy */;
		};
		A9080BAC20354F27AB18BAE6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 0F7725EE099C4979A9028998 /* PBXContainerItemProxy */;
		};
		A90AB9E5B7D74AE6AF42A236 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 2E7FF9B99F3B4190ACB6E4CE /* PBXContainerItemProxy */;
		};
		A996CB53E59E4D7AA2A1D3AA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 072585E4D9C848D190DA305E /* PBXContainerItemProxy */;
		};
		AA01336206D94C7A854C39C9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 42BB226F579504137717614A /* test_suite_cipher.ccm */;
			targetProxy = FECA0C7A392F40169330EBB4 /* PBXContainerItemProxy */;
		};
		AA227E8428BB4C58A819DB17 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 7A573A95A8D34B2BA5C09BCD /* PBXContainerItemProxy */;
		};
		AA941FE5093149EFBBC5C697 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 46B69A42CD6D402DA65E13BA /* PBXContainerItemProxy */;
		};
		AB60418985CC49B1AD7091F2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = C46B2F3745C9414AB3E95DCB /* PBXContainerItemProxy */;
		};
		ACB721EF6A8E4B1484F2796F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 008D3278A55C463EB8A81DA5 /* PBXContainerItemProxy */;
		};
		AD242C3C9E4944809871910F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 8B143C3F17FE4DF884883840 /* PBXContainerItemProxy */;
		};
		AD4714D88AEA42998F57521F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 06AA2A2F05374198BF477323 /* PBXContainerItemProxy */;
		};
		AD77E12C5CE943FB98E6CA4E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = C1C6B2487AC7489787690AE8 /* PBXContainerItemProxy */;
		};
		ADDC67C3ADD642E69D9F46EB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 8E7ACABE24ED49B8A5754E59 /* PBXContainerItemProxy */;
		};
		ADE1DDBA30D2418699B425A5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 1EBD62FD88234C189E4F1BDF /* PBXContainerItemProxy */;
		};
		AF6359836E6343488546AA46 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 6AC650C7F93E4813900DC89B /* PBXContainerItemProxy */;
		};
		AFCDD444A300452095FB4396 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E52CC8BB06CA4D8381F8FCA4 /* PBXContainerItemProxy */;
		};
		B00CAD3AF9EF42139158CF3B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = D7B6347600514706A72EB270 /* PBXContainerItemProxy */;
		};
		B0B5043285924999A02355BF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 915BF10B2D084FBAB153D8AB /* PBXContainerItemProxy */;
		};
		B11854A706C744FE9F899AEE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 4533D23DF13F4B9EB893BA34 /* PBXContainerItemProxy */;
		};
		B3465920FE154C388D0A83D2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 599994223A03413DBD5BE6C0 /* PBXContainerItemProxy */;
		};
		B357BCA5B8A74C1E8B8E76A1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = E608D72FE624430490180F2E /* PBXContainerItemProxy */;
		};
		B36B425CF16D473F9A894344 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 9F86D38877B747B1AAB91120 /* PBXContainerItemProxy */;
		};
		B3C0C2BBB06C42E381B7210C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1A696E61AD324D7997844A15 /* PBXContainerItemProxy */;
		};
		B415733296BC40539F20FCB9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6087DEC08F506B746E586B71 /* rsa_sign */;
			targetProxy = 269B651F559841C8A51904DB /* PBXContainerItemProxy */;
		};
		B433C1D556464199A3B2424D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 66F6392362BE4252BAC0919F /* PBXContainerItemProxy */;
		};
		B4889FA8D7C24492A1D0C77B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = AF5C07F4AD1D49B3A0149E75 /* PBXContainerItemProxy */;
		};
		B53F20D7659C4C3B98C80A39 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 1077783015E640329360A4B3 /* PBXContainerItemProxy */;
		};
		B588560DBF004D4BA7339249 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 8D77ED3413414D64AB129DB1 /* PBXContainerItemProxy */;
		};
		B615B49119D9482FA9B78E52 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = ECDAA9AF5189F6419839989B /* test_suite_ecdh */;
			targetProxy = BAE2B8D8AEAE4A2D8D174626 /* PBXContainerItemProxy */;
		};
		B64392C7EAF34C69831A48D7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = F92E26A2A9A74B7B9FB4BA6A /* PBXContainerItemProxy */;
		};
		B68207C7D92F4C609FDB86E6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3809E3A3FE5BF094EEABDA55 /* test_suite_arc4 */;
			targetProxy = 0B6F387EE3C448D8B92D043A /* PBXContainerItemProxy */;
		};
		B7D1C8157B9D4639B0E4F411 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 088C99D80CF345D88F2B66E0 /* PBXContainerItemProxy */;
		};
		B7DAFE4056334198AF2E1BCE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = B0BFA915EF3948688F8403ED /* PBXContainerItemProxy */;
		};
		B7EABDA3AEC64CAB810AC721 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 4BD22FE1D2644258A2D39B59 /* PBXContainerItemProxy */;
		};
		B872D0609C704DD295A7B7AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 90F1810B51604F8E9253F3D9 /* PBXContainerItemProxy */;
		};
		B87D018C93CD48BBA27F19DA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 4E2B702CA1606D2D041BAAE7 /* ssl_fork_server */;
			targetProxy = CD2C8D30CD4F40D3A0B74575 /* PBXContainerItemProxy */;
		};
		B88CB99F00D64B04912DBBB7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 6851B3F9FDFB47CAB9D17530 /* PBXContainerItemProxy */;
		};
		B99A51031AC84515922249F4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F9779CECD51E4ED9941D886D /* PBXContainerItemProxy */;
		};
		B9A6CF63E6DB404F9321C0E3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 3861EC43BBE64AE78FB2826B /* PBXContainerItemProxy */;
		};
		BA25C45D5D284EE49E3EA4B8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 3FED316A43E449BEAD109641 /* PBXContainerItemProxy */;
		};
		BA890BED1105409B813E8B7A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = C34E9AD6839B45DEAAA488D8 /* PBXContainerItemProxy */;
		};
		BADEB17F55964E0282A476A1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 664BE17B18A2C4681B324AC6 /* test_suite_error */;
			targetProxy = 75CCD56DFE2741B68C5658B7 /* PBXContainerItemProxy */;
		};
		BAFDE547EE65498692D22F7D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 5F93BDFCEC1541E8BBC18BB2 /* PBXContainerItemProxy */;
		};
		BB9F5C37232A4821843AF27A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 536B15A5ECC047EA840FB55A /* PBXContainerItemProxy */;
		};
		BBE89C2410E34B74843F81F6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = BCC482E652214A3094CD088D /* PBXContainerItemProxy */;
		};
		BC4799FF6B9D4E7591664EF8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 8B56138ED5684E9587FF5967 /* PBXContainerItemProxy */;
		};
		BCDBD07BC39944D6A742465A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 13BCF47955054CA1ADC1D38F /* PBXContainerItemProxy */;
		};
		BCEA0DDA3A85493394A34F62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = B23FB908D0C84838A9929E90 /* PBXContainerItemProxy */;
		};
		BD83E76B76C541CAB3F86CDA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 40E900FA45D34465ACB54620 /* PBXContainerItemProxy */;
		};
		BDBA5A3AB1F24649BDA3C0C4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 97DFA03CE8C048F1833742AA /* PBXContainerItemProxy */;
		};
		BDD10EE64E904E9D8B666C03 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 850BE8F4EB3E427E8E344958 /* PBXContainerItemProxy */;
		};
		C0A75A5A77BF4D7082B8101C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CBD585D91A8C4804A9076AD1 /* PBXContainerItemProxy */;
		};
		C14D3EF6A2EA4652BBB98F2C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 798BA8B30C3B40619DC5BB9B /* PBXContainerItemProxy */;
		};
		C1689FB8876743E489B645B2 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 64D8BA7A7219410A99BFD360 /* PBXContainerItemProxy */;
		};
		C23EC6C3BDFD4AA39CFF4615 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 71EACE5A7D0C4522A2CFF7B9 /* PBXContainerItemProxy */;
		};
		C28718B2B2A848BB8FB0AA25 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CF7FC1405CEA4E77BFFB9906 /* PBXContainerItemProxy */;
		};
		C29F4633BAF14BD880F56728 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = EA7320F77009448AA0B26737 /* PBXContainerItemProxy */;
		};
		C2F855CDFB274614BB0362AA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = CDFEBD2C690947E9B71B76F6 /* PBXContainerItemProxy */;
		};
		C39AA7E87AE84A3492D13870 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = CA084B9D390D436DBE252803 /* PBXContainerItemProxy */;
		};
		C3D3DCA0813B4A1BAD2D7863 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = F1FF2908972F484AB73DF8EF /* PBXContainerItemProxy */;
		};
		C4E4F318683D4513A4BA5E06 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 4CAECA4888DB4F6FBAE64303 /* PBXContainerItemProxy */;
		};
		C55DAAEF87644898A72FCF47 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5C5DFB4E882C418D851FDEAA /* PBXContainerItemProxy */;
		};
		C56C5F427EE4478CB63FAE97 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 9DE40F6F10944558A3E39CAD /* PBXContainerItemProxy */;
		};
		C5D3A61696D140CD99092904 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = AA9D80D27FE549D0817164F7 /* PBXContainerItemProxy */;
		};
		C64BB7BC0A59479F8F784DEA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 48C61CF1678F4F793728C80F /* cert_req */;
			targetProxy = C2A037C26F194C238C4C6477 /* PBXContainerItemProxy */;
		};
		C6997934F9E24DAA8D710BDA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = BDDFD0D1ECEA4C2F9205073C /* PBXContainerItemProxy */;
		};
		C6A54C46556C42DB8E14F287 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 75E6EB06A8F94E4D978C3F3D /* PBXContainerItemProxy */;
		};
		C7A7B00859CC4A278D60E393 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = D1720DE6EAD64BF9A1C392D8 /* PBXContainerItemProxy */;
		};
		C8097FE659B1457F8EB701F4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0371931424AB4FCFB13F9E52 /* PBXContainerItemProxy */;
		};
		C89717CFAE6742E3813769EC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 411BB3306912478FAF562FDE /* PBXContainerItemProxy */;
		};
		C949EA6C701240F29D2BBD67 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 36F7DF81F4F94BF2AEE7B56A /* PBXContainerItemProxy */;
		};
		C978D8D3CB8C4DF6AC082B88 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = EEEA7D636BF34E86B87DB1E1 /* PBXContainerItemProxy */;
		};
		C9CBB064842D458EAD132EDC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 08C413A6D2024FDDAC44B058 /* PBXContainerItemProxy */;
		};
		CA031AFB3D894E77AF2BE629 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = C8C94A4A09514653AFCEEF5A /* PBXContainerItemProxy */;
		};
		CBB71111D1C94B6B97ED0D11 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 718C3FD6366CEF8A124A2F83 /* test_suite_cipher.gcm */;
			targetProxy = 5A0955CD8C3744F69F2A99CB /* PBXContainerItemProxy */;
		};
		CD174F617C9340888482060A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = BC94A55AAA3A466AAF349D9D /* PBXContainerItemProxy */;
		};
		CDD429522E6E495F8A33EC4D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BA6EAC531C05691C65120E7A /* test_suite_aes.cbc */;
			targetProxy = D703C14A8CA34398B456B3CF /* PBXContainerItemProxy */;
		};
		CE7513E2C2DD467C9650D6B6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 24AC9A9449154B9DBF635C97 /* PBXContainerItemProxy */;
		};
		CF24E43C04C34C5A88B4FFEC /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = F46FA3E42DD6478EB5FC77B0 /* PBXContainerItemProxy */;
		};
		CF2F51AE1EC243BF8AEF1B00 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B372663E30C8F6BFDBBE43F3 /* test_suite_x509write */;
			targetProxy = DCDEF455DBF4446A9DDAE411 /* PBXContainerItemProxy */;
		};
		D052A9CB51EC4BDAAFB11668 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CFEB1699D4DF4184AA80A9B4 /* PBXContainerItemProxy */;
		};
		D1ACCECBA2D7407F99F5B5B5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 091BD574AF0C464EAF45B411 /* PBXContainerItemProxy */;
		};
		D1B75DC5D4EE48FAA360E10D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = AD062B77985D3CD6896FCB37 /* aescrypt2 */;
			targetProxy = 6EAA8288BA1B44F197942CBC /* PBXContainerItemProxy */;
		};
		D22BFEB992D44A7DB54CFE7E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 58AB3C583FED428BA8E3FA7A /* PBXContainerItemProxy */;
		};
		D25AABC302564035A670B6FB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 43E520FBC69149718B3606F1 /* PBXContainerItemProxy */;
		};
		D30E84C6C7CE498D8C0E9567 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E9A4985EB7D54924AEEDF45F /* PBXContainerItemProxy */;
		};
		D3A2697491284D03802E3E04 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FB48AF52AB945695FD505187 /* test_suite_hmac_drbg.pr */;
			targetProxy = F1B6FEC3C0C341B79510E673 /* PBXContainerItemProxy */;
		};
		D3B588FF73194923AA3CF2CB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 3B80DFC360E345618FF6BC43 /* PBXContainerItemProxy */;
		};
		D46C78238831458BBEA809A4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = AFC4EE19431A4508BE466F65 /* PBXContainerItemProxy */;
		};
		D527799701D548338ABC620F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CAADEE516F1947BDAB21A4E9 /* PBXContainerItemProxy */;
		};
		D52B4F24F4AA4DA4BD6FA2AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 6D8DBFDE33AD451383BE1A7A /* PBXContainerItemProxy */;
		};
		D5A8AF43317A49379D1231E6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = E570B7D5ED86480CB063E678 /* PBXContainerItemProxy */;
		};
		D62526C746BB4195AACF3D33 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 542D9811FC63CEB162FEE1CE /* ssl_client2 */;
			targetProxy = 2659298031BA456697C8B9CA /* PBXContainerItemProxy */;
		};
		D6764690623C4BFAB0C6DF8A /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = AF9557FA34404FDE983B10AB /* PBXContainerItemProxy */;
		};
		D737300647ED4D0A9769CCDD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = B1E5152CA4194B96BB39C903 /* PBXContainerItemProxy */;
		};
		D7A0EF835C4446059FB942CE /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 79DA52A7248D4A0E842C3248 /* PBXContainerItemProxy */;
		};
		D8E8356452EE4DE59120118E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 3DDEAC21E6D7412E8C6CBE82 /* PBXContainerItemProxy */;
		};
		DA20473751414DFCA2BF99D4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 24BEDA7D9D6542858C0F5BA1 /* PBXContainerItemProxy */;
		};
		DA85193DBFAD4ABF89C50B58 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 9E9A3546E0464285B3FD7E14 /* PBXContainerItemProxy */;
		};
		DAE3561EA4ED4730BC9522AB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 5579359A7EAE41EF957D6123 /* PBXContainerItemProxy */;
		};
		DB1AAAE8075E41CFAF71EFC8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = A822C3340B6B40D09CC539D8 /* PBXContainerItemProxy */;
		};
		DB832CA829BD4A16860A46C4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 7D550AB448184E189106222C /* PBXContainerItemProxy */;
		};
		DC8CE1A012C84DC8981C2AD7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F7F3E287146E46C7888917FA /* PBXContainerItemProxy */;
		};
		DC991E767C1B4427860780D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 175CBDAED63F4CB98E333F47 /* PBXContainerItemProxy */;
		};
		DCFB9453CCC349F3812ADC63 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3EE77B0EFDD135BC246B8BC4 /* gen_random_havege */;
			targetProxy = 8859B6B2430940D9AE58F3E2 /* PBXContainerItemProxy */;
		};
		DD2CC466FF7945CDAC7A15D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 07B14DF93CEA4DF09334ED99 /* PBXContainerItemProxy */;
		};
		DD6D446AA15B484B99A5B6D6 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 78653924CA02A9609D323F5D /* rsa_sign_pss */;
			targetProxy = 3FCC128C1F7C449AB3CA61BE /* PBXContainerItemProxy */;
		};
		DDDC1D85DC034BF1A4CA957F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 12131213F50C420CB3BFF894 /* PBXContainerItemProxy */;
		};
		DE024E3D0B3340558A786110 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 281DADFDB61345E38857054D /* PBXContainerItemProxy */;
		};
		DE5371018B0F4B33AA471529 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = D4410250AE5A4814B6ED3AA9 /* PBXContainerItemProxy */;
		};
		DE782A2684F14529872DD979 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F25C5FBBCA024AC4A47864A9 /* PBXContainerItemProxy */;
		};
		DEEB0D3C79C04D5F88CD2CF0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = EA9A423BD23C4C66BC98BB67 /* PBXContainerItemProxy */;
		};
		DF49751F196B4CA4A09347D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 29BA59437D681954609AE5BA /* test_suite_rsa */;
			targetProxy = D3CE6D7CB6144D57BF782DB8 /* PBXContainerItemProxy */;
		};
		E0572D3CA58B42B9A7793BFA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5ED155FB1D444A1EB100666F /* PBXContainerItemProxy */;
		};
		E08614E698564F5CA1B0BC8B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 5AEA60D791C5448B878E90D8 /* PBXContainerItemProxy */;
		};
		E09C3447456C4F24AE5D0396 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = A31479CCBFA548958161EE92 /* PBXContainerItemProxy */;
		};
		E1115F7E8E264DEC8088DAEA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 28C023CF84AF4920866ECF67 /* PBXContainerItemProxy */;
		};
		E12C4984F0C54A08A5F42BEA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6407C0786940FEC2502CFA25 /* test_suite_mpi */;
			targetProxy = B29A350395AE4DDE9731527B /* PBXContainerItemProxy */;
		};
		E180734200D94AD49CC407D5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FA0E8E898CFED17F83F73E2 /* test_suite_pkwrite */;
			targetProxy = C9030184922C44E8A38D2409 /* PBXContainerItemProxy */;
		};
		E1BF21812D5A4369935AC79C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 99C2EA3036AC4BBDAE8A4F13 /* PBXContainerItemProxy */;
		};
		E2FE3B7CFBD44214A8395DE7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 653CDB6ABFF889E53981B6C8 /* pk_sign */;
			targetProxy = CA70678A6DB64476BC5483B7 /* PBXContainerItemProxy */;
		};
		E383EA3733264DF6A2D2F4D7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = AD0B84913C7040248F408CFE /* PBXContainerItemProxy */;
		};
		E3A9F9ED2F724831B3960804 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 67F6D13E4A82173F6F28AD20 /* test_suite_gcm.aes128_de */;
			targetProxy = 59E17D20E2854EBEA79C7E26 /* PBXContainerItemProxy */;
		};
		E4501A740A4F4FA59E6E8A2C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 94E69B4EB3FCA610727DF2B9 /* test_suite_pem */;
			targetProxy = 4933A5031A85407BA8001D16 /* PBXContainerItemProxy */;
		};
		E492795F04904959A40875FA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 064DF0DB3E254292BE38068C /* PBXContainerItemProxy */;
		};
		E4A8621A9F184E53813507C1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 085480125F004D41924C4FB6 /* PBXContainerItemProxy */;
		};
		E591718D9E1D4E6CAE057957 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = EF3091E2DE164E39B818DCDB /* PBXContainerItemProxy */;
		};
		E613A44EB8884586932CBD5E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8B0B472CF5585674FACD1A0C /* test_suite_base64 */;
			targetProxy = A5362B342F3D47C68400C1E9 /* PBXContainerItemProxy */;
		};
		E654ACC8BC704EC4B8568C33 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = A6A0659468E744E0B437CD00 /* PBXContainerItemProxy */;
		};
		E66705E072E640749B139060 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3C0BB99816CC4933AB28C85E /* PBXContainerItemProxy */;
		};
		E6F289EA4878425EB7DEB375 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = C012ED936511407F85FDC930 /* PBXContainerItemProxy */;
		};
		E75BABC7BAD14D3A9B3A7972 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 1F614BC3D2DE44F9A6157526 /* PBXContainerItemProxy */;
		};
		E7623110970B4F119D870E7E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1CBC5D71370311E6C7800DF3 /* test_suite_ecjpake */;
			targetProxy = 0F81145C34A44E6287F16721 /* PBXContainerItemProxy */;
		};
		E8C299C529604A6D8D0852C8 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = CBF2642D24724FCB9AB80F98 /* PBXContainerItemProxy */;
		};
		E926663E56824F778C6C482F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 18EAF3FE4DA54E8DAFB11FFB /* PBXContainerItemProxy */;
		};
		E9CF3A29319A4BC1978CDD94 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3DE4D2AF564C4589BF4A2772 /* PBXContainerItemProxy */;
		};
		EB8C075B66D4450CB7F49E95 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6889B48630D80804EA40849D /* generic_sum */;
			targetProxy = 501DED7298524DEFBB30F6CD /* PBXContainerItemProxy */;
		};
		EB9CDBEB483C4FF09CCF1747 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 604A318615B34440A9A9F45E /* PBXContainerItemProxy */;
		};
		EBD33AAC8340402AAB867FE0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 6F6DA67F34C070F08125A803 /* ALL_BUILD */;
			targetProxy = D4DE779CBD53427C946D66A3 /* PBXContainerItemProxy */;
		};
		EC2278BFBC7C4E309CC4731D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 65FA02E82BA9433EA53563AE /* PBXContainerItemProxy */;
		};
		EC37E4A0C2BB4636B4DB3041 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = D309EF57DB5F4396B74F0A85 /* PBXContainerItemProxy */;
		};
		EC58B143C2E443AE88A99F6E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 9773D34B4F0743B083122DDF /* PBXContainerItemProxy */;
		};
		EC86CA28B90E4C13AC09679F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = D44BFFD102AD4E2AADFF5DA8 /* PBXContainerItemProxy */;
		};
		ED3DA0621CE34C319074B0E3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 39340EB0AC48421EAF5FB75F /* PBXContainerItemProxy */;
		};
		ED6B394A90B44D1581FFF448 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8E9A07A641F7D1A660DC9E51 /* test_suite_cipher.blowfish */;
			targetProxy = 11A7E633DC0A49D0945D09EE /* PBXContainerItemProxy */;
		};
		EDAFB5DEE93640438424D0AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = B7CB47007D284BEA8ABF1B10 /* PBXContainerItemProxy */;
		};
		EDBAC461493A4C4E9ACA8052 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 55D7E1295D26415EB473C311 /* PBXContainerItemProxy */;
		};
		EDD84FC8B668445B9013392D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 5CAC19EA692440EF9F9698F3 /* PBXContainerItemProxy */;
		};
		EE1BFC8F514E42AFA5A9F812 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 66E3D86C6DD246CCADD74561 /* PBXContainerItemProxy */;
		};
		EE2F2DB148464D738531F7D4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = ABE157EB029A40D8A57AAF6D /* PBXContainerItemProxy */;
		};
		EEB0DCDBDF6D4118AC04DA61 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 6122E46929014D3D907F819E /* PBXContainerItemProxy */;
		};
		EF48098740854C3DA6914D5D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FDF3AAC86D61F1ECA3FA3A2C /* ssl_client1 */;
			targetProxy = 2CDB845FFD984C41ADC5A4CE /* PBXContainerItemProxy */;
		};
		EF5385ECF35040BFAF81C03B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 17F0FCA5FFC741F68A7DD021 /* PBXContainerItemProxy */;
		};
		F01C8E4C6BCA4381B238A928 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 3066306EE06D0EB955CC8466 /* test_suite_x509parse */;
			targetProxy = 155D4E4808344FB88E5D8887 /* PBXContainerItemProxy */;
		};
		F0238DE9665D499EB95AEA05 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = ACD98A4209B7485F91725835 /* PBXContainerItemProxy */;
		};
		F13E13B71CCF43E0A184C789 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0474A075FD4E4BB8B107273D /* PBXContainerItemProxy */;
		};
		F1ED66F9672446E9B7F7410E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 21BAB247DC774825B69587EE /* PBXContainerItemProxy */;
		};
		F22F1EACAD444E29A8FADEB7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = E4B9ED60B7F2444197FF108D /* PBXContainerItemProxy */;
		};
		F2775037481D4E6FAD5E108C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 5020FC08C3A1B85FCB44C3CA /* ssl_server */;
			targetProxy = 29568A743BE943A9B6153F2C /* PBXContainerItemProxy */;
		};
		F3483E42BF33418791AC27CA /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7A90C5B9C87A1D86D5D93D45 /* pem2der */;
			targetProxy = D9C0A1DD72A04741B284A2CA /* PBXContainerItemProxy */;
		};
		F3846C7B591A4F24B4F72F0D /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = E2D2EB3968E7447E90AA947D /* PBXContainerItemProxy */;
		};
		F3AAF6ECFB4E48ED97E65E35 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FDD9F01D3BAD296EAE2FC004 /* test_suite_ecp */;
			targetProxy = E2DC6223798B461FB36FED24 /* PBXContainerItemProxy */;
		};
		F3E0F45AAACF41CCA6E24862 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 6E6657649773499EBC2B5109 /* PBXContainerItemProxy */;
		};
		F3E162A476AC464CB93185C0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 183FE6F7ADC64C3FB21BE31A /* PBXContainerItemProxy */;
		};
		F4E933B2ACFD414EBEA8B030 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = C87DA01CB783431781E2F192 /* PBXContainerItemProxy */;
		};
		F5632A95B7E44ED39FD33E77 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 47E1F789F1A86F5114C29A71 /* test_suite_asn1write */;
			targetProxy = F1A7DA66032A43C4A8B27896 /* PBXContainerItemProxy */;
		};
		F565ADEA149644E0A7899187 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = FC4BCA4214B11E34D81ED1EC /* test_suite_shax */;
			targetProxy = 8D9BDD0C5DB14D3CA706DE2C /* PBXContainerItemProxy */;
		};
		F66897C33CDF4C1181E8959F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 2A726A0A69334A3CAB6871C2 /* PBXContainerItemProxy */;
		};
		F6730FE403A846629A34ACB5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 1C580736E01D4E9FB58E6D35 /* PBXContainerItemProxy */;
		};
		F6993C52C5174F2188685ED3 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 436B901ABBF94A6CBFF6D3E9 /* PBXContainerItemProxy */;
		};
		F6F562B61697433BA6B9D400 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 755555C067464E0492E98A81 /* PBXContainerItemProxy */;
		};
		F7134261E7A6473D9D186494 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = FD7F279950CF45CCBC450587 /* PBXContainerItemProxy */;
		};
		F72EE72CCA98468BBA75DBFB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 1255DE88B0F04D4C9EF62328 /* PBXContainerItemProxy */;
		};
		F7370E92D76E433B9EA44325 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = C6BF35AD5D57476EAB386EFF /* PBXContainerItemProxy */;
		};
		F743D54B5523483D8866B6DF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 16672267CF3D40248D05F005 /* PBXContainerItemProxy */;
		};
		F749D2DC7D3F46419D075106 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 3DD01942AD544026A51DCEF5 /* PBXContainerItemProxy */;
		};
		F75406689AF14E61B3A7A9B4 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = 0E7DE15D59FD4BC1940081E7 /* PBXContainerItemProxy */;
		};
		F7A6C50B57484FF992790368 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 93545091D42C420EBDF81035 /* PBXContainerItemProxy */;
		};
		F7BA14A204C94C99ADCBF5FD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = A1DAC27BF688490AAB893FE8 /* PBXContainerItemProxy */;
		};
		F7C383DF0F044A1BBBBD0CB1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0A135A760C1E48E8B9711DD2 /* PBXContainerItemProxy */;
		};
		F7CB76472F874A3399704C6F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = A8179D3041ED491CA631A9B5 /* PBXContainerItemProxy */;
		};
		FA5BEC15EE824695AB44726C /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 21072FB096193A28C3836D0E /* test_suite_cipher.padding */;
			targetProxy = 1DD43A147153434A83D2A990 /* PBXContainerItemProxy */;
		};
		FA636AB16CF943D3B39D3C20 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0A5C3CB56F00412E95DA8757 /* PBXContainerItemProxy */;
		};
		FA77F3CC793E435AA4EA23AF /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 0702BD346ED2420F99E683D0 /* PBXContainerItemProxy */;
		};
		FA8263C85BA34913A0F2A6BD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = A3B27EF55CEDB0FDCEF93E5B /* crypt_and_hash */;
			targetProxy = 1FFF650B21164B779BD37DF4 /* PBXContainerItemProxy */;
		};
		FB33273927FC421EB067C9BB /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = DE467D2DE25F4F5BA6FC26A2 /* PBXContainerItemProxy */;
		};
		FC34F3FCD242462F852004E7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 81B94C2FBE5F41598A9F948B /* PBXContainerItemProxy */;
		};
		FD7A689A980C4E48A69FC6AD /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 86F2220F28AD40429CF2D15C /* PBXContainerItemProxy */;
		};
		FDFFE021C208407B98025CC7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = EA2D6EFB9EDC427585DD87C4 /* dtls_client */;
			targetProxy = EF116A653A764C46A7651FAF /* PBXContainerItemProxy */;
		};
		FE10E48797FE448EB6B7003F /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 0A89E722DBAC4969B5EBB9C9 /* PBXContainerItemProxy */;
		};
		FE44AA56194249849B1716F9 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 7759261DA31821E0140A5015 /* ZERO_CHECK */;
			targetProxy = F99028D562B049248E698765 /* PBXContainerItemProxy */;
		};
		FE7BBDAE6AF94DE59265B21B /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 4D2951FA8AD042708CDD3F60 /* PBXContainerItemProxy */;
		};
		FE893E63976C48E18A6C9E62 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = 6773DAB892F04650959FD1A6 /* PBXContainerItemProxy */;
		};
		FE8AF9CC9CD04B3980F8B480 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = D49CC937D53FDE55DDA2DBE8 /* mbedcrypto */;
			targetProxy = B7D878DC1F4A484CA78EF1EE /* PBXContainerItemProxy */;
		};
		FE93AC6C03C746F6AB33A230 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = 3F3BBD15624A4B3B9EE8D272 /* PBXContainerItemProxy */;
		};
		FE9477AF8E4B4443BCF72D78 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 55E0753594CD91FBA837EC69 /* mbedx509 */;
			targetProxy = AC5C9D12D0964FE3BDE50B65 /* PBXContainerItemProxy */;
		};
		FED225DB95914F16B87F6245 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = AB864DCBA574438B9690ABC0 /* PBXContainerItemProxy */;
		};
		FEE9BD5B8C08463ABE78CF48 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8FEB76854011AF773AF35D11 /* mbedtls */;
			targetProxy = 9B814B1E2CC4416B8F7C0A16 /* PBXContainerItemProxy */;
		};
		FF4E7474FB8544538F410960 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 1528D30F8C106F5845A3A178 /* gen_random_ctr_drbg */;
			targetProxy = 7570E49CD57247EA817E30C7 /* PBXContainerItemProxy */;
		};
		FF581451916441AFACA1F1D0 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = BFE762409D8FDA3EED808F63 /* test_suite_debug */;
			targetProxy = 1F4B90067F8F44BC952B2FC9 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		006BB9CE421A43ACA0393F19 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		035C8562FB97471AAEE25BE8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mini_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mini_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		03D7C4ABA3624A53ADB058AF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		051BFD7B2A434EE2BABAC04B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_xtea;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_xtea.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		0554BDC4E0EB416FA59A1F3D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = aescrypt2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/aescrypt2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		0568105BAAC444C3823B0208 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_req;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_req.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		05B965743B54431D928331A0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_req;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_req.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		0622EC3876D64EA19D87564E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.null;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.null.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		06750BBB281148E69C4C12E4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		069A021EC8E74F6DA92E8DBE /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkwrite;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkwrite.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		070DADF98DD746DE9BACD9AF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_genprime;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_genprime.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		074AA2F2240449A988D2D5BA /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_havege;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_havege.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		0789819E20C64E968F143A62 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		07A230A57E534785A4722471 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cmac;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cmac.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		07E836F699C34B7B822B7E7D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client1;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client1.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		08CFCA7E728448F0B1AD9BF3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ssl;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ssl.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		08FEDE5DC2844139B2D2B411 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		090CAF8B974546C7B907EC4F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_shax;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_shax.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		09BB9D9EFFF64231A2485653 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lib;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		0C45E0F8100B4A98B4542812 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		0D2E77D5E97D43B2B65222C0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		0DA56A01C5424F428E413A9B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = aescrypt2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/aescrypt2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		0DFEEF068A2C4E9FACC7D687 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_md;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_md.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		0F457C0DF05B457AAD952511 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_memory_buffer_alloc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_memory_buffer_alloc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		109A55B7685747D78A0181D4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		10CD014D60B1448BAA17F3C9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_error;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_error.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		117276EDE4B741E585B575C3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		11F14A7C80E642138F1B0F07 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedtls;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedtls.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		12A61B9E598A4DDEADCFB626 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pem;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pem.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		1316396815874F6297AF5D80 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkparse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkparse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1381C10F7C5D4EC5870A4584 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs5.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		13A730D0AC314F358A564622 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v21;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v21.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		155266E86ACE47C6AD129BCF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v15;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v15.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		16BBC98B9B2E457BBDD9178D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		170584818345451D86D89D6E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		178871B9C6134AED85F81345 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client1;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client1.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		185233707AAE48B4AF053620 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = strerror;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/strerror.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		1861674F14A847EFA58C7820 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1861A9802323490DB9BF9BCD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		187F0C4084E245A294B1B6D9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		18A74E331BBC44A68E701B65 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedcrypto;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedcrypto.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		197689C1BFA24024BE62D2FD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = strerror;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/strerror.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		19AAE3017DAC4C008470379A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1A21DB3C5F0B4106A13CDB66 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1A69B04D28E24D18807A6BF8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.gcm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.gcm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		1AE740DB12A1413E92559E6C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = udp_proxy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/udp_proxy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		1B03312655FD4DF58A3DC3CD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		1B2FEEAE355E464C948EC6F0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = benchmark;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/benchmark.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1B52CA3773F841A9A55F45AC /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		1B980394C7B54794BFEA7CBD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		1BD211F450D24B6985D38DB5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cfb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cfb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		1BE0552581C84DF9837ADD39 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_dhm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_dhm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		1BF3C66911434F2EA29E201D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		1C3CC9A8F6B542ED8134FD61 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		1CBA477C9F7C43238C729810 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1CEF3D19AA0244AE9351BE1E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_md;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_md.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1D50DB465D4545CD9AB35661 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_genprime;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_genprime.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1E281E89CFBF42888EE796F5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		1EB4794F0C8142C2A25FF51F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedcrypto;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedcrypto.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		1FF315E7325D4292847172A9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedx509;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedx509.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		20E2C4CB47E24541A487ADB7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.misc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.misc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		2191C65E692C45FD8DC85E19 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		21F991A51C1948609A900232 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mini_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mini_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		226B45FBC9CF4C56BA29A8D0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecjpake;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecjpake.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		22E8907904A34E4F92420D79 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		2429304B71DE45439226676D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mpi;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mpi.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		242FA935BB3F4D67884E5453 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v21;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v21.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		24E5358E6E8341E4AE6033E7 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		25A482055A40499484393858 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = selftest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/selftest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		263C5E1912EE4C449D3B9553 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		26743403299D41E4A971983C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_asn1write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_asn1write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		26ACBB166B6A4DAB936B4FF2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		284BD51FF0144C91A99882F8 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = memcheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		29279C482008439CA0ACA833 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = apidoc;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		295C79A06AD7454484D36D96 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mini_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mini_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		29A87C435B674628992F49B1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v15;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v15.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		2A807BB04CC64290B20560AD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cfb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cfb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2B4586ACE15D4DB8AC767EBD /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		2BCC6A18CCE248CF9FCACFF5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_req;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_req.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2BD30921467840E9947CDCCE /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lcov;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2C05EEAC34E7410FBF3070D3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2C0E1FC3743842888F75D0A8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_asn1write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_asn1write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		2D2E36BC000C40EA8AC5FE70 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v21;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v21.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		2D8F5E3A131E4310BD77F706 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pem2der;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pem2der.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		2E304B287500409DA4A6A6C3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		2E3D5B9372814F83A468EC15 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_fork_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_fork_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2E93D98DAB0E4BD9B94C576E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2EAE4260B748480E8AE2F781 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_dhm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_dhm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		2F04272D1180446A80E3931B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mdx;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mdx.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3091354EB8F845F3A15E4EA5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		30C897FD33754B8B953DB4D8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 14.4;
				SDKROOT = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				SYMROOT = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build";
			};
			name = Release;
		};
		3163173B14DD44A5B628542B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = generic_sum;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/generic_sum.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		317F0ACB01A847AF8F31CA0E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkparse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkparse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		31F9EE7D011041A1AC82403C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		31FAD23CB55B4EDA9D2E1F71 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_base64;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_base64.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		32C41DE3268544398E5BC893 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.aes;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.aes.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		339FCA2596FD4BB8B5E7C869 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3412AB45F7D248DA81ABCDEC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 14.4;
				SDKROOT = iphoneos;
				SYMROOT = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build";
			};
			name = Debug;
		};
		3423D60227914B9DA2813FAB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		3440EEB5FDFF401985DB551B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdh;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdh.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3536667A621947CA8C7AE9BD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		35627BECF61446B3B6788D63 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pk;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pk.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		358738EE573E4CCFAADB9A50 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		369ED986022B44BA805A2B7B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mini_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mini_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		3731C057D56540EDACF26176 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.pr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.pr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		37D4BEE7811748679FF071DE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = req_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/req_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		381A626E9AED4B549527EF5F /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedx509;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedx509.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		38D4E50F59E44E5CA53EDB43 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		39309E90F3074049B4378B51 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_genprime;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_genprime.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		39DBD90DF2974A0DA67EE01D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_xtea;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_xtea.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		3A26F8A5FA49466AAD6E3AA1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_shax;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_shax.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3A6CB892EEB84788BE488795 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.gcm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.gcm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3AC684429DDB4F18922DCB6A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_cert_test;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_cert_test.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3B5264251718477F84CAB73D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3C511325F068408ABB443883 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_dhm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_dhm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		3C6CEC5298A842F8B330EB70 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		3CB21668DE65445BB73F4F8B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_memory_buffer_alloc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_memory_buffer_alloc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3CF02C7C25AD407382C23C02 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdh;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdh.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		3DB7E92AFE1143F79B580142 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lib;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3E2007D92D5E410E8B5B493A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3E76B42FFB614ABD90647E5F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3F8E16FB12484C10B0C62A93 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		3FC990653F2B4D3EAF8BC4ED /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.pr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.pr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		3FE61FB44E394FF785699580 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = req_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/req_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		403C613138D14A19AB71FA01 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_fork_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_fork_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		4168BB3B872B4AEE806B84BE /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecp;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecp.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		418020445B2F46B9AA07F2C9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		41C1352FA6CC42E5BF2F01F6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_base64;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_base64.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		41C59F8A9A5543FA869A2B37 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app_writer;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app_writer.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		42481A813E1148DB91F96A78 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		427736560F7745188F11FB69 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkparse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkparse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		4357B0C8C45849D2999410EE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		4424CB6D6B194BC38F3BE156 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		45A1F0097B3047BC8D308C06 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.ecb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.ecb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		467E66B93FC349918F009497 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		46900604E9AC487CAC0B2456 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mpi;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mpi.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		46D6F4F7A3504AD6ACCF65A3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = memcheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		46D89546238F4642A8E10C1D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		46DB06A3F0D0482DAB6746D5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		4716626525D34603BBDBBEE7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		4720CE8C73C44F95845C1C2E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkwrite;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkwrite.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		4758D8C7BCA24E5783FCB36B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		482249D35E4D4807BB241229 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		483F60D670E34F7BA2D38C58 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		4846217F11944B2AB49F01E0 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crypt_and_hash;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crypt_and_hash.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		495BD37BB2FC41D99AD431CB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509parse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509parse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		498B68FFA1EA42A18433129A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_cert_test;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_cert_test.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		49D93894347141A4A9447A83 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		4BA969969AF04693956B4E18 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = covtest;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		4BBC10F561F94753A2BF416B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_genkey;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_genkey.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		4CA73D6D716D424C8E6C004C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cmac;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cmac.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		4DCE9800AF9A4C7282BE9B69 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedx509;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedx509.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		4DD5B2E549ED4284A4777284 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		4DF3EF5C54B6451DB9C99783 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cbc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cbc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		4E3D3824E9954E289C3F0854 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_debug;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_debug.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		5100CC815C17484ABE4428A5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		513CA1A820D64DB4A41A62C6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_shax;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_shax.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		51F297A0F27B4B9E983B2E36 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mpi_demo;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mpi_demo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		52C1A894EE4F4776B6530681 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		533BCA20D1914C7C8E8F5231 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		53A2EEB7FE3F4725831C042C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.ecb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.ecb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		547219E2944747D6B01F9DC9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedcrypto;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedcrypto.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		5475DE00B0BF492EACB32BD5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509parse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509parse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		561E3803E9D846BEB571538D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = req_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/req_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		57BCE6F284F14EF1BCB0ED9C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		57C8CD5CC7A94B5AA001F3D9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		57D4E41949574719BDC1FD85 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		589D7BCD193B47278AE7B8D2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crl_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crl_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		59458E515C6B469180D41C1F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		59954ACF369D4061AAB05330 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecjpake;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecjpake.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		5B4A2C2B75D1472E873AD1C6 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecp;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecp.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		5B6214D17DD9455E957A70EA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_genprime;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_genprime.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		5C88A6130C6F421D8A74F168 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		5E875BD24FD9453CB599EF78 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mpi;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mpi.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		5EEA152FEB1D4BA7865547DD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = covtest;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		5F68F96995784103AC99D885 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		6058453C701B42C78C10B6EF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.no_reseed;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.no_reseed.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		6083E58614FA4CA38588894A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		60927A18244E47C692E4D413 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		60DC5F40480D4496B135A740 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = selftest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/selftest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		60F63D8CD62046218554BD77 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cbc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cbc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		6115687B0286434CBC147845 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdh_curve25519;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdh_curve25519.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		62670EA3ED9246699DB09EDC /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		627BA4D75DDA41EC8239661D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6315F7F7D4B24D5581F1C7D2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.nopr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.nopr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		631B21FC544343A99E3C9CCB /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mdx;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mdx.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		63E7C0725BE049DFBDAB4AC0 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_havege;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_havege.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		6421B66D5F714AB6B3BA219D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		6426F3B034F2420EB1228B41 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		6432246C880B44EDA44C3B99 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		647B7575E46A479B9665AEC9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pk;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pk.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		64C72790BB7345C1815D1BAF /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crl_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crl_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6676FCEF23384EF4B81B8C0C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_error;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_error.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		67EFD57A110F48478CDBD08C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.ecb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.ecb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		67F20D3E210A47999CD9F7C3 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		69296EE4B1924163840FBAEC /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pem;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pem.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		698470DFC4F14680A7535162 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = selftest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/selftest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		69D0E90F09C04EBC9EB427FD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		69EDA800BE3F4A82A51AC0BE /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lcov;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		6B27A8196DB244179A482620 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6C6C8F2D194B48AEBE6140BC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		6C998A4BE1224564A23B2F7E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecp;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecp.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6D3096FFBC6040EC864513CD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6D455D69088640C5BA4D97E9 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		6D711B08641045AEBCD4BBD4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.padding;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.padding.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		6E5FD148CEDD4C199521C92F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		6E8AE67E73D944F690B73156 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		6FD81E63841540238A1ABCDD /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		7176B0BC857F43B7A24F31A1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lcov;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		73117F57443F4E87BEC3C30C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		735601D27B0D4126B10F1247 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		73FFAD66ECC64288AAE57351 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7436C5EAC2B341D4909D90A6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		74FC7DA06F304FD597EE845C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		75200FF2CA3B4A539BCA6F44 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_version;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_version.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		7580F1CC34DB4D1AB69B51C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = apidoc;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		75819A2F9C6B4D1D90DB3508 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.rest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.rest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		75BD98D77B344A238260C85E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = generic_sum;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/generic_sum.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		76AB7E1D6A4C4E4381A5139E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_dhm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_dhm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		772DF402A14D43A9B879C6E5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		77916D6AB95D4A9EA645A3C2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_timing;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_timing.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		77A8B98131834599A05E147B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		77F6CFABC6D14A71BAE06766 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_pthread_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_pthread_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7824804A97534FEE9EE4549F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cmac;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cmac.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		782B36E4290944F0808EDAD5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_havege;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_havege.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		785552966E5A439C802DB985 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedtls;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedtls.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		795A282D59F6494795290E1C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.misc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.misc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		796D6C4CC65B455FAD506EF5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		7AAD1AEEC33945CEAD4B7740 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_rsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_rsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		7BA2807947A74DF991F7B131 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hello;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/hello.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7BD82666EC394EFA93D2CD02 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_req;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_req.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		7C397066CADB4FECB0895C70 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v15;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v15.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		7CA979B73B2C4546B766B9EF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.pr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.pr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		7CB0E6CCFA8B40F49F277FB5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_key;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_key.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		7CD4E759C4CD406C841D18E3 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_error;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_error.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		7E0D6D31150A4326A5D0898A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7E50E09492114B1F8C33AC31 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = apidoc;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		7E8F6357498D4E35B799E968 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ssl;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ssl.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		7EAD78E05B804D3DB399A617 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		7EC9BF196D1A41849FCF4C1A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7F608EED8F0F4EA787AC0244 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = benchmark;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/benchmark.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		7F92671F08D749DD8C168D78 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mpi_demo;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mpi_demo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		820E0BE2FFC749D499C30C16 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdh;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdh.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		826F681B26AC4FC388B76EE1 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		83B20BF9435B4E5A99077A5E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_genkey;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_genkey.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		83DF0D7C9CF34FFFA43AEC60 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8430DB820D8442DABAE0E023 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = udp_proxy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/udp_proxy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		854B265CEC2742F1840A3C09 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		859B55B2BF3040E9BDEE6D69 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = udp_proxy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/udp_proxy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		860567E74FBB44579DD47405 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_pthread_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_pthread_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8624317281D349C48A369933 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = strerror;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/strerror.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		865CA73ADF7441188E9CA56C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_pthread_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_pthread_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		873FF7153E1E4013BA6DC824 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hello;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/hello.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		881E5711FF01421A8594859B /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		882C12CC96E04B38969BC85A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs5.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		887353290A8C4D85BBD4F216 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8896CECF3F4844A4823B8782 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509parse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509parse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		88FD8CC3A287420D9697C44D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdh_curve25519;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdh_curve25519.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		89201D67831E436A857EB23F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedx509;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedx509.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8A4C54B785584286965206C9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs5.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		8A9D687AB1A24798BAE9BA79 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_mail_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_mail_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8B22D1264A56481FBB35A092 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8B7DC63739B24D04B7990FF6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdh_curve25519;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdh_curve25519.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		8BD5EE25D15243929B6E1654 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		8C3561885B694B79837BE637 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecjpake;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecjpake.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		8CF2A9DD3B784DC2B579D4B7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crl_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crl_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		8DFC2BCA081140DCAE09C25E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v15;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v15.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8E09962C585D49A495FA135C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8E0B227F842045278F01233C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_rsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_rsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		8E8FDB531AA447D4A43C61A9 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = apidoc;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		8EE382AD50294CBB994DA26E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = aescrypt2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/aescrypt2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		8F480AB4EC5945F6871F6604 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = covtest;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		8FB27F71BEA848CCA220FB4E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.gcm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.gcm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		8FFAFE5C9F4C421F9A78108E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		9035F8232B9F4BC6948F633C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.gcm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.gcm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		90C7CA3F0C114340A64AEE0D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9149523518CE4D4F951BCDE2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		935A90F05D5F46AEA41B8880 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		939D5A8FDDD748B79A61D8A8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.no_reseed;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.no_reseed.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		93B7EF1FE00E44258ADAFEC4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_rsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_rsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		94D73077601B42D0BC935D18 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		95623BCC07A34400850B566A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		962828F16061468284AF1925 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		96D4283CE853445F80320A1C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.ecb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.ecb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		974F377E77594C40B68D1E1D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.padding;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.padding.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		982B009202694FCBAAB94403 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_xtea;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_xtea.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		9847245008724A83BA17B550 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_md;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_md.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		985FCCAF36A04E37AA0EED29 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_version;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_version.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		990C1BA2303D4762ADD6A4F4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		9A54E6D24B17456A84601FAB /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		9A5F364FB6D346629A54C4DA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9B76D403A49A41D9A3B71928 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.aes;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.aes.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		9B878FDA13F949759D2DC4C4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_timing;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_timing.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9B89BBE9EAF94E1E9F7B8BDC /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ssl;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ssl.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		9C06F12A277B4A559F2C97CF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_genkey;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_genkey.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9C306788A7944B0A9248D68F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_debug;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_debug.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		9D9DAF3574C84A8F912DB991 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.aes;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.aes.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9E67B9176A0043C586FD8CCA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		9E78D8160E684A859D3C7F4D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		9F9B04FED10249BFBF39F52B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_memory_buffer_alloc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_memory_buffer_alloc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		9FD6532198FB435A9D0373B0 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_havege;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_havege.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		A1C4B96395A84B36B3E466B5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A1D107E9E32D4BE793ACE0E4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_asn1write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_asn1write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A27993D1157C4C3A9885C5B5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		A2F4547805C4451D988F4DF3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pk;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pk.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A493F66BA9A14DA2BD21E195 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crypt_and_hash;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crypt_and_hash.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A4E03DEDDA3049ECB7C9ABF2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lib;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		A532D78FC39E445CB1C55180 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crypt_and_hash;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crypt_and_hash.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A602C706CB1146E5BCE3A15E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mdx;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mdx.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A6914C33634E4BE1BDF911B2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.rest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.rest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		A69E9B07BD1B4BAE98321E4D /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		A6A3951A47654B4387603FEB /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		A6C75649E89C4B5A9A96E023 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = udp_proxy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/udp_proxy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A6E8B81CF0EF4429A1FEFE88 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		A78FA550070B4CA3B7CF95A1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = memcheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A87FEDE8A65D44A9B9045EE9 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pk;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pk.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		A8925671CAAF4DBA925FC691 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		A8987468D4184E5DB27617FB /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_error;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_error.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A93C836587A649459FE3065C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.null;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.null.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		A9D23C3028FF4ADD8C97E357 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		AA3EA31646A041DFAAE07ADF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		AA616669F6164C0A8E2E22F4 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkwrite;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkwrite.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		AAD2C98C5DA647EC84CFC78E /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		AADD1BE4FBE0412E86AA02AD /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		ABD662137A1344F19EC617CC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		ABE64BB04F954520A327FDF2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.misc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.misc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		AC1EFB938969456FBD68EAC2 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pem;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pem.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		AC471AF497CF48C9908AADFC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mpi_demo;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mpi_demo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		AC6EAAFBC940497E839A3CB2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app_writer;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app_writer.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		AC811015AAD24C27AFF823F0 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		ACD1E588E3194FC0993D6342 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mpi;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mpi.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		ADCBF3BD615646709F94A0FB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.rest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.rest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		AE444B52E9BC44528E66431D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		AE46B98D41AD4E8B8BF0883E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		AE825F2142EC451A8863E3ED /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_mail_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_mail_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		AEA75B17829E4001BBFDA417 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app_writer;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app_writer.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		AEB1EA808BCF4CEC9E7BC6A5 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		AFD9DA12E56247799A71C42A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = strerror;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/strerror.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B005C9F89F014CC791708463 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		B12F2F2F9B7341D49580A936 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		B1DA1F08D1E8400CB1C4AD70 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B23199902D7C4A77AAADB6AF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hello;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/hello.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B258DD16509B4EF2A18A4ADF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B3650117412240C0ADFE23E4 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cbc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cbc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B4924B3852A34DAB923DDAA3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = selftest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/selftest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		B4B6028507204C3382193B03 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B4CF44B84C9B47279DDC2D74 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B4FF5A2F188246E896D684F6 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509parse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509parse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B51F7231D780440F9071F052 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = key_app_writer;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/key_app_writer.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B56094EED26B4BADB22A2789 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crypt_and_hash;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crypt_and_hash.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B59B67373C714B26AC8AFF20 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.nopr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.nopr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B61DD3E25F8E4E4488E90CE1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_des;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_des.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		B691DA6DCE2B40F6BD7E1794 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.misc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.misc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B817FA4E0A914322A14F5A07 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = hello;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/hello.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B83F70409E3F418B84B25C27 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B856E9C375BE48A883EC61B2 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.pr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.pr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B8AD65EF075B4FF99078D19F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pem;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pem.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B8F251086052497A9CC44F36 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_timing;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_timing.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B934D12EF9054684AA9C226D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = memcheck;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		B93843A7B15E483789F62862 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		B94BEE9CEB84411FA5FD0071 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.null;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.null.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		B9B92C3971854A47BF286EE4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		BA0CA1BD1447404BA8FC2F65 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		BA62F892847A4FA8AF48D564 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs1_v21;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs1_v21.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		BAD01CA5658640DB8CC6751A /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkparse;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkparse.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		BC17EE19F92149FCB2C710D1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		BC4DC7F2F9854A9D9CE98981 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 14.4;
				SDKROOT = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				SYMROOT = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build";
			};
			name = MinSizeRel;
		};
		BC9C2C4A4F9942B292063ED4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_blowfish;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_blowfish.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		BCFC1AF281CA40C0A2D465A8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_shax;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_shax.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		BDAF318A910641F4A2033921 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		BDC61CAFA28C477A86836AD6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		BDFD5612B79A4E719774D60F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		BDFEE0D9226C431CBC8E1C43 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ZERO_CHECK;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		BE14351050D64BC4A93D09E2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		BEAE8846369D4323BF591953 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C034762624AE4B508A53464B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_pthread_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_pthread_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		C13CFA679700402480E04D81 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdh_curve25519;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdh_curve25519.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		C17D746618BB4B01BB6FB0A3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		C1991F477E9B418584D82F8A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lib;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		C1F29D0155344CD1821CD0F1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		C2790B5DFFFE4FD9BD41138C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		C2EDD4ACD4E3409ABFE23F93 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_version;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_version.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C3214B80B2674B56BC62E173 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		C4B055A877DF415E96026657 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_cert_test;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_cert_test.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C4C18C561EBC4FCE86A19CEF /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedtls;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedtls.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		C4E306E3320347E395F3C983 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C5A3C88DE0B54E4CA9591C7F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pem2der;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pem2der.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		C60CB0D51991408984302F4E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_encrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_encrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		C78588DC8F1E481894DB9EB8 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client1;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client1.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		C7F581939B83461DBDAC25C2 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		C84D40AAD4AF4E1188D3A483 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		CA9B31B9BB4F4658857EB622 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes256_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes256_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		CAB9F45276A64958B48855D9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_client1;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_client1.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		CB1E7D4D983246F3A18E78E9 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = benchmark;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/benchmark.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		CC827CD358DC4204A826F2B7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_cert_test;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_cert_test.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		CCD5D8B22406422FB18C26D5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.no_reseed;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.no_reseed.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		CDFDAE56FD4743BE924902D6 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pem2der;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pem2der.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		CEDAB15A105648DD8B55B70F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		CFFE55B7E3C24A6DB18BCBD8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D09FEB5700AD467E8AA2211B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = generic_sum;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/generic_sum.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D1B0AF85BE84407C9821C2EA /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_base64;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_base64.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		D22438842C8D45ADA9EEE10E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/util/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pem2der;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pem2der.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D228ECD13DD141AFAB30716D /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = req_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/req_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		D2BEA60DA0D74FC8BC6EA695 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cbc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cbc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D2E28B63D26D46898F6A6709 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_timing;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_timing.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D3ABC9C41E024541AB989844 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.aes;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.aes.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D3FC7118146E448B852056D0 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ccm;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ccm.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		D4A8E2D652AD4564BEF19893 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ssl;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ssl.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D60E660A8BE84BCEAB10D58D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.rest;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.rest.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D63F774EB4BA453B911587CF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.nopr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.nopr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D697B0AA9249453D983E2F62 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_mail_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_mail_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		D72C7CA02ECC4996AB895DD8 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dh_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dh_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		D86A9B19B1054D099A97DEB4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_decrypt;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_decrypt.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D8E4BD7787EB40D7A6E5198C /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D8E95361E062407EAC8ABC4A /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedcrypto;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedcrypto.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		D901104DF71D424280118E27 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = lcov;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		D97E8EB01C304CE19BC49569 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_random_ctr_drbg;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_random_ctr_drbg.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		DA8249C3C07349BAB7633A6F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_mail_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_mail_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DABBC5BB22264363AC440672 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_key;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_key.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		DB142FE939BF462BA1C1D8CB /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_mdx;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_mdx.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		DB5B7104440643F4AA52E618 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_key;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_key.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DB905AF6EBC6448F8C64AC72 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		DB9E724A96BB4718860978F0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_debug;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_debug.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		DC350A101FF14543832CCD0C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_md;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_md.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DDC40996C3784AEA8027E479 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cfb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cfb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DDEE70C8625642A79E6585C0 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = arm64;
				MACOSX_DEPLOYMENT_TARGET = 14.4;
				SDKROOT = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				SYMROOT = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build";
			};
			name = RelWithDebInfo;
		};
		DE7D8BA1637C4EDAB97B2F88 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_fork_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_fork_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		DF3456FE80054FAB92A074C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		DF6DA5B4D15241338E21DCA6 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_version;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_version.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E0882EE7511549909DDB25FE /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ALL_BUILD;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E09D656F154A4134ABE04DA4 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_genkey;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_genkey.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E137465A355C46B59F7CA195 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E1A427FA8EBB47DD88371F3B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E53B98A914B64DF6A52F0824 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/random/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E54FF465BF5C410C892E6072 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		E56A460AFA3E4E89A79C7F0C /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		E73CE74FDFB44B908F95530F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		E7B5BC98ECEC4535A1E47418 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.padding;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.padding.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E80B147A251246FAB83E64B2 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E82C29F01C48427680215D88 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/hash/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = generic_sum;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/generic_sum.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		E84ADE8683B94DF7AAFB2C95 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.null;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.null.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E8FFF4ED4AAE45769212EF1F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/test/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = benchmark;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/benchmark.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		E98301B26D0C4E0792A93140 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		E98DE662735A455DBAFB4249 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		EA10AA1A520A4DC1914CAC86 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_rsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_rsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		EB2D489CCC3F497DBCA56257 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		EB4F6220676C4146B8F6A194 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_base64;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_base64.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		EC3126FC9D224A579E83B85B /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = RUN_TESTS;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		EC6BBDCB243D40699B0D2EF5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/aes/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = aescrypt2;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/aescrypt2.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		EE27E9F8744C4791923A8723 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = covtest;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		EE9C7940EEC449C08AA1B9BE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = pk_verify;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/pk_verify.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		EFC77D9A0A6F44B69D288EAF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_asn1write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_asn1write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F0087143DF3744958DAD9A2E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = " $(inherited)";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = install;
				SECTORDER_FLAGS = "";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F0ABC148430C47CC8DC769F1 /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_entropy;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_entropy.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		F0CCA92211914DD3BEC5D559 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.camellia;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.camellia.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F158BD1C7CAD40AA95941719 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = dtls_client;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/dtls_client.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F19AD5D9822649909FD76C19 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_fork_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_fork_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		F260B8A053BB48B9B6DF84A8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = cert_write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/cert_write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		F346C96294E04EFFA832F94B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/x509/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = crl_app;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/crl_app.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		F6170751BF1C413F955ECC57 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_memory_buffer_alloc;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_memory_buffer_alloc.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		F62E72ABBA6646228C6A955C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cmac;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cmac.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F6A0F24714FF4AF3A2D79C3C /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_sign;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_sign.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F6D8F49A557F4C0699ED56D9 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel";
				EXECUTABLE_PREFIX = lib;
				EXECUTABLE_SUFFIX = .a;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				LIBRARY_STYLE = STATIC;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wmissing-declarations",
					"-Wmissing-prototypes",
					"-Wdocumentation",
					"-Wno-documentation-deprecated-sync",
					"-Wunreachable-code",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LIBTOOLFLAGS = "";
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mbedtls;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mbedtls.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F71863201CB848A0BBC589B9 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.nopr;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.nopr.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F7D44934A1FC4A0E96AED15F /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_debug;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_debug.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F851743DE728463CB167EAA8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdh;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdh.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F880622342D9443BBDF5B2BE /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkcs5;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkcs5.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F8DB146D334144B2A0199BA5 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = gen_key;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/gen_key.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		F8EA30E2E3B14CBEA047DCDA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecdsa;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecdsa.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		F9CA0971D1D145E7AA34EE5A /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		FA7CE0C4D761453B985D562C /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_arc4;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_arc4.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		FB131CE3C2AF4BF796F9D9CF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_pkwrite;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_pkwrite.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FB2919723654418FBD7348C3 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_cipher.padding;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_cipher.padding.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FB8B9D56448C45238B8FF049 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/ssl/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = ssl_server;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/ssl_server.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FC68DABBD22F4FEA8F738052 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes128_de;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes128_de.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FC7D070C70F34A31901F16EC /* RelWithDebInfo */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/RelWithDebInfo";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/RelWithDebInfo/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecjpake;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecjpake.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = RelWithDebInfo;
		};
		FCF165955A3D47C2AE461346 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_xtea;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_xtea.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FCFCD984DF134BA19A9C95BC /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_ecp;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_ecp.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		FD13A21F7B954F8D9F88223A /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = mpi_demo;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/mpi_demo.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		FD82B6726EA045D484EAF939 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_hmac_drbg.no_reseed;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_hmac_drbg.no_reseed.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		FDE3714F6D4D432E8ECD615E /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_aes.cfb;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_aes.cfb.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
		FEC967F5E5854CED942B71BE /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Release";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 2;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Release/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_x509write;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_x509write.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Release;
		};
		FF27A6728A584F32B1BBA813 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests/Debug";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/tests",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-Wno-unused-function",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/Debug/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = test_suite_gcm.aes192_en;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/test_suite_gcm.aes192_en.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = Debug;
		};
		FFB42F9FF5E24FBF9C51BD72 /* MinSizeRel */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = arm64;
				COMBINE_HIDPI_IMAGES = YES;
				CONFIGURATION_BUILD_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/programs/pkey/MinSizeRel";
				EXECUTABLE_PREFIX = "";
				EXECUTABLE_SUFFIX = "";
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				HEADER_SEARCH_PATHS = (
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/include",
					"$(inherited)",
				);
				INSTALL_PATH = "";
				ONLY_ACTIVE_ARCH = NO;
				OTHER_CFLAGS = (
					"-Wall",
					"-Wextra",
					"-W",
					"-Wdeclaration-after-statement",
					"-Wwrite-strings",
					"-Wpointer-arith",
					"-Wimplicit-fallthrough",
					"-Wshadow",
					"-DNDEBUG",
					"$(inherited)",
				);
				OTHER_LDFLAGS = (
					"-Wl,-search_paths_first",
					"-Wl,-headerpad_max_install_names",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedtls.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedx509.a",
					"/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/library/MinSizeRel/libmbedcrypto.a",
					"$(inherited)",
				);
				OTHER_REZFLAGS = "";
				PRODUCT_NAME = rsa_verify_pss;
				SECTORDER_FLAGS = "";
				TARGET_TEMP_DIR = "/Users/sam/dev/github/shadowsocks-libev/mbedtls-2.6.0/build/rsa_verify_pss.build/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)";
				USE_HEADERMAP = NO;
				WARNING_CFLAGS = "$(inherited)";
			};
			name = MinSizeRel;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		03BB42AD5C964C1CAAEB70EB /* Build configuration list for PBXNativeTarget "test_suite_base64" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				41C1352FA6CC42E5BF2F01F6 /* Debug */,
				EB4F6220676C4146B8F6A194 /* Release */,
				31FAD23CB55B4EDA9D2E1F71 /* MinSizeRel */,
				D1B0AF85BE84407C9821C2EA /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		050D144DF90C427489C0428F /* Build configuration list for PBXNativeTarget "pk_sign" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B4B6028507204C3382193B03 /* Debug */,
				4758D8C7BCA24E5783FCB36B /* Release */,
				3E76B42FFB614ABD90647E5F /* MinSizeRel */,
				08FEDE5DC2844139B2D2B411 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		06A673F188FC49D48CA874CA /* Build configuration list for PBXAggregateTarget "covtest" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4BA969969AF04693956B4E18 /* Debug */,
				8F480AB4EC5945F6871F6604 /* Release */,
				EE27E9F8744C4791923A8723 /* MinSizeRel */,
				5EEA152FEB1D4BA7865547DD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		07141164C54C453FB07CDF95 /* Build configuration list for PBXNativeTarget "ecdsa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DF3456FE80054FAB92A074C7 /* Debug */,
				B12F2F2F9B7341D49580A936 /* Release */,
				E98301B26D0C4E0792A93140 /* MinSizeRel */,
				482249D35E4D4807BB241229 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0B931622CEC848CDB81B0E5D /* Build configuration list for PBXNativeTarget "test_suite_ecjpake" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				226B45FBC9CF4C56BA29A8D0 /* Debug */,
				8C3561885B694B79837BE637 /* Release */,
				59954ACF369D4061AAB05330 /* MinSizeRel */,
				FC7D070C70F34A31901F16EC /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		0F2B00DB256243818C95CA0D /* Build configuration list for PBXNativeTarget "test_suite_gcm.camellia" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B9B92C3971854A47BF286EE4 /* Debug */,
				E54FF465BF5C410C892E6072 /* Release */,
				AADD1BE4FBE0412E86AA02AD /* MinSizeRel */,
				8B22D1264A56481FBB35A092 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		11B84CECF5224D329522658E /* Build configuration list for PBXNativeTarget "test_suite_pkcs1_v21" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2D2E36BC000C40EA8AC5FE70 /* Debug */,
				242FA935BB3F4D67884E5453 /* Release */,
				BA62F892847A4FA8AF48D564 /* MinSizeRel */,
				13A730D0AC314F358A564622 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		13DB4DC35C444E93BBA9FDA2 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes256_de" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				5100CC815C17484ABE4428A5 /* Debug */,
				358738EE573E4CCFAADB9A50 /* Release */,
				CA9B31B9BB4F4658857EB622 /* MinSizeRel */,
				6D455D69088640C5BA4D97E9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		14851D716ED640978F6056D7 /* Build configuration list for PBXNativeTarget "generic_sum" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D09FEB5700AD467E8AA2211B /* Debug */,
				3163173B14DD44A5B628542B /* Release */,
				75BD98D77B344A238260C85E /* MinSizeRel */,
				E82C29F01C48427680215D88 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		15189C8FBC3E4297B620467D /* Build configuration list for PBXNativeTarget "ssl_pthread_server" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C034762624AE4B508A53464B /* Debug */,
				77F6CFABC6D14A71BAE06766 /* Release */,
				860567E74FBB44579DD47405 /* MinSizeRel */,
				865CA73ADF7441188E9CA56C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		16DC8B303AD0435C84055E07 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes256_en" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8BD5EE25D15243929B6E1654 /* Debug */,
				AE46B98D41AD4E8B8BF0883E /* Release */,
				9A54E6D24B17456A84601FAB /* MinSizeRel */,
				187F0C4084E245A294B1B6D9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		17065A2F4D0E41FBBF13AACE /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.nopr" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F71863201CB848A0BBC589B9 /* Debug */,
				D63F774EB4BA453B911587CF /* Release */,
				B59B67373C714B26AC8AFF20 /* MinSizeRel */,
				6315F7F7D4B24D5581F1C7D2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1A36803E25AE44BB90315EC4 /* Build configuration list for PBXNativeTarget "test_suite_cipher.blowfish" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6E5FD148CEDD4C199521C92F /* Debug */,
				3423D60227914B9DA2813FAB /* Release */,
				7436C5EAC2B341D4909D90A6 /* MinSizeRel */,
				3536667A621947CA8C7AE9BD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1F2448AB054A41B1A7FA31C1 /* Build configuration list for PBXNativeTarget "test_suite_memory_buffer_alloc" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9F9B04FED10249BFBF39F52B /* Debug */,
				F6170751BF1C413F955ECC57 /* Release */,
				3CB21668DE65445BB73F4F8B /* MinSizeRel */,
				0F457C0DF05B457AAD952511 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		1F8EFA42992E4E6A9466193D /* Build configuration list for PBXNativeTarget "test_suite_ccm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1861A9802323490DB9BF9BCD /* Debug */,
				3091354EB8F845F3A15E4EA5 /* Release */,
				D3FC7118146E448B852056D0 /* MinSizeRel */,
				1861674F14A847EFA58C7820 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		223D332BEA834E7C9FAA91EA /* Build configuration list for PBXNativeTarget "test_suite_cipher.arc4" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				95623BCC07A34400850B566A /* Debug */,
				74FC7DA06F304FD597EE845C /* Release */,
				A69E9B07BD1B4BAE98321E4D /* MinSizeRel */,
				C1F29D0155344CD1821CD0F1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		234B449148C54D868230CF7B /* Build configuration list for PBXNativeTarget "req_app" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				37D4BEE7811748679FF071DE /* Debug */,
				3FE61FB44E394FF785699580 /* Release */,
				561E3803E9D846BEB571538D /* MinSizeRel */,
				D228ECD13DD141AFAB30716D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		26878B778DC248EC9E95CFE2 /* Build configuration list for PBXNativeTarget "test_suite_pem" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8AD65EF075B4FF99078D19F /* Debug */,
				AC1EFB938969456FBD68EAC2 /* Release */,
				12A61B9E598A4DDEADCFB626 /* MinSizeRel */,
				69296EE4B1924163840FBAEC /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		29EDAA7CECF34FA59B2F1ECF /* Build configuration list for PBXNativeTarget "test_suite_error" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6676FCEF23384EF4B81B8C0C /* Debug */,
				A8987468D4184E5DB27617FB /* Release */,
				7CD4E759C4CD406C841D18E3 /* MinSizeRel */,
				10CD014D60B1448BAA17F3C9 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2AFDC1273B6B4D158636598A /* Build configuration list for PBXNativeTarget "test_suite_aes.ecb" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				53A2EEB7FE3F4725831C042C /* Debug */,
				67EFD57A110F48478CDBD08C /* Release */,
				45A1F0097B3047BC8D308C06 /* MinSizeRel */,
				96D4283CE853445F80320A1C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2C4A476D44C44091B00C287C /* Build configuration list for PBXNativeTarget "test_suite_ecdsa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F8EA30E2E3B14CBEA047DCDA /* Debug */,
				0D2E77D5E97D43B2B65222C0 /* Release */,
				C3214B80B2674B56BC62E173 /* MinSizeRel */,
				3F8E16FB12484C10B0C62A93 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2D07747A7FBA43D98D765F5B /* Build configuration list for PBXNativeTarget "rsa_verify_pss" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2B4586ACE15D4DB8AC767EBD /* Debug */,
				0C45E0F8100B4A98B4542812 /* Release */,
				FFB42F9FF5E24FBF9C51BD72 /* MinSizeRel */,
				5C88A6130C6F421D8A74F168 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2DBB9623CCAC43DE94E49942 /* Build configuration list for PBXNativeTarget "pem2der" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C5A3C88DE0B54E4CA9591C7F /* Debug */,
				D22438842C8D45ADA9EEE10E /* Release */,
				2D8F5E3A131E4310BD77F706 /* MinSizeRel */,
				CDFDAE56FD4743BE924902D6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2EF70F853FDE45EEBB587DE3 /* Build configuration list for PBXNativeTarget "ssl_fork_server" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				403C613138D14A19AB71FA01 /* Debug */,
				F19AD5D9822649909FD76C19 /* Release */,
				DE7D8BA1637C4EDAB97B2F88 /* MinSizeRel */,
				2E3D5B9372814F83A468EC15 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2F06329BFA044BB3BE52B1F6 /* Build configuration list for PBXNativeTarget "ssl_cert_test" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CC827CD358DC4204A826F2B7 /* Debug */,
				C4B055A877DF415E96026657 /* Release */,
				498B68FFA1EA42A18433129A /* MinSizeRel */,
				3AC684429DDB4F18922DCB6A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2F5E0F1CB637490BBDC35B20 /* Build configuration list for PBXNativeTarget "rsa_encrypt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C17D746618BB4B01BB6FB0A3 /* Debug */,
				C60CB0D51991408984302F4E /* Release */,
				46DB06A3F0D0482DAB6746D5 /* MinSizeRel */,
				2E93D98DAB0E4BD9B94C576E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		2FE7E4657B704FDAA07F3C02 /* Build configuration list for PBXAggregateTarget "lib" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A4E03DEDDA3049ECB7C9ABF2 /* Debug */,
				09BB9D9EFFF64231A2485653 /* Release */,
				C1991F477E9B418584D82F8A /* MinSizeRel */,
				3DB7E92AFE1143F79B580142 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		315CE599766A4AA791EC55B0 /* Build configuration list for PBXNativeTarget "mpi_demo" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AC471AF497CF48C9908AADFC /* Debug */,
				7F92671F08D749DD8C168D78 /* Release */,
				FD13A21F7B954F8D9F88223A /* MinSizeRel */,
				51F297A0F27B4B9E983B2E36 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		31D0929F40F54F52B6D4C1B8 /* Build configuration list for PBXNativeTarget "test_suite_debug" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9C306788A7944B0A9248D68F /* Debug */,
				4E3D3824E9954E289C3F0854 /* Release */,
				F7D44934A1FC4A0E96AED15F /* MinSizeRel */,
				DB9E724A96BB4718860978F0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		343CAB59C7D7424AA6975F05 /* Build configuration list for PBXNativeTarget "cert_app" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E1A427FA8EBB47DD88371F3B /* Debug */,
				1B52CA3773F841A9A55F45AC /* Release */,
				A6E8B81CF0EF4429A1FEFE88 /* MinSizeRel */,
				3B5264251718477F84CAB73D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		392C9E797E554B168858113E /* Build configuration list for PBXNativeTarget "dtls_server" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				94D73077601B42D0BC935D18 /* Debug */,
				BEAE8846369D4323BF591953 /* Release */,
				16BBC98B9B2E457BBDD9178D /* MinSizeRel */,
				3E2007D92D5E410E8B5B493A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3A18317715934023B604268F /* Build configuration list for PBXNativeTarget "mbedcrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D8E95361E062407EAC8ABC4A /* Debug */,
				547219E2944747D6B01F9DC9 /* Release */,
				1EB4794F0C8142C2A25FF51F /* MinSizeRel */,
				18A74E331BBC44A68E701B65 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3A20BF57640E45A29F380D98 /* Build configuration list for PBXNativeTarget "rsa_genkey" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E09D656F154A4134ABE04DA4 /* Debug */,
				9C06F12A277B4A559F2C97CF /* Release */,
				4BBC10F561F94753A2BF416B /* MinSizeRel */,
				83B20BF9435B4E5A99077A5E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3B1AB4CD7A7E4AC7BD081FE7 /* Build configuration list for PBXNativeTarget "test_suite_xtea" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				39DBD90DF2974A0DA67EE01D /* Debug */,
				FCF165955A3D47C2AE461346 /* Release */,
				982B009202694FCBAAB94403 /* MinSizeRel */,
				051BFD7B2A434EE2BABAC04B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3B36BD9E4AC742EE82A5FF05 /* Build configuration list for PBXNativeTarget "test_suite_camellia" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A27993D1157C4C3A9885C5B5 /* Debug */,
				4716626525D34603BBDBBEE7 /* Release */,
				263C5E1912EE4C449D3B9553 /* MinSizeRel */,
				E56A460AFA3E4E89A79C7F0C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		3FECBB9B2D5A499AAF4F7B93 /* Build configuration list for PBXNativeTarget "gen_key" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DB5B7104440643F4AA52E618 /* Debug */,
				DABBC5BB22264363AC440672 /* Release */,
				F8DB146D334144B2A0199BA5 /* MinSizeRel */,
				7CB0E6CCFA8B40F49F277FB5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4052BA4F192F4F74B6291F20 /* Build configuration list for PBXNativeTarget "strerror" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8624317281D349C48A369933 /* Debug */,
				185233707AAE48B4AF053620 /* Release */,
				AFD9DA12E56247799A71C42A /* MinSizeRel */,
				197689C1BFA24024BE62D2FD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		41F1979790054BC0911163F9 /* Build configuration list for PBXNativeTarget "ssl_server2" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				60927A18244E47C692E4D413 /* Debug */,
				7E0D6D31150A4326A5D0898A /* Release */,
				EB2D489CCC3F497DBCA56257 /* MinSizeRel */,
				772DF402A14D43A9B879C6E5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		45FD6EA2BADC42D58FA0A5DC /* Build configuration list for PBXNativeTarget "mbedtls" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				11F14A7C80E642138F1B0F07 /* Debug */,
				785552966E5A439C802DB985 /* Release */,
				F6D8F49A557F4C0699ED56D9 /* MinSizeRel */,
				C4C18C561EBC4FCE86A19CEF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		48788F9946814318A18FC5E4 /* Build configuration list for PBXNativeTarget "cert_req" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0568105BAAC444C3823B0208 /* Debug */,
				05B965743B54431D928331A0 /* Release */,
				7BD82666EC394EFA93D2CD02 /* MinSizeRel */,
				2BCC6A18CCE248CF9FCACFF5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4AFE114C1ACF4FE38EC21670 /* Build configuration list for PBXNativeTarget "mini_client" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				295C79A06AD7454484D36D96 /* Debug */,
				369ED986022B44BA805A2B7B /* Release */,
				21F991A51C1948609A900232 /* MinSizeRel */,
				035C8562FB97471AAEE25BE8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4C27D27DB1A547DE81F7F89C /* Build configuration list for PBXNativeTarget "pk_decrypt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				935A90F05D5F46AEA41B8880 /* Debug */,
				9A5F364FB6D346629A54C4DA /* Release */,
				1C3CC9A8F6B542ED8134FD61 /* MinSizeRel */,
				5F68F96995784103AC99D885 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4C6CE9BBA5D04404A466BF2C /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.misc" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B691DA6DCE2B40F6BD7E1794 /* Debug */,
				ABE64BB04F954520A327FDF2 /* Release */,
				20E2C4CB47E24541A487ADB7 /* MinSizeRel */,
				795A282D59F6494795290E1C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4C8AA7F7CF6D4F64A03471D5 /* Build configuration list for PBXNativeTarget "test_suite_asn1write" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				EFC77D9A0A6F44B69D288EAF /* Debug */,
				2C0E1FC3743842888F75D0A8 /* Release */,
				26743403299D41E4A971983C /* MinSizeRel */,
				A1D107E9E32D4BE793ACE0E4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4DA0FE8D9411464AAC887717 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3C6CEC5298A842F8B330EB70 /* Debug */,
				57BCE6F284F14EF1BCB0ED9C /* Release */,
				E0882EE7511549909DDB25FE /* MinSizeRel */,
				881E5711FF01421A8594859B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		4F5D4C0CC0F24E798243B669 /* Build configuration list for PBXNativeTarget "test_suite_cipher.null" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E84ADE8683B94DF7AAFB2C95 /* Debug */,
				A93C836587A649459FE3065C /* Release */,
				0622EC3876D64EA19D87564E /* MinSizeRel */,
				B94BEE9CEB84411FA5FD0071 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5240DA097A5D4AEAAEE798E6 /* Build configuration list for PBXNativeTarget "test_suite_x509parse" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B4FF5A2F188246E896D684F6 /* Debug */,
				5475DE00B0BF492EACB32BD5 /* Release */,
				495BD37BB2FC41D99AD431CB /* MinSizeRel */,
				8896CECF3F4844A4823B8782 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5716F40875304ACDA915437B /* Build configuration list for PBXNativeTarget "udp_proxy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8430DB820D8442DABAE0E023 /* Debug */,
				859B55B2BF3040E9BDEE6D69 /* Release */,
				1AE740DB12A1413E92559E6C /* MinSizeRel */,
				A6C75649E89C4B5A9A96E023 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		57CAFAFFF1A243E89C1404E5 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes128_de" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1BF3C66911434F2EA29E201D /* Debug */,
				FC68DABBD22F4FEA8F738052 /* Release */,
				69D0E90F09C04EBC9EB427FD /* MinSizeRel */,
				B4CF44B84C9B47279DDC2D74 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5A71A20FBD3943FAB1934AA2 /* Build configuration list for PBXNativeTarget "test_suite_pkparse" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				427736560F7745188F11FB69 /* Debug */,
				BAD01CA5658640DB8CC6751A /* Release */,
				317F0ACB01A847AF8F31CA0E /* MinSizeRel */,
				1316396815874F6297AF5D80 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		5F31CDFAB1464663AA5C6D52 /* Build configuration list for PBXNativeTarget "test_suite_pk" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				647B7575E46A479B9665AEC9 /* Debug */,
				A2F4547805C4451D988F4DF3 /* Release */,
				A87FEDE8A65D44A9B9045EE9 /* MinSizeRel */,
				35627BECF61446B3B6788D63 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6231EDB4FC19412ABF8501D7 /* Build configuration list for PBXNativeTarget "hello" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B817FA4E0A914322A14F5A07 /* Debug */,
				7BA2807947A74DF991F7B131 /* Release */,
				873FF7153E1E4013BA6DC824 /* MinSizeRel */,
				B23199902D7C4A77AAADB6AF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		63F0289AB74C4A1583167239 /* Build configuration list for PBXAggregateTarget "memcheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B934D12EF9054684AA9C226D /* Debug */,
				46D6F4F7A3504AD6ACCF65A3 /* Release */,
				284BD51FF0144C91A99882F8 /* MinSizeRel */,
				A78FA550070B4CA3B7CF95A1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		649EFF6E6BE84B7F8654E8CE /* Build configuration list for PBXNativeTarget "test_suite_entropy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A6A3951A47654B4387603FEB /* Debug */,
				73FFAD66ECC64288AAE57351 /* Release */,
				962828F16061468284AF1925 /* MinSizeRel */,
				F0ABC148430C47CC8DC769F1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		64D4BEC35EC74DEFA5DF9F5C /* Build configuration list for PBXNativeTarget "test_suite_ecp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FCFCD984DF134BA19A9C95BC /* Debug */,
				5B4A2C2B75D1472E873AD1C6 /* Release */,
				6C998A4BE1224564A23B2F7E /* MinSizeRel */,
				4168BB3B872B4AEE806B84BE /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		676F918F558C4472B0C8E2D3 /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BDFEE0D9226C431CBC8E1C43 /* Debug */,
				73117F57443F4E87BEC3C30C /* Release */,
				6E8AE67E73D944F690B73156 /* MinSizeRel */,
				339FCA2596FD4BB8B5E7C869 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6BC0B66A91D74DD9A947C171 /* Build configuration list for PBXNativeTarget "key_app" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0789819E20C64E968F143A62 /* Debug */,
				6426F3B034F2420EB1228B41 /* Release */,
				46D89546238F4642A8E10C1D /* MinSizeRel */,
				AAD2C98C5DA647EC84CFC78E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6C70D02FA51C4B6A8083004B /* Build configuration list for PBXNativeTarget "key_app_writer" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AC6EAAFBC940497E839A3CB2 /* Debug */,
				41C59F8A9A5543FA869A2B37 /* Release */,
				B51F7231D780440F9071F052 /* MinSizeRel */,
				AEA75B17829E4001BBFDA417 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6E327ACF5FF44946AA3B2EC2 /* Build configuration list for PBXNativeTarget "dh_genprime" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				070DADF98DD746DE9BACD9AF /* Debug */,
				5B6214D17DD9455E957A70EA /* Release */,
				39309E90F3074049B4378B51 /* MinSizeRel */,
				1D50DB465D4545CD9AB35661 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		6FC57405907944C6897AFEF3 /* Build configuration list for PBXNativeTarget "gen_random_havege" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9FD6532198FB435A9D0373B0 /* Debug */,
				63E7C0725BE049DFBDAB4AC0 /* Release */,
				074AA2F2240449A988D2D5BA /* MinSizeRel */,
				782B36E4290944F0808EDAD5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		70720617AC994FDB9048EC39 /* Build configuration list for PBXNativeTarget "test_suite_cipher.padding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E7B5BC98ECEC4535A1E47418 /* Debug */,
				FB2919723654418FBD7348C3 /* Release */,
				974F377E77594C40B68D1E1D /* MinSizeRel */,
				6D711B08641045AEBCD4BBD4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7227D101626A41FF9AE0C64A /* Build configuration list for PBXNativeTarget "rsa_sign_pss" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CEDAB15A105648DD8B55B70F /* Debug */,
				90C7CA3F0C114340A64AEE0D /* Release */,
				C7F581939B83461DBDAC25C2 /* MinSizeRel */,
				4424CB6D6B194BC38F3BE156 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		793C5FE8A4B94E439830759F /* Build configuration list for PBXNativeTarget "test_suite_version" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				985FCCAF36A04E37AA0EED29 /* Debug */,
				C2EDD4ACD4E3409ABFE23F93 /* Release */,
				DF6DA5B4D15241338E21DCA6 /* MinSizeRel */,
				75200FF2CA3B4A539BCA6F44 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		79D7F83B026A469EBB18D1A0 /* Build configuration list for PBXNativeTarget "gen_random_ctr_drbg" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				57C8CD5CC7A94B5AA001F3D9 /* Debug */,
				D97E8EB01C304CE19BC49569 /* Release */,
				B93843A7B15E483789F62862 /* MinSizeRel */,
				77A8B98131834599A05E147B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7A6C70B9B0F74C4896D878C2 /* Build configuration list for PBXAggregateTarget "RUN_TESTS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ABD662137A1344F19EC617CC /* Debug */,
				D8E4BD7787EB40D7A6E5198C /* Release */,
				EC3126FC9D224A579E83B85B /* MinSizeRel */,
				7EAD78E05B804D3DB399A617 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7AAE787F9E484860AD7514E0 /* Build configuration list for PBXNativeTarget "test_suite_shax" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BCFC1AF281CA40C0A2D465A8 /* Debug */,
				090CAF8B974546C7B907EC4F /* Release */,
				3A26F8A5FA49466AAD6E3AA1 /* MinSizeRel */,
				513CA1A820D64DB4A41A62C6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7AC29435A72E44ECB13834BB /* Build configuration list for PBXNativeTarget "ecdh_curve25519" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8B7DC63739B24D04B7990FF6 /* Debug */,
				88FD8CC3A287420D9697C44D /* Release */,
				6115687B0286434CBC147845 /* MinSizeRel */,
				C13CFA679700402480E04D81 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7DD3D9DB7DA84A9AA423BBD2 /* Build configuration list for PBXNativeTarget "dh_server" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				AA3EA31646A041DFAAE07ADF /* Debug */,
				7EC9BF196D1A41849FCF4C1A /* Release */,
				6D3096FFBC6040EC864513CD /* MinSizeRel */,
				2C05EEAC34E7410FBF3070D3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		7E2DC764848A45A388EE07DA /* Build configuration list for PBXNativeTarget "test_suite_des" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				170584818345451D86D89D6E /* Debug */,
				B61DD3E25F8E4E4488E90CE1 /* Release */,
				83DF0D7C9CF34FFFA43AEC60 /* MinSizeRel */,
				A8925671CAAF4DBA925FC691 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		80977E027AC040B68DF75B15 /* Build configuration list for PBXNativeTarget "ssl_server" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				06750BBB281148E69C4C12E4 /* Debug */,
				FB8B9D56448C45238B8FF049 /* Release */,
				2E304B287500409DA4A6A6C3 /* MinSizeRel */,
				F9CA0971D1D145E7AA34EE5A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		82F02C749087480E9DB7B314 /* Build configuration list for PBXNativeTarget "rsa_decrypt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D86A9B19B1054D099A97DEB4 /* Debug */,
				533BCA20D1914C7C8E8F5231 /* Release */,
				42481A813E1148DB91F96A78 /* MinSizeRel */,
				1E281E89CFBF42888EE796F5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		82FBA2A950024181B52DCEA3 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes192_de" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6C6C8F2D194B48AEBE6140BC /* Debug */,
				E73CE74FDFB44B908F95530F /* Release */,
				6B27A8196DB244179A482620 /* MinSizeRel */,
				1A21DB3C5F0B4106A13CDB66 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		83304D1605C046DC80779268 /* Build configuration list for PBXNativeTarget "test_suite_timing" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D2E28B63D26D46898F6A6709 /* Debug */,
				9B878FDA13F949759D2DC4C4 /* Release */,
				B8F251086052497A9CC44F36 /* MinSizeRel */,
				77916D6AB95D4A9EA645A3C2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8463547A255B426B94BA0823 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes192_en" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FF27A6728A584F32B1BBA813 /* Debug */,
				418020445B2F46B9AA07F2C9 /* Release */,
				26ACBB166B6A4DAB936B4FF2 /* MinSizeRel */,
				6FD81E63841540238A1ABCDD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		861336D15A1545CD8285442F /* Build configuration list for PBXNativeTarget "ssl_client1" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CAB9F45276A64958B48855D9 /* Debug */,
				178871B9C6134AED85F81345 /* Release */,
				07E836F699C34B7B822B7E7D /* MinSizeRel */,
				C78588DC8F1E481894DB9EB8 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		86B2BC90478442A29B8A3328 /* Build configuration list for PBXNativeTarget "test_suite_arc4" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FA7CE0C4D761453B985D562C /* Debug */,
				22E8907904A34E4F92420D79 /* Release */,
				AC811015AAD24C27AFF823F0 /* MinSizeRel */,
				31F9EE7D011041A1AC82403C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8F9B292EADAE4EC49E9B0D48 /* Build configuration list for PBXNativeTarget "test_suite_md" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DC350A101FF14543832CCD0C /* Debug */,
				9847245008724A83BA17B550 /* Release */,
				0DFEEF068A2C4E9FACC7D687 /* MinSizeRel */,
				1CEF3D19AA0244AE9351BE1E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		8FCED3B5502B49CDB4E3DB99 /* Build configuration list for PBXNativeTarget "test_suite_cipher.gcm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1A69B04D28E24D18807A6BF8 /* Debug */,
				9035F8232B9F4BC6948F633C /* Release */,
				3A6CB892EEB84788BE488795 /* MinSizeRel */,
				8FB27F71BEA848CCA220FB4E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		9052BEB1A69C49E0BB4B26DE /* Build configuration list for PBXAggregateTarget "install" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F0087143DF3744958DAD9A2E /* Debug */,
				9E67B9176A0043C586FD8CCA /* Release */,
				38D4E50F59E44E5CA53EDB43 /* MinSizeRel */,
				19AAE3017DAC4C008470379A /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		91495BFC8C2C413FBE021BE3 /* Build configuration list for PBXNativeTarget "test_suite_rsa" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7AAD1AEEC33945CEAD4B7740 /* Debug */,
				93B7EF1FE00E44258ADAFEC4 /* Release */,
				8E0B227F842045278F01233C /* MinSizeRel */,
				EA10AA1A520A4DC1914CAC86 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		92E82F5D140A416EA09A882A /* Build configuration list for PBXNativeTarget "benchmark" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E8FFF4ED4AAE45769212EF1F /* Debug */,
				7F608EED8F0F4EA787AC0244 /* Release */,
				CB1E7D4D983246F3A18E78E9 /* MinSizeRel */,
				1B2FEEAE355E464C948EC6F0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		938F89133EF94E8EAC61C0E3 /* Build configuration list for PBXNativeTarget "test_suite_aes.cfb" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DDC40996C3784AEA8027E479 /* Debug */,
				1BD211F450D24B6985D38DB5 /* Release */,
				FDE3714F6D4D432E8ECD615E /* MinSizeRel */,
				2A807BB04CC64290B20560AD /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		94B1CFD72C844E87923C4F42 /* Build configuration list for PBXProject "mbed TLS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3412AB45F7D248DA81ABCDEC /* Debug */,
				30C897FD33754B8B953DB4D8 /* Release */,
				BC4DC7F2F9854A9D9CE98981 /* MinSizeRel */,
				DDEE70C8625642A79E6585C0 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		96101EAF2B904CFC909D6E26 /* Build configuration list for PBXNativeTarget "test_suite_cmac" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F62E72ABBA6646228C6A955C /* Debug */,
				7824804A97534FEE9EE4549F /* Release */,
				4CA73D6D716D424C8E6C004C /* MinSizeRel */,
				07A230A57E534785A4722471 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A2D9DB43F7CE4CD4929229E3 /* Build configuration list for PBXNativeTarget "test_suite_mdx" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				631B21FC544343A99E3C9CCB /* Debug */,
				A602C706CB1146E5BCE3A15E /* Release */,
				2F04272D1180446A80E3931B /* MinSizeRel */,
				DB142FE939BF462BA1C1D8CB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A5E574DBB8594A24BB4A2516 /* Build configuration list for PBXNativeTarget "test_suite_gcm.aes128_en" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2191C65E692C45FD8DC85E19 /* Debug */,
				B005C9F89F014CC791708463 /* Release */,
				826F681B26AC4FC388B76EE1 /* MinSizeRel */,
				1CBA477C9F7C43238C729810 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		A9BEBA0727D04EF2826694B3 /* Build configuration list for PBXNativeTarget "test_suite_pkcs5" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8A4C54B785584286965206C9 /* Debug */,
				882C12CC96E04B38969BC85A /* Release */,
				F880622342D9443BBDF5B2BE /* MinSizeRel */,
				1381C10F7C5D4EC5870A4584 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		ADD0B8DD9DF3420AAE1A97A2 /* Build configuration list for PBXNativeTarget "selftest" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				698470DFC4F14680A7535162 /* Debug */,
				B4924B3852A34DAB923DDAA3 /* Release */,
				25A482055A40499484393858 /* MinSizeRel */,
				60DC5F40480D4496B135A740 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B098DEC3A7064D12A4AF8BF9 /* Build configuration list for PBXNativeTarget "test_suite_cipher.ccm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				6421B66D5F714AB6B3BA219D /* Debug */,
				735601D27B0D4126B10F1247 /* Release */,
				796D6C4CC65B455FAD506EF5 /* MinSizeRel */,
				B83F70409E3F418B84B25C27 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B1C31770FB14475A8FDC9000 /* Build configuration list for PBXNativeTarget "test_suite_ssl" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				08CFCA7E728448F0B1AD9BF3 /* Debug */,
				D4A8E2D652AD4564BEF19893 /* Release */,
				9B89BBE9EAF94E1E9F7B8BDC /* MinSizeRel */,
				7E8F6357498D4E35B799E968 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B314ADFC6AF44CC4A06F0AA6 /* Build configuration list for PBXNativeTarget "crl_app" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8CF2A9DD3B784DC2B579D4B7 /* Debug */,
				F346C96294E04EFFA832F94B /* Release */,
				64C72790BB7345C1815D1BAF /* MinSizeRel */,
				589D7BCD193B47278AE7B8D2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		B6B708CAF9694B80BAD478C5 /* Build configuration list for PBXNativeTarget "test_suite_pkwrite" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4720CE8C73C44F95845C1C2E /* Debug */,
				FB131CE3C2AF4BF796F9D9CF /* Release */,
				069A021EC8E74F6DA92E8DBE /* MinSizeRel */,
				AA616669F6164C0A8E2E22F4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BA93E6EAA70C4EB99B3E28E9 /* Build configuration list for PBXNativeTarget "test_suite_aes.rest" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				75819A2F9C6B4D1D90DB3508 /* Debug */,
				D60E660A8BE84BCEAB10D58D /* Release */,
				A6914C33634E4BE1BDF911B2 /* MinSizeRel */,
				ADCBF3BD615646709F94A0FB /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		BB0024EDD2294FAAA4C16D6F /* Build configuration list for PBXNativeTarget "test_suite_ctr_drbg" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				A9D23C3028FF4ADD8C97E357 /* Debug */,
				4DD5B2E549ED4284A4777284 /* Release */,
				BE14351050D64BC4A93D09E2 /* MinSizeRel */,
				A1C4B96395A84B36B3E466B5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C05B31A771544F509D727AA3 /* Build configuration list for PBXNativeTarget "test_suite_blowfish" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1B980394C7B54794BFEA7CBD /* Debug */,
				BC9C2C4A4F9942B292063ED4 /* Release */,
				627BA4D75DDA41EC8239661D /* MinSizeRel */,
				6432246C880B44EDA44C3B99 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C2C80B666D334DF48DA27641 /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.no_reseed" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				FD82B6726EA045D484EAF939 /* Debug */,
				939D5A8FDDD748B79A61D8A8 /* Release */,
				CCD5D8B22406422FB18C26D5 /* MinSizeRel */,
				6058453C701B42C78C10B6EF /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C526B5E607CC469EBE64C6F4 /* Build configuration list for PBXNativeTarget "cert_write" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C84D40AAD4AF4E1188D3A483 /* Debug */,
				F260B8A053BB48B9B6DF84A8 /* Release */,
				03D7C4ABA3624A53ADB058AF /* MinSizeRel */,
				BC17EE19F92149FCB2C710D1 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C5ABCFF677FA4E2AAD4049C9 /* Build configuration list for PBXNativeTarget "dtls_client" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F158BD1C7CAD40AA95941719 /* Debug */,
				BDFD5612B79A4E719774D60F /* Release */,
				C2790B5DFFFE4FD9BD41138C /* MinSizeRel */,
				AEB1EA808BCF4CEC9E7BC6A5 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C6FEFD252D15401F8692A15F /* Build configuration list for PBXAggregateTarget "lcov" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				69EDA800BE3F4A82A51AC0BE /* Debug */,
				D901104DF71D424280118E27 /* Release */,
				7176B0BC857F43B7A24F31A1 /* MinSizeRel */,
				2BD30921467840E9947CDCCE /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C886DDB5F5EC4771B965EA46 /* Build configuration list for PBXNativeTarget "pk_verify" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1B03312655FD4DF58A3DC3CD /* Debug */,
				EE9C7940EEC449C08AA1B9BE /* Release */,
				E137465A355C46B59F7CA195 /* MinSizeRel */,
				990C1BA2303D4762ADD6A4F4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C8BA9DB9B10E4B469D3AB40F /* Build configuration list for PBXNativeTarget "test_suite_mpi" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2429304B71DE45439226676D /* Debug */,
				46900604E9AC487CAC0B2456 /* Release */,
				5E875BD24FD9453CB599EF78 /* MinSizeRel */,
				ACD1E588E3194FC0993D6342 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CAA12E2DE549498CA24A0FA5 /* Build configuration list for PBXNativeTarget "test_suite_ecdh" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				F851743DE728463CB167EAA8 /* Debug */,
				3CF02C7C25AD407382C23C02 /* Release */,
				820E0BE2FFC749D499C30C16 /* MinSizeRel */,
				3440EEB5FDFF401985DB551B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		CBD97FC5390342B7A9705401 /* Build configuration list for PBXNativeTarget "crypt_and_hash" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B56094EED26B4BADB22A2789 /* Debug */,
				A493F66BA9A14DA2BD21E195 /* Release */,
				4846217F11944B2AB49F01E0 /* MinSizeRel */,
				A532D78FC39E445CB1C55180 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D08A0EEDC6BA4926A2354024 /* Build configuration list for PBXNativeTarget "test_suite_cipher.camellia" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E80B147A251246FAB83E64B2 /* Debug */,
				CFFE55B7E3C24A6DB18BCBD8 /* Release */,
				F0CCA92211914DD3BEC5D559 /* MinSizeRel */,
				67F20D3E210A47999CD9F7C3 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D2A59CE744FE4A038A2A76F2 /* Build configuration list for PBXNativeTarget "test_suite_aes.cbc" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				4DF3EF5C54B6451DB9C99783 /* Debug */,
				D2BEA60DA0D74FC8BC6EA695 /* Release */,
				B3650117412240C0ADFE23E4 /* MinSizeRel */,
				60F63D8CD62046218554BD77 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		D882413076514984AA723E6C /* Build configuration list for PBXNativeTarget "ssl_client2" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B1DA1F08D1E8400CB1C4AD70 /* Debug */,
				4357B0C8C45849D2999410EE /* Release */,
				887353290A8C4D85BBD4F216 /* MinSizeRel */,
				109A55B7685747D78A0181D4 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DAC8FC190032403CAC3536FD /* Build configuration list for PBXNativeTarget "pk_encrypt" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				854B265CEC2742F1840A3C09 /* Debug */,
				52C1A894EE4F4776B6530681 /* Release */,
				24E5358E6E8341E4AE6033E7 /* MinSizeRel */,
				483F60D670E34F7BA2D38C58 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DD4B3A3861B949C5A3DE96D4 /* Build configuration list for PBXNativeTarget "aescrypt2" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				0554BDC4E0EB416FA59A1F3D /* Debug */,
				8EE382AD50294CBB994DA26E /* Release */,
				EC6BBDCB243D40699B0D2EF5 /* MinSizeRel */,
				0DA56A01C5424F428E413A9B /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DD8EDB4389B64098816847DE /* Build configuration list for PBXAggregateTarget "apidoc" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7580F1CC34DB4D1AB69B51C7 /* Debug */,
				8E8FDB531AA447D4A43C61A9 /* Release */,
				7E50E09492114B1F8C33AC31 /* MinSizeRel */,
				29279C482008439CA0ACA833 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		DE72E3CAA7BE4A10990DB0F6 /* Build configuration list for PBXNativeTarget "test_suite_x509write" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				117276EDE4B741E585B575C3 /* Debug */,
				FEC967F5E5854CED942B71BE /* Release */,
				6083E58614FA4CA38588894A /* MinSizeRel */,
				9E78D8160E684A859D3C7F4D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E121B865985C4B7BA2C786D1 /* Build configuration list for PBXNativeTarget "rsa_sign" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8FFAFE5C9F4C421F9A78108E /* Debug */,
				006BB9CE421A43ACA0393F19 /* Release */,
				F6A0F24714FF4AF3A2D79C3C /* MinSizeRel */,
				467E66B93FC349918F009497 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E3B005B92B2D492EAC57384F /* Build configuration list for PBXNativeTarget "test_suite_hmac_drbg.pr" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				7CA979B73B2C4546B766B9EF /* Debug */,
				3731C057D56540EDACF26176 /* Release */,
				3FC990653F2B4D3EAF8BC4ED /* MinSizeRel */,
				B856E9C375BE48A883EC61B2 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E3E669C59E674DEDAE461644 /* Build configuration list for PBXNativeTarget "test_suite_dhm" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3C511325F068408ABB443883 /* Debug */,
				76AB7E1D6A4C4E4381A5139E /* Release */,
				1BE0552581C84DF9837ADD39 /* MinSizeRel */,
				2EAE4260B748480E8AE2F781 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		E71D52FD96AA4CFDB26CAD77 /* Build configuration list for PBXNativeTarget "ssl_mail_client" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				DA8249C3C07349BAB7633A6F /* Debug */,
				AE825F2142EC451A8863E3ED /* Release */,
				8A9D687AB1A24798BAE9BA79 /* MinSizeRel */,
				D697B0AA9249453D983E2F62 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EB1297048BEB434DBBAF0670 /* Build configuration list for PBXNativeTarget "dh_client" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				BA0CA1BD1447404BA8FC2F65 /* Debug */,
				C4E306E3320347E395F3C983 /* Release */,
				D72C7CA02ECC4996AB895DD8 /* MinSizeRel */,
				AE444B52E9BC44528E66431D /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		EED0A064D1AF4E4DA69A9E98 /* Build configuration list for PBXNativeTarget "test_suite_pkcs1_v15" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				29A87C435B674628992F49B1 /* Debug */,
				155266E86ACE47C6AD129BCF /* Release */,
				7C397066CADB4FECB0895C70 /* MinSizeRel */,
				8DFC2BCA081140DCAE09C25E /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F303FA01B9F94564ADD85733 /* Build configuration list for PBXNativeTarget "rsa_verify" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				59458E515C6B469180D41C1F /* Debug */,
				E98DE662735A455DBAFB4249 /* Release */,
				DB905AF6EBC6448F8C64AC72 /* MinSizeRel */,
				BDC61CAFA28C477A86836AD6 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F39A0C96DCAD4D65B1AE39EF /* Build configuration list for PBXNativeTarget "mbedx509" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				1FF315E7325D4292847172A9 /* Debug */,
				4DCE9800AF9A4C7282BE9B69 /* Release */,
				89201D67831E436A857EB23F /* MinSizeRel */,
				381A626E9AED4B549527EF5F /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		F595458D278B4242BDFBA1FA /* Build configuration list for PBXNativeTarget "gen_entropy" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E53B98A914B64DF6A52F0824 /* Debug */,
				57D4E41949574719BDC1FD85 /* Release */,
				62670EA3ED9246699DB09EDC /* MinSizeRel */,
				BDAF318A910641F4A2033921 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FA2B0C46F43E443DA2ACE3D7 /* Build configuration list for PBXNativeTarget "test_suite_cipher.des" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B258DD16509B4EF2A18A4ADF /* Debug */,
				9149523518CE4D4F951BCDE2 /* Release */,
				49D93894347141A4A9447A83 /* MinSizeRel */,
				8E09962C585D49A495FA135C /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		FF9940B1D5D14F1C9A664DD6 /* Build configuration list for PBXNativeTarget "test_suite_cipher.aes" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				D3ABC9C41E024541AB989844 /* Debug */,
				9D9DAF3574C84A8F912DB991 /* Release */,
				32C41DE3268544398E5BC893 /* MinSizeRel */,
				9B76D403A49A41D9A3B71928 /* RelWithDebInfo */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = DB66AD163D444739BEFC5D1F /* Project object */;
}
